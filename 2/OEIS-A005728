#!/usr/bin/env raku
#u# https://oeis.org/A005728
#c# 2023-03-12 NOT ON RC
#m# MOAR: OK
#j#  JVM: OK
#n# modified from ~/PWC/159/1/bruce-gray.raku
#n# OEIS:A005728 number of fractions in Farey series of order n

sub farey_sequence ( UInt $n --> Seq ) {
    sub next_fs ( Rat $ab, Rat $cd --> Rat ) {
        my $k = ($n + $ab.denominator)
                  div $cd.denominator;

        return ($k × $cd.numerator   - $ab.numerator  )
             / ($k × $cd.denominator - $ab.denominator);
    }

    return 0/1, 1/$n, &next_fs ... 1/1;
}

my @tests =
    1 => (0/1, 1/1),
    2 => (0/1, 1/2, 1/1),
    3 => (0/1, 1/3, 1/2, 2/3, 1/1),
    4 => (0/1, 1/4, 1/3, 1/2, 2/3, 3/4, 1/1),
    5 => (0/1, 1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 1/1),
    7 => (0/1, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 2/5, 3/7, 1/2, 4/7, 3/5, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 1/1),
;

use Test;
my @res;
plan 1; #+@tests;
for @tests -> ( :key($in), :value(@expected) ) {
    my @got = farey_sequence($in);
    @res.push: @got.elems;
   #is-deeply @got, [@expected], "Farey Sequence $in";
    put @got.map: *.nude.join('/');
}
is @res.join(' '), '2 3 5 7 11 19'; # skipping 1st term
