#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unbias_a_random_generator
#c# 2016-01-06 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2022-11-02 replace call to built-in 'rand' for output stability

use myRNG;
my $rng = myRNG.new( :seed(123456) );

sub randN ( $n where 3..6 ) {
    return ( $n×$rng.next-rat / ($n - 1) ).Int;
}

sub unbiased ( $n where 3..6 ) {
    my $n1;
    repeat { $n1 = randN($n) } until $n1 != randN($n);
    return $n1;
}

my @res;
my $iterations = 1000;
for 3 .. 6 -> $n {
    my ( @raw, @fixed );
    for ^$iterations {
        @raw[      randN($n) ]++;
        @fixed[ unbiased($n) ]++;
    }
    @res.push: sprintf "N=%d   randN:%s,%4.1f%%   unbiased:%s,%4.1f%%",
        $n, map { .raku, .[1] × 100 / $iterations }, @raw, @fixed;
}

.say for @res;

my $ref = qq:to/END/;
N=3   randN:[652, 348],34.8%   unbiased:[507, 493],49.3%
N=4   randN:[740, 260],26.0%   unbiased:[501, 499],49.9%
N=5   randN:[784, 216],21.6%   unbiased:[516, 484],48.4%
N=6   randN:[831, 169],16.9%   unbiased:[506, 494],49.4%
END

use Test;
is @res.join("\n"), chomp $ref;
