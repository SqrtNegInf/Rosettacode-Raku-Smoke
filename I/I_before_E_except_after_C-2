#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/I_before_E_except_after_C
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# with JVM 2021.12, now works
#n# 2020-11-15 FIXED: thundergnat++, the necessary coercion is '+$<freq>'
#n#            error was: Impossible coercion from 'CollectWords' into 'Num:D': method Num returned an instance of BOOTNum

# This solution uses grammars and actions to parse the given file, the Bag for tallying up occurrences of each possible thing we're looking for ("ie", "ei", "cie", and "cei"), and junctions to determine the plausibility of a phrase from the subphrases. 

grammar CollectWords {
    token TOP {
        ^^ \t Word \t PoS \t Freq $$ \n
        [^^ <word> $$ \n?]+
    }

    token word {
        \t+
        [ <with_c> | <no_c> | \T ]+ \t+
        \T+ \t+ # PoS doesn't matter to us, so ignore it
        $<freq>=[<.digit>+] \h*
    }

    token with_c {
        c <ie_part>
    }

    token no_c {
        <ie_part>
    }

    token ie_part {
        ie | ei
    }
}

class CollectWords::Actions {
    method TOP($/) {
        make $<word>».ast.flat.Bag;
    }

    method word($/) {
        if $<with_c> + $<no_c> {
            make (($<with_c>, $<no_c>) xx +$<freq>).flat».ast;
            #make ($<with_c>, $<no_c>).flat».ast xx +$<freq>;
            #make (flat $<with_c>, $<no_c>)».ast xx +$<freq>;
            #make flat ($<with_c>».ast, $<no_c>».ast) xx +$<freq>;
            #make flat $<with_c>».ast xx +$<freq>, $<no_c>».ast xx +$<freq>; # original
        } else {
            make ();
        }
    }

    method with_c($/) {
        make "c" ~ $<ie_part>;
    }

    method no_c($/) {
        make "!c" ~ $<ie_part>;
    }
}

my @res;
sub plausible($good, $bad, $msg) {
    if $good > 2×$bad {
        @res.push: "$msg: PLAUSIBLE ($good ✔ vs. $bad ✘)";
        return True;
    } else {
        @res.push: "$msg: NOT PLAUSIBLE ($good ✔ vs. $bad ✘)";
        return False;
    }
}

# can't use .parsefile like before due to the non-Unicode £ in this file.
my $file = slurp("ref/1_2_all_freq.txt", :enc<iso-8859-1>);
my $results = CollectWords.parse($file, :actions(CollectWords::Actions)).ast;

my $phrasetest = [&] plausible($results<!cie>, $results<!cei>, "I before E when not preceded by C"),
                     plausible($results<cei>, $results<cie>, "E before I when preceded by C");

say "I before E except after C: " ~ $phrasetest ?? "PLAUSIBLE" !! "NOT PLAUSIBLE";
my $test-result = $phrasetest ?? "PLAUSIBLE" !! "NOT PLAUSIBLE";
@res.push: "I before E except after C: $test-result";

.say for @res;

my $ref = qq:to/END/;
I before E when not preceded by C: NOT PLAUSIBLE (8222 ✔ vs. 4826 ✘)
E before I when preceded by C: NOT PLAUSIBLE (327 ✔ vs. 994 ✘)
I before E except after C: NOT PLAUSIBLE
END

use Test;
is @res.join("\n"), chomp $ref;
