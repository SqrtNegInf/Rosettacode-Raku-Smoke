#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cholesky_decomposition
#c# 2016-01-26 <RC, 2022-08-18 >RC
#m# MOAR: OK
#j#  JVM: OK

sub cholesky(@A) {
    my @L = @A »×» 0;
    for ^@A -> \i {
	    for 0..i -> \j {
	        @L[i;j] = (i == j ?? &sqrt !! 1/@L[j;j] × * )\      # select function
                      (@A[i;j] - [+] (@L[i;*] Z× @L[j;*])[^j])  # provide value
	    }
    }
    @L
}

my @res.push: $_ for cholesky 
(
    [25],
    [15, 18],
    [-5,  0, 11],
);

@res.push: sprintf $_>>.round(.0000000000001) for cholesky 
(
    [18, 22,  54,  42],       
    [22, 70,  86,  62],
    [54, 86, 174, 134],       
    [42, 62, 134, 106],
);

.say for @res;

my $ref = qq:to/END/;
5
3 3
-1 1 3
4.2426406871193 0 0 0
5.1854497287013 6.5659052011974 0 0
12.7279220613579 3.0460384954009 1.6497422479091 0
9.8994949366117 1.6245538642138 1.8497110052314 1.3926212476456
END

use Test;
is @res.join("\n"), chomp $ref;
