#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_occurrences_of_a_substring
#c# 2016-05-12 <RC, 2018-04-01 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-13 changed to non-overlapping

sub count-substring($big,$little) { +$big.comb: ~$little }

say count-substring("the three truths","th");
say count-substring("ababababab","abab");
say count-substring(123123123,12);

# The ~ prefix operator converts $little to a Str if it isn't already, and .comb when given a Str as an argument returns instances of that substring. You can think of it as if the argument was a regex that matched the string literally /$little/. Also, prefix + forces numeric context in Perl 6 (it's a no-op in Perl 5). For the built in listy types that is the same as calling .elems method. One other style point: we now tend to prefer hyphenated names over camelCase.

use Test;
is count-substring("the three truths","th"), 3;
is count-substring("ababababab","abab"), 2; #4;
is count-substring(123123123,12), 3;
