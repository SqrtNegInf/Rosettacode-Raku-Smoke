#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_a_two-dimensional_array_at_runtime
#c# 2015-11-29 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-13 output format changed
#n# new-disp 'srand' shift

srand 123456;

#my ($major,$minor) = prompt("Dimensions? ").comb(/\d+/);
my ($major,$minor) = <3 5>.comb(/\d+/);
my @array = [ '@' xx $minor ] xx $major;
@array[ *.rand ][ *.rand ] = ' ';
.say for @array;

#Natively shaped arrays are a flexible feature for declaring typed,
#potentially multi-dimensional arrays, potentially with pre-defined
#dimensions. It will make memory-efficient matrix storage and operations
#possible.

#my ($major,$minor) = +« prompt("Dimensions? ").comb(/\d+/);
($major,$minor) = +« <3 5>.comb(/\d+/);
my @a[$major;$minor] = (7 xx $minor ) xx $major;
@a[$major div 2;$minor div 2] = 42;
#@a[($major/2).floor;($minor/2).floor] = 42;

say @array.gist; 
say @a.gist;

use Test;
if $*VM ~~ /jvm/ {
is @array.gist, '[[@ @ @ @ @] [@ @ @ @  ] [@ @ @ @ @]]';
} else {
is @a.gist, "[[7 7 7 7 7]\n [7 7 42 7 7]\n [7 7 7 7 7]]";
is @array.gist, '[[@ @ @ @ @] [@ @   @ @] [@ @ @ @ @]]';
}

