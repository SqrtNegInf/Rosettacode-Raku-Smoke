#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Card_shuffles
#c# 2016-05-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# srand drift for JVM fixed

srand 123456;

sub overhand ( @cards ) {
    my @splits = roll 10, ^( @cards.elems div 5 )+1;
    @cards.rotor( @splits, :partial ).reverse.flat
}

sub riffle ( @pile is copy ) {
    my @pile2 = @pile.splice: @pile.elems div 2 ;

    roundrobin(
        @pile .rotor( (1 .. 3).roll(7), :partial ),
        @pile2.rotor( (1 .. 3).roll(9), :partial ),
    ).flat
}

my @cards = ^20;
@cards .= &overhand for ^10;
put @cards;

my @cards2 = ^20;
@cards2 .= &riffle for ^10;
put @cards2;

put my $cards3 = (^20).pick(*);

use Test;
if $*VM ~~ /jvm/ {
is @cards,  '10 3 0 2 9 4 5 1 6 7 16 19 8 18 11 14 13 15 12 17';
#is @cards2, '0 11 4 3 16 17 13 2 6 1 5 14 12 15 19 18 8 9 7 10';
#is $cards3, '7 8 11 16 15 4 10 17 3 13 9 0 14 1 6 5 19 2 18 12';
is @cards2, '0 10 14 15 11 5 7 3 4 8 18 1 16 19 17 6 2 9 13 12';    # 2022-01-29, JVM 2021.12
is $cards3, '14 1 6 15 11 19 2 13 0 12 17 8 16 5 18 9 7 3 10 4';    # 2022-01-29, JVM 2021.12

} else {

is @cards,  '2 3 0 5 11 1 12 7 16 18 10 6 15 8 19 9 14 4 13 17';
is @cards2, '0 18 7 17 9 14 19 10 12 6 5 15 2 8 3 1 4 13 11 16';
is $cards3, '6 7 12 19 0 4 17 2 15 9 5 14 1 10 18 16 11 13 8 3';
}

