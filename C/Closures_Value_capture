#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Closures/Value_capture
#c# 2015-12-20 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# just keep items order, cause it doesn't really matter anyhow

# All blocks are anonymous closures in Raku, and parameters are lexicals,
# so it's easy to generate a list of them. We'll use a gather/take generator loop

my @c = gather for ^10 -> $i {
    take { $i × $i }
}

my @res1.push: .() for @c; #.pick(*);  # XX call them in random order XX
.say for @res1;

# Or equivalently, using a more functional notation:
# my @res2.push: .() for pick *, map -> $i { -> {$i × $i} }, ^10;
my @res2.push: .() for { map {$_ × $_}, ^10 };

my $ref1 = qq:to/END/;
0
1
4
9
16
25
36
49
64
81
END

my $ref2 = qq:to/END/;
0 1 4 9 16 25 36 49 64 81
END

use Test;

is @res1.join("\n"), chomp $ref1;
is @res2.join("\n"), chomp $ref2;
