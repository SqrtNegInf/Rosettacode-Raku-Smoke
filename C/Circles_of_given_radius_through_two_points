#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Circles_of_given_radius_through_two_points
#c# 2016-04-17 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

multi sub circles (@A, @B where ([and] @A Z== @B), 0.0) { 'Degenerate point' }
multi sub circles (@A, @B where ([and] @A Z== @B), $)   { 'Infinitely many share a point' }
multi sub circles (@A, @B, $radius) {
    my @middle = (@A Z+ @B) X/ 2;
    my @diff = @A Z- @B;
    my $q = sqrt [+] @diff»²;
    return 'Too far apart' if $q > $radius × 2;

    my @orth = -@diff[0], @diff[1] X× sqrt($radius² - ($q/2)²) / $q;
    return (@middle Z+ @orth), (@middle Z- @orth);
}

my @input =
    ([0.1234, 0.9876],  [0.8765, 0.2345],   2.0),
    ([0.0000, 2.0000],  [0.0000, 0.0000],   1.0),
    ([0.1234, 0.9876],  [0.1234, 0.9876],   2.0),
    ([0.1234, 0.9876],  [0.8765, 0.2345],   0.5),
    ([0.1234, 0.9876],  [0.1234, 0.9876],   0.0),
    ;

my @res1.push: (.list.raku, ': ', circles(|$_).join: ' and ') for @input;
.say for @res1; 

my $ref1 = qq:to/END/;
([0.1234, 0.9876], [0.8765, 0.2345], 2.0) :  1.8631118016581891 1.974211801658189 and -0.8632118016581892 -0.7521118016581892
([0.0, 2.0], [0.0, 0.0], 1.0) :  0 1 and 0 1
([0.1234, 0.9876], [0.1234, 0.9876], 2.0) :  Infinitely many share a point
([0.1234, 0.9876], [0.8765, 0.2345], 0.5) :  Too far apart
([0.1234, 0.9876], [0.1234, 0.9876], 0.0) :  Degenerate point
END

use Test;
is @res1.join("\n"), chomp $ref1;

# Another possibility is to use the Complex plane,
# for it often makes calculations easier with plane geometry:

multi sub circles ($a, $b where $a == $b, 0.0) { 'Degenerate point' }
multi sub circles ($a, $b where $a == $b, $)   { 'Infinitely many share a point' }
multi sub circles ($a, $b, $r) {
    my $h = ($b - $a) / 2;
    my $l = sqrt($r² - $h.abs²); # **2);
    return 'Too far apart' if $l.isNaN;
    return map { $a + $h + $l × $_ × $h / $h.abs }, i, -i;
}

@input =
    (0.1234 + 0.9876i,  0.8765 + 0.2345i,   2.0),
    (0.0000 + 2.0000i,  0.0000 + 0.0000i,   1.0),
    (0.1234 + 0.9876i,  0.1234 + 0.9876i,   2.0),
    (0.1234 + 0.9876i,  0.8765 + 0.2345i,   0.5),
    (0.1234 + 0.9876i,  0.1234 + 0.9876i,   0.0),
    ;

my @res2.push: (.join(', '), ': ', circles(|$_).join: ' and ') for @input;
.say for @res2; 

my $ref2 = qq:to/END/;
0.1234+0.9876i, 0.8765+0.2345i, 2 :  1.8631118016581896+1.974211801658189i and -0.8632118016581894-0.7521118016581892i
0+2i, 0+0i, 1 :  0+1i and 0+1i
0.1234+0.9876i, 0.1234+0.9876i, 2 :  Infinitely many share a point
0.1234+0.9876i, 0.8765+0.2345i, 0.5 :  Too far apart
0.1234+0.9876i, 0.1234+0.9876i, 0 :  Degenerate point
END

is @res2.join("\n"), chomp $ref2;
