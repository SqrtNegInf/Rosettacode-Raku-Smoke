#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Color_wheel
#t# graphical
#c# 2016-08-23 <RC, 2018-09-26 <RC, 2018-11-05 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: color-wheel-perl6.png

BEGIN { die 'ecosystem...' if $*VM ~~ /jvm/; }  # wait for zef-j

use Image::PNG::Portable;

my ($w, $h) = 300, 300;

my $out = Image::PNG::Portable.new: :width($w), :height($h), :alpha(False);

my $center = $w/2 + $h/2×i;

color-wheel($out);

$out.write: 'run/color-wheel-perl6.png';

sub color-wheel ( $png ) {
    ^$w .race.map: -> $x {
        for ^$h -> $y {
            my $vector    = $center - $x - $y×i;
            my $magnitude = $vector.abs × 2 / $w;
            my $direction = ( π + atan2( |$vector.reals ) ) / τ;
            $png.set: $x, $y, |hsv2rgb( $direction, $magnitude, $magnitude < 1 );
        }
    }
}

sub hsv2rgb ( $h, $s, $v ){
    my $c = $v × $s;
    my $x = $c × (1 - abs( (($h×6) % 2) - 1 ) );
    my $m = $v - $c;
    (do given $h {
        when   0..^1/6 { $c, $x, 0 }
        when 1/6..^1/3 { $x, $c, 0 }
        when 1/3..^1/2 { 0, $c, $x }
        when 1/2..^2/3 { 0, $x, $c }
        when 2/3..^5/6 { $x, 0, $c }
        when 5/6..1    { $c, 0, $x }
    } ).map: ((*+$m) × 255).Int
}
