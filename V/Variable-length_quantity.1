#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Variable-length_quantity
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

sub vlq_encode ($number is copy) {
    my $string = '';
    my $t = 0x7F +& $number;
    $number +>= 7;
    $string [R~]= $t.chr;
    while ($number) {
       $t = 0x7F +& $number;
       $string [R~]= (0x80 +| $t).chr;
       $number +>= 7; 
    }
    return $string;
}

sub vlq_decode ($string is copy) {
    my $number = '0b';
    for $string.ords -> $oct {
        $number ~= ($oct +& 0x7F).fmt("%07b");
    }
    return :2($number);
}

my %ref = (
      0 => '       0           00        0',
    0xa => '      10           0A       10',
    123 => '     123           7B      123',
    254 => '     254        81:7E      254',
    255 => '     255        81:7F      255',
    256 => '     256        82:00      256',
    257 => '     257        82:01      257',
  65534 => '   65534     83:FF:7E    65534',
  65535 => '   65535     83:FF:7F    65535',
  65536 => '   65536     84:80:00    65536',
  65537 => '   65537     84:80:01    65537',
0x1fffff=> ' 2097151     FF:FF:7F  2097151',
0x200000=> ' 2097152  81:80:80:00  2097152',
);

use Test;

for (
    0,   0xa,   123,   254,   255,   256,
    257, 65534, 65535, 65536, 65537, 0x1fffff,
    0x200000
 ) -> $testcase {
    my $encoded = vlq_encode($testcase);
    my $res = sprintf "%8s%13s%9s", $testcase,
      ( join ':', $encoded.ords>>.fmt("%02X") ),
      vlq_decode($encoded);
    is $res, %ref{$testcase}, "$res";
}

