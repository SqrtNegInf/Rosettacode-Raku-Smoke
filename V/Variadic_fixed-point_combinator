#!/usr/bin/env raku
#u# https://www.rosettacode.org/wiki/Variadic_fixed-point_combinator
#c# 2024-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

my &Y = -> \a { a.map: -> \f { -> &x { -> { x(Y(a)) } }(f) } }

my \even_odd_fix = -> \f { -> \n { n == 0  or f[1]()(n - 1) } },
                   -> \f { -> \n { n != 0 and f[0]()(n - 1) } };

my \collatz_fix = -> \f { -> \n, \d { n == 1 ?? d !! f[(n % 2)+1]()(n, d+1) } },
                  -> \f { -> \n, \d { f[0]()( n div 2, d ) } }, 
                  -> \f { -> \n, \d { f[0]()(   3*n+1, d ) } };

my \even_odd = Y(even_odd_fix).map: -> &f { f() }; # or { $_() }
my &collatz  = Y(collatz_fix)[0]();

for 1..10 -> \i {
   my ( \e, \o, \c ) = even_odd[0](i), even_odd[1](i), collatz(i, 0);
   @res.push: sprintf "%2d: Even: %s  Odd: %s  Collatz: %s", i, e, o, c
}

.say for @res;

my $ref = q:to/END/;
 1: Even: False  Odd: True  Collatz: 0
 2: Even: True  Odd: False  Collatz: 1
 3: Even: False  Odd: True  Collatz: 7
 4: Even: True  Odd: False  Collatz: 2
 5: Even: False  Odd: True  Collatz: 5
 6: Even: True  Odd: False  Collatz: 8
 7: Even: False  Odd: True  Collatz: 16
 8: Even: True  Odd: False  Collatz: 3
 9: Even: False  Odd: True  Collatz: 19
10: Even: True  Odd: False  Collatz: 6
END

use Test;
is @res.join("\n"), chomp $ref;
