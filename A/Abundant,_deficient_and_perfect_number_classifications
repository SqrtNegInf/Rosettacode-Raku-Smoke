#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abundant,_deficient_and_perfect_number_classifications
#c# 2016-01-02 <>RC, 2019-02-15 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# OEIS:A005100 deficient - sum of divisors of k < 2×k
#n# OEIS:A000396   perfect - k is equal to the sum of the proper divisors of k
#n# OEIS:A005101  abundant - sum of divisors of k > 2×k

sub propdivsum (\x) {
    my @l = 1 if x > 1;
    (2 .. x.sqrt.floor).map: -> \d {
        unless x % d { @l.push: d; my \y = x div d; @l.push: y if y != d }
    }
    sum @l
}

say bag (1..20000).map: { propdivsum($_) <=> $_ }

say my @out = sort bag map { propdivsum($_) <=> $_ }, 1..20000;

use Test;
is @out.gist, '[Bag(Less(15043) More(4953) Same(4))]';
