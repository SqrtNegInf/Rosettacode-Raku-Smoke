#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Algebraic_data_types
#c# 2015-10-12 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2022-05-24 was 'Pattern_matching'

srand 12345;

enum RedBlack <R B>;

multi balance(B,[R,[R,$a,$x,$b],$y,$c],$z,$d) { [R,[B,$a,$x,$b],$y,[B,$c,$z,$d]] }
multi balance(B,[R,$a,$x,[R,$b,$y,$c]],$z,$d) { [R,[B,$a,$x,$b],$y,[B,$c,$z,$d]] }
multi balance(B,$a,$x,[R,[R,$b,$y,$c],$z,$d]) { [R,[B,$a,$x,$b],$y,[B,$c,$z,$d]] }
multi balance(B,$a,$x,[R,$b,$y,[R,$c,$z,$d]]) { [R,[B,$a,$x,$b],$y,[B,$c,$z,$d]] }

multi balance($col, $a, $x, $b) { [$col, $a, $x, $b] }

multi ins( $x, @s [$col, $a, $y, $b] ) {
    when $x before $y     { balance $col, ins($x, $a), $y, $b }
    when $x after $y      { balance $col, $a, $y, ins($x, $b) }
    default               { @s }
}
multi ins( $x, Any:U ) { [R, Any, $x, Any] }

multi insert( $x, $s ) {
    [B, |ins($x,$s)[1..3]];
}

my $t = Any;
$t = insert($_, $t) for <6 4 1 10 5 2 9 3 8 7>; # (1..10).pick(*); # remove random
say $t.gist; 

use Test;
is $t.gist, '[B [B [R [B (Any) 1 (Any)] 2 [B (Any) 3 (Any)]] 4 [B [R (Any) 5 (Any)] 6 (Any)]] 7 [B [B (Any) 8 (Any)] 9 [B (Any) 10 (Any)]]]';
