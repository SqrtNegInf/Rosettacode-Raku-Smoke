#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Mode
#c# 2016-02-13 <RC, 2019-02-05 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'mode2' not on RC
#n# oops, wasn't testing 'mode3', so fix that, and just for fun convert to method, as per: 
#n# https://zostay.com/archive/2019/10/03/quickly-using-a-sub-as-a-method.html

sub mode1 (*@a) {
   #my %counts := @a.Bag;           # := why?
    my %counts := @a.Bag;
    my $max = %counts.values.max;
    %counts.grep(*.value == $max).map(*.key);
}

sub mode2 (*@a) {
    my %counts;
    ++%counts{$_} for @a;
    my $max = max values %counts;
    map { .key }, grep { .value == $max }, %counts.pairs;
}

sub mode3 (*@a) {
    @a.Bag                # count elements
      .classify(*.value)  # group elements with the same count
      .max(*.key)         # get group with the highest count
      .value.map(*.key);  # get elements in the group
}

my @res1 = mode1 [1, 3, 6, 6, 6, 6, 7, 7, 12, 12, 17];
@res1.push: sort mode1 [1, 1, 2, 4, 4];
.say for @res1;

my @res2 = mode2(1, 3, 6, 6, 6, 6, 7, 7, 12, 12, 17);
@res2.push: sort mode2 [1, 1, 2, 4, 4];

my @res3 = <1 3 6 6 6 6 7 7 12 12 17>.&mode3;
@res3.push: sort [1, 1, 2, 4, 4].&mode3;

my $ref = q:to/END/;
6
1 4
END

use Test;
is @res1.join("\n"), chomp $ref;
is @res2.join("\n"), chomp $ref;
is @res3.join("\n"), chomp $ref;
