#!/usr/bin/env raku
#u# https://rosettacode.org/wiki/Anaprimes
#c# 2023-02-01 <RC,  2023-02-27 <RC, 2023-03-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# skip ' <1000' groups, as 3 candidates, any could be reported
#n# skip '<10000' groups, as 2 candidates, either could be reported
#n# OEIS:A046890 a(n) is the least integer that has exactly n anagrams that are primes.
#n# many OEIS sequences touch on this group, but none exactly

my @res;

use Lingua::EN::Numbers;
use Math::Primesieve;
use List::Allmax;

my $p = Math::Primesieve.new;

for 3 .. 7 {
    my @largest = $p.primes(10**($_-1), 10**$_).classify(*.comb.sort.join).List.&all-max(:by(+*.value)).values;

    @res.push: "\nLargest group of anaprimes before {cardinal 10 ** $_}: {+@largest[0].value} members.";
    @res.push: 'First: ', ' Last: ' Z~ .value[0, *-1] for sort @largest;
}

.say for @res;

my $ref = q:to/END/;

Largest group of anaprimes before one thousand: 4 members.
First: 149  Last: 941
First: 179  Last: 971
First: 379  Last: 937

Largest group of anaprimes before ten thousand: 11 members.
First: 1237  Last: 7321
First: 1279  Last: 9721

Largest group of anaprimes before one hundred thousand: 39 members.
First: 13789  Last: 98731

Largest group of anaprimes before one million: 148 members.
First: 123479  Last: 974213

Largest group of anaprimes before ten million: 731 members.
First: 1235789  Last: 9875321
END

use Test;
is @res.join("\n"), chomp $ref;
