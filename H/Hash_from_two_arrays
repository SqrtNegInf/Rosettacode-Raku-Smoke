#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hash_from_two_arrays
#c# 2016-08-23 <RC
#m# MOAR: OK
#j#  JVM: OK

use Test;

my $ref = '{a => 0, b => 1, c => 2, d => 3, e => 4}';

my @keys = <a b c d e>;
my @values = ^5;

# 1. Using the "zipwith" meta-operator on the => pair composer:
my %hash1 = @keys Z=> @values;
say %hash1; 
is %hash1.gist, $ref;

# 2. By assigning to a hash slice:
my %hash2;
%hash2{@keys} = @values;
is %hash2.gist, $ref;

# 3. To create an anonymous hash:
is %( @keys Z=> @values ).gist, $ref;

# 4. Enforce equal lengths with hyperoperator instead: 
#   (fails if the lists differ in length)
is %(@keys »=>« @values).gist, $ref;
is %(@keys «=>» @values).gist, $ref;
is %(@keys »=>» @values).gist, $ref;
is %(@keys «=>« @values).gist, $ref;
