#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hamming_numbers
#c# 2019-04-19 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# OEIS:A051037

my @res;

# Iterative version
# This version uses a lazy list, storing a maximum of two extra value from the highest index requested

my \Hammings = gather {
  my %i = 2, 3, 5 Z=> (Hammings.iterator for ^3);
  my %n = 2, 3, 5 Z=> 1 xx 3;

  loop {
    take my $n = %n{2, 3, 5}.min;

    for 2, 3, 5 -> \k {
      %n{k} = %i{k}.pull-one Ã— k if %n{k} == $n;
    }
  }
}

@res.push: Hammings.[^20];
@res.push: Hammings.[1691 - 1];
@res.push: Hammings.[1000000 - 1];

.say for @res;

my $ref = q:to/END/;
1 2 3 4 5 6 8 9 10 12 15 16 18 20 24 25 27 30 32 36
2125764000
519312780448388736089589843750000000000000000000000000000000000000000000000000000000
END

use Test;
is @res.join("\n"), chomp $ref;
