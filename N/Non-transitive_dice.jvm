#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Non-transitive_dice
#c# 2020-12-26 <RC, 2020-12-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

my @res;

my @dicepool = ^4 xx 4 ;

sub FaceCombs(\N, @dp) { # for brevity, changed to use 0-based dice on input
   my @res = my @found = [];
   for [X] @dp {
      unless @found[ my \key = [+] ( N «**« (N-1…0) ) Z× .sort ] {
         @found[key] = True;
         @res.push: $_ »+» 1
      }
   }
   @res
}

sub infix:<⚖️>(@x, @y) {
   my \b = (@x X<=> @y).Bag;
   +(b{Less} <=> b{More})
}

sub findIntransitive(\N, \cs) {
   my @res = [];
   for [X] ^+cs xx N -> @die {
      my $skip = False;
      for @die[0..*].rotor(2 => -1) -> @p {
         { $skip = True and last } unless cs[@p[0]] ⚖️ cs[@p[1]] == -1
      }
      next if $skip;
      if cs[@die[0]] ⚖️ cs[@die[*-1]] == 1 { @res.push: [ cs[@die[0..*]] ] }
   }
   @res
}

@res.push: "Number of eligible 4-faced dice : " ~ +(my \combs = FaceCombs(4,@dicepool));
for 3 { #, 4 {
   my @output = findIntransitive($_, combs);
   @res.push: +@output ~ " ordered lists of $_ non-transitive dice found, namely:";
   @res.push: $_.gist for @output;
}

.say for @res;

my $ref = q:to/END/;
Number of eligible 4-faced dice : 35
3 ordered lists of 3 non-transitive dice found, namely:
[(1 1 4 4) (1 3 3 3) (2 2 2 4)]
[(1 3 3 3) (2 2 2 4) (1 1 4 4)]
[(2 2 2 4) (1 1 4 4) (1 3 3 3)]
END

use Test;
is @res.join("\n"), chomp $ref;

#`{{
Number of eligible 4-faced dice : 35
3 ordered lists of 3 non-transitive dice found, namely:
[(1 1 4 4) (2 2 2 4) (1 3 3 3)]
[(1 3 3 3) (1 1 4 4) (2 2 2 4)]
[(2 2 2 4) (1 3 3 3) (1 1 4 4)]
4 ordered lists of 4 non-transitive dice found, namely:
[(1 1 4 4) (2 2 2 4) (2 2 3 3) (1 3 3 3)]
[(1 3 3 3) (1 1 4 4) (2 2 2 4) (2 2 3 3)]
[(2 2 2 4) (2 2 3 3) (1 3 3 3) (1 1 4 4)]
[(2 2 3 3) (1 3 3 3) (1 1 4 4) (2 2 2 4)]
END
}}
