#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Narcissistic_decimal_number
#c# 2015-12-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A005188
#n# naive implementation, it works but takes ages.

sub is-narcissistic(Int $n) { $n == [+] $n.comb »**» $n.chars }
my $nar;
for 0 .. * {
    if .&is-narcissistic {
	.say;
    $nar ~= "$_ ";
	last if $_ eq 93084;
    }
}

my $ref = '0 1 2 3 4 5 6 7 8 9 153 370 371 407 1634 8208 9474 54748 92727 93084 ';

use Test; 
is $nar, $ref;

# Here's a faster version that precalculates the values for base 1000 digits:

sub kigits($n) {
    my int $i = $n;
    my int $b = 1000;
    gather while $i {
        take $i % $b;
        $i = $i div $b;
    }
}

my @res;

for (1..*) -> $d {
    my @t = 0..9 X** $d;
    my @table = @t X+ @t X+ @t;
    sub is-narcissistic1(\n) { n == [+] @table[kigits(n)] };
    state $l = 2;
    FIRST @res.push: "1\t0";
    @res.push: $l++ ~ "\t" ~ $_ if .&is-narcissistic1 for 10**($d-1) ..^ 10**$d;
    last if $l > 20
};

.say for @res;

my $ref1 = qq:to/END/;
1	0
2	1
3	2
4	3
5	4
6	5
7	6
8	7
9	8
10	9
11	153
12	370
13	371
14	407
15	1634
16	8208
17	9474
18	54748
19	92727
20	93084
END

is	@res.join("\n"), chomp $ref1;
