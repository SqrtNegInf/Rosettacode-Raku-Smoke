#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Word_ladder
#c# 2021-06-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# full path with %*ENV<HOME> makes nightly syntax checker happier? (an upgrade to 'Perl-sym_checker' would help here)

my @res;

#constant %dict = 'ref/unixdict.txt'.IO.lines
constant %dict = "%*ENV<HOME>/perl6/Rosetta-Code/ref/unixdict.txt".IO.lines
                               .classify(*.chars)
                               .map({ .key => .value.Set });

sub word_ladder ( Str $from, Str $to ) {
    die if $from.chars != $to.chars;

    my $sized_dict = %dict{$from.chars};

    my @workqueue = (($from,),);
    my $used = ($from => True).SetHash;
    while @workqueue {
        my @new_q;
        for @workqueue -> @words {
            my $last_word = @words.tail;
            my @new_tails = gather for 'a' .. 'z' -> $replacement_letter {
                for ^$last_word.chars -> $i {
                    my $new_word = $last_word;
                    $new_word.substr-rw($i, 1) = $replacement_letter;

                    next unless $new_word ∈ $sized_dict
                        and not $new_word ∈ $used;
                    take $new_word;
                    $used{$new_word} = True;

                    return |@words, $new_word if $new_word eq $to;
                }
            }
            push @new_q, ( |@words, $_ ) for @new_tails;
        }
        @workqueue = @new_q;
    }
}
for <boy man>, <girl lady>, <john jane>, <child adult>, <fast slow>, <slow fast> -> ($from, $to) {
    @res.push: word_ladder($from, $to)
        // "$from into $to cannot be done";
}

.say for @res;
my $ref = q:to/END/;
boy bay may man
girl gill gall gale gaze laze lazy lady
john cohn conn cone cane jane
child into adult cannot be done
fast cast cost coot clot slot slow
slow flow flaw flat feat fest fast
END

use Test;
is @res.join("\n"), chomp $ref;
