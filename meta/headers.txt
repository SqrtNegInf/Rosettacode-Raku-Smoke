File: 0/0-high-precision-routines
#!/usr/bin/env perl6
#u# http://localhost/0/0-high-precision-routines
#c# 2020-02-11 NOT ON RC
#p# OK
#n# NB: this is not a 'task' for any particular purpose, just a collect of useful routines high-precision FatRat math
#n# collected from:
#n#  A/Arithmetic-geometric_mean/Calculate_Pi
#n#  C/Calculating_the_value_of_e
#n#  F/Fibonacci_matrix-exponentiation
#n#  I/Integer_roots
#n#  R/Ramanujan%27s_constant-1

File: 0/100_doors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/100_doors
#c# 2015-10-26 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# mutating .= must not be white-space separated from args
#n# 2020-02-08 added a few suggested on IRC: 
#n#   https://colabti.org/irclogger/irclogger_log/raku?date=2020-02-08

File: 0/100_prisoners
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/100_prisoners
#c# 2019-11-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# don't use .race, otherwise testing is only approximate

File: 0/15_Puzzle_Game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/15_Puzzle_Game
#t# interactive
#c# 2017-03-21 <RC, 2018-06-23 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# reading keyboard input not ideal

File: 0/15_Puzzle_Game.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/15_Puzzle_Game
#t# interactive
#c# 2016-06-25 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: 0/15_puzzle_solver
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/15_puzzle_solver
#t# toodamnslow
#c# 2021-06-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# changes not on RC
#n# 1490.73s user 20.51s system 100% cpu 25:01.55 total

File: 0/2048
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/2048
#t# interactive
#c# 2017-03-18 <RC, 2018-06-23 <RC
#m# MOAR: OK 
#j#  JVM: BROKEN
#n# reading keyboard input not ideal

File: 0/21_Game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/21_Game
#c# 2018-10-16 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# JVM cannot do 'prompt'? (which is commented out for automated testing anyway)

File: 0/24_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/24_game
#c# 2015-11-01 <RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 5+(3+(4*4))
#n# 'constant' evaluated at BEGIN phase, so do 'srand' then too
#n# ...and now actually testing the code "For Real (TM)"
#n# 2020-12-02 this task works, but messing up testing system, turn off for now

File: 0/24_game_Solve-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/24_game/Solve
#c# 2016-05-10 <RC, 2018-11-03 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: 0/24_game_Solve-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/24_game/Solve
#c# 2016-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: 0/24_game_Solve-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/24_game/Solve
#c# 2018-11-04 <RC, 2019-02-13 >RC
#m# MOAR: OK
#j# JVM:  OK
#i# RC cli: 1 7 3 1
#n# new version, no EVAL
#n# wasn't concurrency-safe (but doesn't really see a boost from it anyhow?)

File: 0/24_game_Solve-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/24_game/Solve
#c# 2018-11-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# new version, no EVAL

File: 0/4-rings_or_4-squares_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/4-rings_or_4-squares_puzzle
#c# 2017-01-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: 0/4-rings_or_4-squares_puzzle.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/4-rings_or_4-squares_puzzle
#c# 2017-01-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: 0/6-slices-of-pie
#!/usr/bin/env perl6
#u# http://blogs.perl.org/users/damian_conway/2019/07/six-slices-of-pie.html
#c# 2019-09-23 NOT ON RC
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: 6-slices.svg
#n# Conway's version corrected in two regards:
#n#   'line' not 'xy-lines' ( 'x' not needed at all)
#n#   0 pre-pended for initial state (which matches his graph)
#n# JVM: differs only trivially

File: 0/99_Bottles_of_Beer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/99_Bottles_of_Beer
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: 0/9_billion_names_of_God_the_integer
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/9_billion_names_of_God_the_integer
#c# 2016-07-25 <RC, 2020-11-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# no time/memory issues any longer

File: 0/9_billion_names_of_God_the_integer.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/9_billion_names_of_God_the_integer
#c# 2016-01-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# uses about 25x as much memory as the 'main' version, in getting the 10,000 value

File: A/A%2BB
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/A+B
#c# 2015-10-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/ABC_Problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/ABC_Problem
#c# 2015-12-04 <RC, 2020-08-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/ABC_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/ABC_words
#c# 2020-12-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/ADFGVX_cipher
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/ADFGVX_cipher
#c# 2021-08-16 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/ADFGVX_cipher.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/ADFGVX_cipher
#c# 2021-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/AKS_test_for_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/AKS_test_for_primes
#c# 2015-12-30 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# one-off?
#n# Rakudo version 2017.09-203-g98fae3d84 built on MoarVM version 2017.09.1-553-ga4fef0bd3
#n# MoarVM panic: Internal error: zeroed target thread ID in work pass

File: A/ASCII_art_diagram_converter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/ASCII_art_diagram_converter
#c# 2018-06-17 <RC, 2018-06-19 <RC
#m# MOAR: OK
#j# JVM:  OK
#n#  2021-03-31 Raku v2021.03-56-g18c4c5d4e
#n#  unpack giving different results? have to investigate tomorrow...

File: A/AVL_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/AVL_tree
#c# 2019-11-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# should probably just send output to file
#n# JVM works, needs own output tested

File: A/A_star_search_algorithm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/A*_search_algorithm
#c# 2020-04-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abbreviations,_automatic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abbreviations,_automatic
#c# 2017-09-18 <RC, 2018-09-13 >RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abbreviations,_automatic.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Abbreviations,_automatic
#c# 2017-09-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abbreviations,_easy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abbreviations,_easy
#c# 2017-09-19 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abbreviations,_easy.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Abbreviations,_easy
#c# 2017-09-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abbreviations,_simple
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abbreviations,_simple
#c# 2017-09-19 <RC, 2018-11-18 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abelian_sandpile_model
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abelian_sandpile_model
#c# 2019-10-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: abelian.BEND
#n# JVM: works fine, just very very slow

File: A/Abelian_sandpile_model-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Abelian_sandpile_model
#t# interactive
#c# 2020-07-19 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN

File: A/Abelian_sandpile_model_Identity
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Abelian_sandpile_model/Identity
#c# 2020-07-16 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Abstract_type
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abstract_type
#c# 2016-01-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Abundant,_deficient_and_perfect_number_classifications
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abundant,_deficient_and_perfect_number_classifications
#c# 2016-01-02 <>RC, 2019-02-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Abundant,_deficient_and_perfect_number_classifications.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Abundant,_deficient_and_perfect_number_classifications
#c# 2016-01-02 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Abundant_odd_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abundant_odd_numbers
#c# 2019-05-17 <RC, 2019-06-12 >RC, 2020-05-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# takes well over 5 seconds to complete (on my really-truly-not-very-fast system)

File: A/Abundant_odd_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Abundant_odd_numbers
#c# 2019-05-17 <RC, 2019-06-12 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# takes well over 5 seconds to complete (on my really-truly-not-very-fast system)

File: A/Accumulator_factory
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Accumulator_factory
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Ackermann_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ackermann_function
#c# 2015-10-28 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: downgraded Unicode names to ASCII

File: A/Ackermann_function.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ackermann_function
#c# 2019-12-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# with the Unicode variable names

File: A/Active_Directory_Connect
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Active_Directory/Connect
#t# skiptest
#c# 2019-06-23 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Active_Directory_Search_for_a_user
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Active_Directory/Search_for_a_user
#c# 2021-03-07 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN

File: A/Active_object
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Active_object
#t# skiptest
#c# 2019-02-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Add_a_variable_to_a_class_instance_at_runtime
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Add_a_variable_to_a_class_instance_at_runtime
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Addition_chains
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Addition_chains
#c# 2019-02-04 <RC, 2019-02-11 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# updates made it Hkdtam's code:
#n#   got rid of 'is copy' in parameter lists
#n#   kebab-case routine names
#n#   removed 'LOOP' blocks, were irrelevant
#n#   multi sub try-Permutation
#n#   rearrange blocks, drop superstitous parens
#n#   use $_ as notation for topic
#n#   add return type-constraint for more routines

File: A/Additive_primes-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Additive_primes
#c# 2021-03-xx >RC NOT ON RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Additive_primes-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Additive_primes
#c# 2021-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat++

File: A/Address_of_a_variable
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Address_of_a_variable
#c# 2018-03-21 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# now at least testing something…

File: A/Air_mass
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Air_mass
#c# 2021-06-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Air_mass.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Air_mass
#c# 2021-04-15 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# super-slow with JVM

File: A/Air_mass.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Air_mass
#c# 2021-06-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# super slow?

File: A/Align_columns
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Align_columns
#c# 2016-01-06 <RC, 2018-04-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Align_columns.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Align_columns
#c# 2018-04-01 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK

File: A/Align_columns.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Align_columns
#c# 2016-01-06 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# older version with updated syntax

File: A/Aliquot_sequence_classifications
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Aliquot_sequence_classifications
#c# 2016-01-02 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-11-03 at one point 'state @seq' brought a huge speed-up?  Now no diff.
#n# .race doesn't help here

File: A/Aliquot_sequence_classifications.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Aliquot_sequence_classifications
#c# 2016-01-02 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-11-03 at one point 'state @seq' brought a huge speed-up?  Now no diff.

File: A/Almkvist-Giullera_formula_for_pi
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Almkvist-Giullera_formula_for_pi
#c# 2020-10-14 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Almost_prime-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Almost_prime
#c# 2016-01-11 <RC, 2018-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Almost_prime-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Almost_prime
#c# 2016-01-11 <RC, 2018-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# swapped in alternate 'factors' routine (JVM was silently failing in code from 'Count_in_factors-1'

File: A/Alternade_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Alternade_words
#c# 2020-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Amb-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amb
#c# 2016-11-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Amb-2
#!/usr/bin/env perl6
#u# https://gist.github.com/smls/1484e13b89490e218ddc
#c# 2016-11-30 <RC, 2018-06-03 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# the 'while' is cheating, not uploaded to RC

File: A/Amb-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amb
#c# 2016-11-30 <RC, 2018-06-03 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# the 'while' is cheating, not uploaded to RC

File: A/Amb-4
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amb
#c# 2020-02-22 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# 

File: A/Amicable_pairs
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amicable_pairs
#c# 2015-10-30 <RC, 2019-05-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# both the concurrency and improved sum calculation contribute to boost the speed
#n# http://blogs.perl.org/users/damian_conway/2019/08/with-friends-like-these.html

File: A/Amicable_pairs.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Amicable_pairs
#c# 2015-10-30 <RC, 2019-05-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# both the concurrency and improved sum calculation contribute to boost the speed
#n# http://blogs.perl.org/users/damian_conway/2019/08/with-friends-like-these.html

File: A/Anagrams
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Anagrams
#c# 2016-08-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Anagrams.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Anagrams
#c# 2016-08-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Anagrams.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Anagrams
#c# 2016-07-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Anagrams_Deranged_anagrams
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Anagrams/Deranged_anagrams
#c# 2016-08-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Anagrams_Deranged_anagrams.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Anagrams/Deranged_anagrams
#c# 2016-07-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Angle_difference_between_two_bearings
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Angle_difference_between_two_bearings
#c# 2016-12-15 <RC, 2018-08-27 >RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Angle_difference_between_two_bearings-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Angles_(geometric),_normalization_and_conversion
#c# 2019-07-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Angles_geometric,_normalization_and_conversion-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Angles_(geometric),_normalization_and_conversion
#c# 2019-07-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Angles_geometric,_normalization_and_conversion-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Angles_(geometric),_normalization_and_conversion
#c# 2019-07-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Animate_a_pendulum
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Animate_a_pendulum
#t# gui
#c# 2018-10-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Animation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Animation
#t# gui
#c# 2019-06-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Anonymous_recursion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Anonymous_recursion
#c# 2016-02-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Anti-primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Anti-primes
#c# 2018-12-06 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2018-12-10: confirmed that there is a race condition if .hyper is used, 
#n# manifests itself more or less easily on different OS's:  macOS 'El Capitan' always fails, 
#n# but under high CPU/memory load same seen on any macOS, and Linux, Windows

File: A/Append_a_record_to_the_end_of_a_text_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Append_a_record_to_the_end_of_a_text_file
#c# 2017-09-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Apply_a_callback_to_an_array
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Apply_a_callback_to_an_array
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Apply_a_digital_filter_direct_form_II_transposed
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Apply_a_digitial_filter_(direct_form_II_transposed)
#c# 2016-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Approximate_Equality
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Approximate_Equality
#c# 2019-09-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Arbitrary-precision_integers_included
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arbitrary-precision_integers_(included)
#c# 2015-11-23 <RC, 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Archimedean_spiral
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Archimedean_spiral
#c# 2018-03-21 <RC, 2018-11-10 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: archimedean-spiral.png

File: A/Archimedean_spiral.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Archimedean_spiral
#c# 2018-03-21 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: archimedean-spiral.png

File: A/Arithmetic-geometric_mean
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic-geometric_mean
#c# 2016-01-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Arithmetic-geometric_mean_Calculate_Pi
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic-geometric_mean/Calculate_Pi
#c# 2016-01-29 <RC, 2019-04-19 >RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# replace 1st integer root routine
#n# worked for this task, but fundamentally buggy (e.g. for n=7055, goes into infinite loop)

File: A/Arithmetic_Complex
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic/Complex
#c# 2015-10-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Arithmetic_Integer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic/Integer
#c# 2015-12-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Arithmetic_Rational
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic/Rational
#c# 2016-08-02 <>RC, 2018-05-19 <RC, 2018-09-26 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# with .hyper for 2**19: 478.079u 50.641s 2:03.58 427%

File: A/Arithmetic_Rational.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic/Rational
#c# 2016-08-02 <>RC, 2018-05-19 <RC, 2018-09-26 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# different subroutines, to handle JVM failure with .hyper
#n# with .hyper for 2**19: 478.079u 50.641s 2:03.58 427%
#n# the old 'combined' version

File: A/Arithmetic_Rational.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic/Rational
#c# 2016-08-02 <>RC, 2018-05-19 <RC, 2018-09-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Arithmetic_coding_As_a_generalized_change_of_radix
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic_coding/As_a_generalized_change_of_radix
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Arithmetic_evaluation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arithmetic_evaluation
#c# 2016-01-02 <>RC, 2018-04-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Array_concatenation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Array_concatenation
#c# 2015-12-14 <RC, 2018-07-31 <RC, 2018-08-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Array_concatenation.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Array_concatenation
#c# 2015-12-14 <RC, 2018-07-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Array_length
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Array_length
#c# 2016-11-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Array_length.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Array_length
#c# 2015-10-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Arrays
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Arrays
#c# 2017-06-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Assertions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Assertions
#c# 2020-01-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# pugs/macro obsolete, remove from RC?

File: A/Assertions_in_design_by_contract
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Assertions_in_design_by_contract
#c# 2018-06-10 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# MOAR: not fully OK, last test won't run under 'Test::Output': No exception handler located for catch
#n# JVM:  gets correct values, but doesn't do any testing ('out' or 'err')

File: A/Associative_array_Creation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Associative_array/Creation
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Associative_array_Iteration
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Associative_array/Iteration
#c# 2015-12-02 <RC, 2017-10-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Associative_array_Merging
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Associative_array/Merging
#c# 2020-01-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Atomic_updates
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Atomic_updates
#c# 2016-08-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#   Don't test output, just run or die

File: A/Attractive_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Attractive_numbers
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# as of 2019-08-12 a speedier version via Perl/ntheory library

File: A/Attractive_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Attractive_numbers
#c# 2019-04-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: A/Attractive_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Attractive_numbers
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# as of 2019-08-12 a speedier version via Perl/ntheory library

File: A/Average_loop_length
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Average_loop_length
#c# 2016-05-09 <>RC, 2018-05-31 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2017-08-10 'random' output changed on 
#n# 2019-??-?? with hash key order now variable, testing upgraded with ArrayHash
#n# 2020-09-01 something is unstable, run #2 flips between: 2.00% vs. 2.67%;
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch? [update: now they've re-converged]
#n# 2021-03-01 still unstable when cron-launched
#n# 2021-03-10 problem mostly in #2, 1.33% (98+%), or 0.67%, and very rarely 0.00% (then #3-6 are different too)

File: A/Average_loop_length-t
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Average_loop_length
#c# 2016-05-09 <>RC, 2018-05-31 <RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK
#n# 2017-08-10 'random' output changed on 
#n# 2019-??-?? with hash key order now variable, testing upgraded with ArrayHash
#n# 2020-09-01 something is unstable, run #2 flips between: 2.00% vs. 2.67%;
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch? [update: now they've re-converged]
#n# 2021-03-01 still unstable when cron-launched
#n# 2021-03-10 problem mostly in #2, 1.33% (98+%), or 0.67%, and very rarely 0.00% (then #3-6 are different too)

File: A/Average_loop_length.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Average_loop_length
#c# 2016-05-09 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Arithmetic_mean
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Arithmetic_mean
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Mean_angle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Mean_angle
#c# 2015-11-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Mean_time_of_day
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Mean_time_of_day
#c# 2017-09-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: A/Averages_Median
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Median
#c# 2016-08-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Median.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Averages/Median
#c# 2016-02-13 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Mode
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Mode
#c# 2016-02-13 <RC, 2019-02-05 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'mode2' not on RC
#n# oops, wasn't testing 'mode3', so fix that, and just for fun convert to method, as per: 
#n# https://zostay.com/archive/2019/10/03/quickly-using-a-sub-as-a-method.html

File: A/Averages_Pythagorean_means
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Pythagorean_means
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Root_mean_square
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Root_mean_square
#c# 2016-02-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: A/Averages_Simple_moving_average
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Averages/Simple_moving_average
#c# 2016-03-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#    this might not be correct math...

File: B/Babbage_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Babbage_problem
#c# 2016-08-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Babbage_problem.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Babbage_problem
#c# 2016-08-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bacon_cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bacon_cipher
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bacon_cipher.txt

File: B/Bacon_cipher-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bacon_cipher
#c# 2021-07-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Balanced_brackets
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Balanced_brackets
#c# 2015-11-29 <RC, 2018-04-28 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# https://irclog.perlgeek.de/perl6/2018-05-11  - Masak finds bug in 'parsing with a grammar'

File: B/Balanced_brackets.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Balanced_brackets
#c# 2015-11-29 <RC, 2018-04-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Balanced_ternary
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Balanced_ternary
#c# 2015-11-17 <>RC, 2017-02-01 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# note that final line of output has Unicode 'minus sign' (purely cosmetic, not used in code)

File: B/Banker%27s_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Banker%27s_algorithm
#c# 2019-12-30 <RC, 2020-01-05 >RC, 2020-01-06 >RC, 2020-01-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# see .0 for Hkdtam's original upload
#n# tried to follow sigil-less style, but @unfinished and @safe-sequence would not work that way

File: B/Banker%27s_algorithm.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Banker%27s_algorithm
#c# 2019-12-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Hkdtam's original upload

File: B/Barnsley_fern
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Barnsley_fern
#c# 2018-03-21 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: barnsley-fern.png

File: B/Base-16_representation
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Base-16_representation
#c# 2021-06-02 <RC, 2021-06-23 <RC, 2021-07-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: B/Base-16_representation.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Base-16_representation
#c# 2021-06-02 <RC, 2021-06-23 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: B/Base58Check_encoding
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Base58Check_encoding
#c# 2017-07-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Base64_decode_data
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Base64_decode_data
#c# 2018-12-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Base64_encode_data
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Base64_encode_data
#c# 2018-03-20 <RC, 2018-03-22 >RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bell_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bell_numbers
#c# 2019-07-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bell_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bell_numbers
#c# 2019-07-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bell_numbers-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bell_numbers
#c# 2019-07-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Benford%27s_law
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Benford's_law
#c# 2015-12-09 <>RC, 2016-10-25 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2016-11-30: old version works again, but keeping my version, as is clearer code, and twice as fast
#n# 2016-10-24: broke at: This is Rakudo version 2016.10-48-gaaec517 built on MoarVM version 2016.10-15-g715e39a

File: B/Bernoulli_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bernoulli_numbers
#c# 2016-04-07 <>RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-04-18 thundergnat adds 'code to make runnable block', similar to my changes

File: B/Best_shuffle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Best_shuffle
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bilinear_interpolation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bilinear_interpolation
#c# 2018-12-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC File: Lenna100-larger.jpg

File: B/Bin_given_limits
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bin_given_limits
#c# 2021-02-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Binary_digits
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Binary_digits
#c# 2015-11-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Binary_search
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Binary_search
#c# 2016-01-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Binary_strings
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Binary_strings
#c# 2016-05-19 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# infix:<cmp> obsolete?: Rakudo version 2018.03-143-g111f67a4b built on MoarVM version 2018.03-59-gfc1bb3126

File: B/Bioinformatics_Sequence_mutation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bioinformatics/Sequence_mutation
#c# 2019-11-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bioinformatics_Subsequence
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bioinformatics/Subsequence
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: B/Bioinformatics_Subsequence.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bioinformatics/Subsequence
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bioinformatics_base_count
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bioinformatics/base_count
#c# 2019-11-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Bioinformatics_global_alignment
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bioinformatics/global_alignment
#c# 2021-02-09 <RC, 2021-02-11 >RC, 2021-02-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Biorhythms
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Biorhythms
#c# 2020-09-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Birthday_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Birthday_problem
#c# 2016-08-03 <RC, 2019-10-23 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# ouch, for 2..5: 5755.022u 5223.779s 4:53:17.36 62.3% (which is why just running 2..2 for now)
#n# current approach is to repeatedly 'roll' out groups of birthdays (a memory hog, and too slow to be useful)
#n# would it be faster to build a 'population' and sample it?  code everything into bit-fields?
#n# 2021-03-03 flips between .505 and .506

File: B/Bitcoin_address_validation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitcoin/address_validation
#c# 2016-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#  2016-10-27: changed from returning 'True' to returning address string

File: B/Bitcoin_public_point_to_address
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitcoin/public_point_to_address
#c# 2016-07-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bitcoin_public_point_to_address.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Bitcoin/public_point_to_address
#c# 2016-05-10 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bitmap
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bitmap_B%C3%A9zier_curves_Cubic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/B%C3%A9zier_curves/Cubic
#c# 2017-10-19 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bezier-cubic.ppm

File: B/Bitmap_B%C3%A9zier_curves_Cubic.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Bitmap/B%C3%A9zier_curves/Cubic
#c# 2017-10-16 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bezier-cubic.ppm

File: B/Bitmap_B%C3%A9zier_curves_Quadratic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/B%C3%A9zier_curves/Quadratic
#c# 2017-10-19 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bezier-quadratic.ppm

File: B/Bitmap_B%C3%A9zier_curves_Quadratic.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Bitmap/B%C3%A9zier_curves/Quadratic
#c# 2017-10-16 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bezier-quadratic.ppm

File: B/Bitmap_Bresenham%27s_line_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Bresenham's_line_algorithm
#c# 2016-01-07 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: bresenham.ppm

File: B/Bitmap_Flood_fill
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Flood_fill
#c# 2019-12-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: flood-fill.ppm
#n# JVM gripes (java.lang.StackOverflowError) but works

File: B/Bitmap_Histogram
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Histogram
#c# 2017-10-21 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: lenna-bw.pbm
#n# macOS 'preview' is goofed up, but the image is fine

File: B/Bitmap_Midpoint_circle_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Midpoint_circle_algorithm
#c# 2016-01-07 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: midpoint.ppm

File: B/Bitmap_PPM_conversion_through_a_pipe
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/PPM_conversion_through_a_pipe
#c# 2018-12-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: output_piped.jpg
#n# output trivially different on Ubuntu
#n# doesn't have 'srand', why was this broken?

File: B/Bitmap_Read_a_PPM_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Read_a_PPM_file
#c# 2017-10-21 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: bitmap-gs.pgm

File: B/Bitmap_Read_an_image_through_a_pipe
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Read_an_image_through_a_pipe
#c# 2017-10-21 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: camelia.ppm
#n# JVM image looks the same, but…  First observed with: Rakudo version 2018.03-223-g72c7c5bf4

File: B/Bitmap_Write_a_PPM_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitmap/Write_a_PPM_file
#c# 2016-08-22 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: bitmap.ppm

File: B/Bitmap_Write_a_PPM_file.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Bitmap/Write_a_PPM_file
#c# 2016-01-23 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK
#   call as: Bitmap_Write_a_PPM_file > bitmap.ppm

File: B/Bitmap_Write_a_PPM_file.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Bitmap/Write_a_PPM_file
#c# 2015-12-06 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: B/Bitwise_IO
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitwise_IO
#c# 2016-05-09 <RC, 2017-07-23 >RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Bitwise_operations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bitwise_operations
#c# 2015-11-03 <RC, 2017-06-05 >RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Boolean_values
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Boolean_values
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Box_the_compass
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Box_the_compass
#c# 2016-01-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII

File: B/Brace_expansion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Brace_expansion
#c# 2018-03-22 <RC, 2019-11-20 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# two GLR fixes on the one line of 'crosswalk': '|' and 'flat' (and removed redundant enclosures)
#n# 3 failing tests removed; bah humbug, not going to spend more time on this...

File: B/Brace_expansion_using_ranges
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Brace_expansion_using_ranges
#c# 2020-08-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: B/Brazilian_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Brazilian_numbers
#c# 2019-08-12 <RC, 2019-08-14 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: B/Brazilian_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Brazilian_numbers
#c# 2019-08-12 <RC, 2019-08-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: B/Break_OO_privacy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Break_OO_privacy
#c# 2015-11-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: B/Brownian_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Brownian_tree
#c# 2016-01-23 <RC, 2018-04-24 >RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: brownian_tree.BEND
#n# 2020-10-07 still varies
#n# 2021-03-02 cannot get stable output

File: B/Bulls_and_cows
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bulls_and_cows
#c# 2016-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 1234\n7234\n7254

File: B/Bulls_and_cows_Player
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Bulls_and_cows/Player
#c# 2016-05-10 <RC, 2018-03-23 >RC, 2019-01-19 >RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 2 1\n2 1\n2 1

File: B/Burrows-Wheeler_transform
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Burrows–Wheeler_transform
#c# 2018-08-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2021-07-23 working again, frabjous (https://github.com/rakudo/rakudo/issues/4476)
#n# 2021-07-21 see if this stays broken

File: B/Burrows-Wheeler_transform.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Burrows–Wheeler_transform
#c# 2018-08-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/CRC-32
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CRC-32
#c# 2016-01-10 <RC, 2017-06-05 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: C/CRC-32.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CRC-32
#c# 2016-01-10 <RC, 2017-06-05 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/CRC-32.ubuntu
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CRC-32
#c# 2016-01-10 <RC, 2017-06-05 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: C/CSV_data_manipulation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CSV_data_manipulation
#c# 2018-03-25 <RC, 2018-03-25 >RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: output.csv

File: C/CSV_data_manipulation.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/CSV_data_manipulation
#c# 2015-12-06 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# not worth follow-up

File: C/CSV_to_HTML_translation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CSV_to_HTML_translation
#c# 2016-02-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/CUSIP
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/CUSIP
#c# 2017-02-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Caesar_cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Caesar_cipher
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Calculating_the_value_of_e
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Calculating_the_value_of_e
#c# 2018-04-21 <RC, 2018-05-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# D.Conway: http://blogs.perl.org/users/damian_conway/2019/09/to-compute-a-constant-of-calculusa-treatise-on-multiple-ways.html
#n#  1 + Σ(1, ∞, 1∕*!) @ https://www.reddit.com/r/perl6/comments/cwk07i/perl_or_math_why_choose_defining_e_in_more/

File: C/Calculating_the_value_of_e.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Calculating_the_value_of_e
#c# 2018-04-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# downgraded Unicode variable name for JVM

File: C/Calendar
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Calendar
#c# 2015-11-07 <RC, 2021-08-03 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# so the output has always been wrong: clipping 1969/06/30, dropping March dates into Feb for 2021
#n# more idiomatic args vs default, as per: https://github.polettix.it/ETOOBUSY/2021/07/26/raku-community-answered/

File: C/Calendar.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Calendar
#c# 2015-11-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Calendar_-_for_%22REAL%22_programmers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Calendar_-_for_%22REAL%22_programmers
#c# 2018-03-19 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# can only grab 1st line of output, good enough to show decoding worked
#n# obscure by design

File: C/Calkin-Wilf_sequence
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Calkin-Wilf_sequence
#c# 2020-12-06 <RC, 2020-12-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Call_a_foreign-language_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_a_foreign-language_function
#c# 2016-04-06 <RC, 2020-06-02 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Getting funny numbers on Mac OS X?  This is all rather bogus at this point, or at least I don't understand what's going on...

File: C/Call_a_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_a_function
#t# skiptest
#c# 2018-07-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Call_a_function-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_a_function
#c# 2019-09-25 NOT ON RC (see .1 version)
#m# MOAR: OK
#j# JVM:  OK
#n# entry was by Tim Toady in 2011 (no modifications since)
#n# validated the listed function call syntax (it all works, with some effort)

File: C/Call_a_function-2.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_a_function
#t# skiptest
#c# 2019-09-27 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# entry was by Tim Toady in 2011 (no modifications since)
#n# validated the listed function call syntax (it all works, with some effort)
#n3 this is the version added to RC

File: C/Call_a_function_in_a_shared_library
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_a_function_in_a_shared_library
#t# skiptest
#c# 2018-04-01 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# not getting this running on OS X…

File: C/Call_an_object_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Call_an_object_method
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Canonicalize_CIDR
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Canonicalize_CIDR
#c# 2020-07-09 <RC, 2020-07-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Canonicalize_CIDR-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Canonicalize_CIDR
#c# 2020-07-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Cantor_set
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cantor_set
#c# 2018-04-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Card_shuffles
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Card_shuffles
#c# 2016-05-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Carmichael_3_strong_pseudoprimes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Carmichael_3_strong_pseudoprimes
#c# 2016-03-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Cartesian_product_of_two_or_more_lists
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cartesian_product_of_two_or_more_lists
#c# 2017-06-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Case-sensitivity_of_identifiers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Case-sensitivity_of_identifiers
#c# 2015-12-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Casting_out_nines
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Casting_out_nines
#c# 2016-03-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Catalan_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Catalan_numbers
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Catalan_numbers_Pascal%27s_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Catalan_numbers/Pascal's_triangle
#c# 2015-11-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Catamorphism
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Catamorphism
#c# 2016-01-07 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Change_e_letters_to_i_in_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Change_e_letters_to_i_in_words
#c# 2021-02-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Changeable_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Changeable_words
#c# 2020-12-06 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Chaocipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chaocipher
#c# 2018-04-26 <RC, 2018-08-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Chaos_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chaos_game
#c# 2016-06-08 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: chaos-game-perl6.png
#n# see '.race' version below
#n# 2020-09-07 answer changed since yesterday?
#n# 2021-03-02 using 'ENTER srand'
#n# 2021-03-03 ref/run difference, very small (not visible in images) but not identical like before

File: C/Character_codes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Character_codes
#c# 2019-11-07 <RC, 2019-11-09 <RC, 2020-03-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Character_codes.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Character_codes
#c# 2015-11-12 <RC
#m# MOAR: OK
#j#  JVM: OK
#   NB: change Terminal to 'Chinese' encoding to view, but which is 'best'?

File: C/Chat_server
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chat_server
#c# 2016-08-13 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: C/Chebyshev_coefficients
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chebyshev_coefficients
#c# 2016-03-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Check_Machin-like_formulas
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Check_Machin-like_formulas
#c# 2016-05-11 <RC, 2018-03-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Check_Machin-like_formulas.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Check_Machin-like_formulas
#c# 2016-05-11 <RC, 2018-03-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# this is the version on RC

File: C/Check_input_device_is_a_terminal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Check_input_device_is_a_terminal
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# tests as 'ok' when run from batch

File: C/Check_output_device_is_a_terminal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Check_output_device_is_a_terminal
#c# 2015-12-09 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: C/Check_that_file_exists
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Check_that_file_exists
#c# 2015-12-20 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   update RC with optional task

File: C/Checkpoint_synchronization
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Checkpoint_synchronization
#c# 2018-12-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Checksumcolor
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Checksumcolor
#c# 2019-04-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: checksumcolor.html
#n# by defining $*OUT to point to a file, say/print statements can be left alone
#n# default input was created with: 
#n#   md5 -r ref/test/*txt > ref/checksumcolor.dat

File: C/Chemical_Calculator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chemical_Calculator
#c# 2019-03-19 <RC, 2019-03-20 >RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Chernick%27s_Carmichael_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chernick%27s_Carmichael_numbers
#c# 2019-06-08 <RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: C/Chernick%27s_Carmichael_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chernick%27s_Carmichael_numbers
#c# 2019-06-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# MOAR very slow this way: 628.268u 2.934s 10:47.22 97.5%)

File: C/Cheryl%27s_Birthday
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cheryl%27s_Birthday
#c# 2018-10-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Chinese_remainder_theorem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chinese_remainder_theorem
#c# 2016-03-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Chinese_zodiac
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chinese_zodiac
#c# 2017-01-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Chinese_zodiac.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Chinese_zodiac
#c# 2017-01-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Cholesky_decomposition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cholesky_decomposition
#c# 2016-01-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Chowla_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chowla_numbers
#c# 2019-03-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Well, I thought the variables names were pretty funny...

File: C/Chowla_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Chowla_numbers
#c# 2019-03-12 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Well, I thought the variables names were pretty funny...

File: C/Church_Numerals-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Church_Numerals
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# traditional subs and sigils

File: C/Church_Numerals-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Church_Numerals
#c# 2019-04-12 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Arrow subs without sigils[edit]

File: C/Cipolla%27s_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cipolla%27s_algorithm
#c# 2016-10-29 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII

File: C/Cipolla%27s_algorithm.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Cipolla%27s_algorithm
#c# 2016-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Circles_of_given_radius_through_two_points
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Circles_of_given_radius_through_two_points
#c# 2016-04-17 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Circular_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Circular_primes
#c# 2020-04-06 <RC, 2020-04-07 <>RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Cistercian_numerals
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cistercian_numerals
#c# 2020-11-08 <RC, 2020-11-24 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: cistercian.svg

File: C/Classes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Classes
#c# 2015-12-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Closest-pair_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Closest-pair_problem
#c# 2016-04-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Closures_Value_capture
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Closures/Value_capture
#c# 2015-12-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Code_segment_unload
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Code_segment_unload
#t# nocode
#c# 2019-01-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Collections
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Collections
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Color_of_a_screen_pixel
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Color_of_a_screen_pixel
#t# gui
#c# 2019-11-23 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for MacOS...
#n# 'screencapture' sporadically fails here (seeing same in P5 verion)

File: C/Color_of_a_screen_pixel-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Color_of_a_screen_pixel
#c# 2019-12-11 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# for Mac OS X 11.x: tracks mouse but no color values?

File: C/Color_quantization
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Color_quantization
#c# 2019-10-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#x# xx file: frog-16.png
#n# fake-run, results are from Ubuntu 18
#n# need ver. 7 of ImageMagick
#n# my OS too old to 'zef install MagickWand', '_clock_gettime' missing from /usr/lib/libSystem.B.dylib

File: C/Color_wheel.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Color_wheel
#c# 2016-08-23 <RC, 2018-09-26 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: color-wheel-perl6.png

File: C/Color_wheel.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Color_wheel
#c# 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: color-wheel-perl6.png

File: C/Colour_bars_Display
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Colour_bars/Display
#c# 2016-05-15 <RC, 2017-06-04 >RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: colorbars.ppm

File: C/Colour_pinstripe_Display
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Colour_pinstripe/Display
#c# 2016-05-15 <RC, 2017-06-04 >RC, 2018-11-16 >RC, 2020-07-20 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pinstripes.ppm
#n# 'flatmap' deprecated

File: C/Colour_pinstripe_Printer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Colour_pinstripe/Printer
#c# 2020-02-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: Color-pinstripe-printer-perl6.png
#n# effectively another image generation task

File: C/Combinations-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations
#c# 2015-10-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Combinations-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations
#c# 2015-10-12 <RC
#m# MOAR: OK
#j#  JVM: BROKEN UnwindException

File: C/Combinations-2.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations
#c# 2015-10-12 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: kludge around gather/take problem

File: C/Combinations_and_permutations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations_and_permutations
#c# 2015-11-20 <RC, 2020-03-23 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# added .gist to involve 'role Logarithm' 

File: C/Combinations_with_repetitions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations_with_repetitions
#c# 2016-08-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Combinations_with_repetitions.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Combinations_with_repetitions
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Combinations_with_repetitions_Square_Digit_Chain
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Combinations_with_repetitions/Square_Digit_Chain
#c# 2018-12-21 <RC, 2018-12-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# compare with 'Iterated_digits_squaring-1' default trait on variable vs. use of 'quietly' to surpress warnings
#n# minor changes not on RC

File: C/Comma_quibbling
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Comma_quibbling
#c# 2015-12-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Command-line_arguments
#!/usr/bin/env perl6
#t# nocode
#u# http://rosettacode.org/wiki/Command-line_arguments
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Commatizing_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Commatizing_numbers
#c# 2018-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Commatizing_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Commatizing_numbers
#c# 2016-03-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Comments
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Comments
#c# 2016-01-01 <RC, 2019-09-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Comments.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Comments
#c# 2016-01-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Common_list_elements
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Common_list_elements
#c# 2021-02-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Common_sorted_list
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Common_sorted_list
#c# 2021-02-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Compare_a_list_of_strings
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compare_a_list_of_strings
#c# 2016-08-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Compare_a_list_of_strings.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Compare_a_list_of_strings
#c# 2016-02-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Compile-time_calculation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compile-time_calculation
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Compiler_Verifying_Syntax
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler__Verifying_Syntax
#t# inprogress
#c# 2020-01-xx >RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# note the stupid space in the URL...
#n# not even close... is the P6 'EBNF' parsing getting it wrong?

File: C/Compiler_code_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler/code_generator
#c# 2019-12-12 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# the .0 version is closer to what's on RC, reads from file

File: C/Compiler_code_generator.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler/code_generator
#c# 2019-12-12 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# reads from file, as shown on RC

File: C/Compiler_lexical_analyzer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler/lexical_analyzer
#c# 2016-09-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Compiler_lexical_analyzer.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Compiler/lexical_analyzer
#c# 2016-08-21 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: C/Compiler_virtual_machine_interpreter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler/virtual_machine_interpreter
#c# 2019-12-11 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# the good: It runs
#n# the bad:  It cheats
#n# the ugly: It can't do byte-level VM simulation because Raku's 'pack' can't do signed integers?
#n#           (but maybe someone better with pack/unpack skills could figure that out...)
#n# 2020-11-24: '&value' no longer works, use 'value()' in all instances

File: C/Compiler_virtual_machine_interpreter-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compiler/virtual_machine_interpreter
#n# inprogress
#c# 2019-12-11 
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# using 'P5pack' module to do required byte-level processing

File: C/Compound_data_type
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Compound_data_type
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Concatenate_two_primes_is_also_prime
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Concatenate_two_primes_is_also_prime
#c# 2021-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Concurrent_computing
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Concurrent_computing
#c# 2018-07-24 <RC, 2018-10-23 >RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN
#n# remove pugs (!) example

File: C/Conditional_structures
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Conditional_structures
#c# 2016-02-13 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: C/Conjugate_transpose
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Conjugate_transpose
#c# 2016-01-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: conjugate_transpose.txt

File: C/Consecutive_Primes_With_Ascending_Or_Descending_Differences
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Consecutive_Primes_With_Ascending_Or_Descending_Differences
#c# 2021-04-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Constrained_genericity
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Constrained_genericity
#c# 2016-04-17 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Constrained_random_points_on_a_circle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Constrained_random_points_on_a_circle
#c# 2016-01-09 <RC, 2018-12-03 >RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: constrained_random_points.BEND
#n# unstable, depending on placement of 'srand'? [NB: 'ENTER srand 123456' solves that]

File: C/Continued_fraction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Continued_fraction
#c# 2015-10-31 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Continued_fraction_Arithmetic_Construct_from_rational_number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Continued_fraction/Arithmetic/Construct_from_rational_number
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Continued_fraction_Arithmetic_Gmatrix_NG,_Contined_Fraction_N
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Continued_fraction/Arithmetic/G(matrix_NG,_Contined_Fraction_N)
#c# 2018-03-20 <>RC, 2020-08-25 >RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Continued_fraction_Arithmetic_Gmatrix_NG,_Contined_Fraction_N1,_Contined_Fraction_N2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Continued_fraction/Arithmetic/G(matrix_NG,_Contined_Fraction_N1,_Contined_Fraction_N2)
#c# 2018-03-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Convert_decimal_number_to_rational
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Convert_decimal_number_to_rational
#c# 2015-12-29 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Convert_seconds_to_compound_duration
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Convert_seconds_to_compound_duration
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# tweaks not on RC

File: C/Convex_hull
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Convex_hull
#c# 2017-06-11 <RC, 2020-12-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Conway%27s_Game_of_Life
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Conway%27s_Game_of_Life
#c# 2016-08-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Coprime_triplets
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Coprime_triplets
#c# 2021-05-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Coprimes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Coprimes
#c# 2021-04-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Copy_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Copy_a_string
#c# 2016-01-16 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# incomplete: read-only bind NYI

File: C/Copy_stdin_to_stdout
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Copy_stdin_to_stdout
#t# nocode
#c# 2018-11-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Count_how_many_vowels_and_consonants_occur_in_a_string
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Count_how_many_vowels_and_consonants_occur_in_a_string
#c# 2021-07-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Count_in_factors-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_in_factors
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# for JVM: UnwindException

File: C/Count_in_factors-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_in_factors
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Count_in_factors-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_in_factors
#c# 2019-04-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Count_in_octal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_in_octal
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Count_occurrences_of_a_substring
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Count_occurrences_of_a_substring
#c# 2016-05-12 <RC, 2018-04-01 <RC, 2020-05-13 <RC,  2021-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Count_occurrences_of_a_substring.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_occurrences_of_a_substring
#c# 2016-05-12 <RC, 2018-04-01 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-13 changed to non-overlapping

File: C/Count_the_coins
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Count_the_coins
#c# 2015-12-05 <RC, 2018-04-13 >RC, 2018-11-03 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# for large $ values in recursive, JVM gives: StackOverflowError

File: C/Count_the_coins.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Count_the_coins
#c# 2015-12-05 <RC, 2018-04-13 >RC
#m# MOAR: OK
#j#  JVM: OK (partial)
#n# for large $ values in recursive, JVM gives: StackOverflowError

File: C/Count_the_coins_0-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Count_the_coins/0-1
#c# 2021-01-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Cousin_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cousin_primes
#c# 2021-03-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Cramer%27s_rule
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cramer's_rule
#c# 2016-01-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Create_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_a_file
#c# 2016-05-12 <RC
#m# MOAR: OK
#j#  JVM: OK
#    cf 'Delete_a_file'

File: C/Create_a_two-dimensional_array_at_runtime
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_a_two-dimensional_array_at_runtime
#c# 2015-11-29 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-13 output format changed

File: C/Create_an_HTML_table
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_an_HTML_table
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Create_an_object_Native_demonstration
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_an_object/Native_demonstration
#c# 2016-05-15 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Create_an_object_at_a_given_address
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Create_an_object_at_a_given_address
#c# 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2019-10-14 seems to have been fixed?
#n# Broken as of 2019-11-13:
#n# Rakudo version 2019.07.1-396-g1fa7ceddd built on MoarVM version 2019.07.1-265-g95f69be84
#n# Type check failed for return value; expected NativeCall::Types::Pointer[uint8] but got Whatever (*)
#n#  in block <unit> at C/Create_an_object_at_a_given_address line 22

File: C/Cuban_primes-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cuban_primes
#c# 2019-02-02 <RC, 2019-06-13 <RC
#m# MOAR: OK
#j# JVM:  OK
#n  now down to about a minute...
#n# full run very slow: 2853.709u 31.184s 8:08.71 590.3%

File: C/Cuban_primes-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cuban_primes
#c# 2019-02-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# full run very slow: 2853.709u 31.184s 8:08.71 590.3%

File: C/Cuban_primes-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cuban_primes
#c# 2019-02-02 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# .hyper just slows things down?

File: C/Cuban_primes-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cuban_primes
#c# 2019-02-03 <RC, 2019-02-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# concurrency doesn't really help here; turn off for JVM's sake

File: C/Cubic_Special_Primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cubic_Special_Primes
#c# 2021-03-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# A two character difference from the Quadrat Special Primes entry. (And it could have been one.)

File: C/Cumulative_standard_deviation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cumulative_standard_deviation
#c# 2016-08-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Currency
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Currency
#c# 2016-05-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Currying
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Currying
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Curve_that_touches_three_points
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Curve_that_touches_three_points
#c# 2018-11-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Cut_a_rectangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cut_a_rectangle
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Cycle_detection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cycle_detection
#c# 2016-02-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: C/Cyclops_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cyclops_numbers
#c# 2021-06-23 <RC, 2021-06-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Cyclops_numbers.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cyclops_numbers
#c# 2021-06-23 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: C/Cyclops_numbers.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Cyclops_numbers
#c# 2021-06-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: C/Cyclotomic_Polynomial
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Cyclotomic_Polynomial
#c# 2020-01-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: D/DNS_query
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/DNS_query
#c# 2017-02-13 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2019-04-29 one-off error?
#n# Type check failed in binding to parameter '$bufsize'; expected Cool but got Any (Any)

File: D/Damm_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Damm_algorithm
#c# 2017-05-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Data_Encryption_Standard
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Data_Encryption_Standard
#c# 2019-03-22 <RC, 2020-02-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2020-02-28 still not getting the '\r\n' to round-trip
#n# 2019-10-25 for JVM: 4th encryption fails (but decrypt on proper string OK)
#n# as much fun as that would be to debug, I'm just going to comment it out
#n# found/replaced Unicode my terminal/font wasn't displaying (using utility based on 'Character_codes', thundergnat++)

File: D/Date_format
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Date_format
#c# 2016-11-08 <>RC, 2020-09-16 <RC, 2020-12-07 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'slurp-rest' deprecated, plain 'slurp' works fine
#n# 2020-09-16 modified from RC a bit for testing

File: D/Date_format.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Date_format
#c# 2015-12-06 <>RC
#t# output varies
#m# MOAR: OK
#j#  JVM: OK

File: D/Date_manipulation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Date_manipulation
#c# 2016-04-24 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Day_of_the_week
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Day_of_the_week
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Days_between_dates
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Days_between_dates
#c# 2019-09-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/De_Bruijn_sequences
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/De_Bruijn_sequences
#c# 2019-09-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Deal_cards_for_FreeCell
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deal_cards_for_FreeCell
#c# 2016-05-15 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# don't need srand, 'ms-lcg-method' handles it already

File: D/Death_Star
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Death_Star
#c# 2016-02-24 <RC, 2017-06-04 >RC, 2018-11-10 <RC, 2018-11-16 >RC, 2021-02-11 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: deathstar-perl6.pgm

File: D/Death_Star.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Death_Star
#c# 2016-02-24 <RC, 2017-06-04 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: deathstar-perl6.pgm

File: D/Decimal_-_Hexadecimal_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Decimal_-_Hexadecimal_numbers
#c# 2021-06-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Decimal_-_Hexadecimal_numbers.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Decimal_-_Hexadecimal_numbers
#c# 2021-06-06 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# slow, so reduced range

File: D/Decimal_floating_point_number_to_binary
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Decimal_floating_point_number_to_binary
#c# 2015-12-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Decision_tables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Decision_tables
#c# 2016-05-01 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: y\nn\nn\n

File: D/Deconvolution_1D
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deconvolution/1D
#c# 2015-11-22 <>RC, 2018-03-14 >RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Deconvolution_2D%2B
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deconvolution/2D%2B
#c# 2015-11-22 <RC, 2018-03-14 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# when possible, replace arcane .AT-POS syntax for proper multi-dim array indexing

File: D/Deconvolution_2D%2B-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deconvolution/2D%2B
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# copy of 'Deconvolution_2D%2B' for testing 2D, 4D cases
#n# changes in that file need to be propagated here
#n# .race didn't make a big difference here

File: D/Deepcopy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deepcopy
#c# 2019-04-03 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Define_a_primitive_data_type
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Define_a_primitive_data_type
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Delegates
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Delegates
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Delete_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Delete_a_file
#c# 2016-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK
#    cf 'Create_a_file'

File: D/Deming%27s_Funnel
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Deming's_Funnel
#c# 2015-11-05 <>RC, 2018-11-22 >RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Department_Numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Department_Numbers
#c# 2017-05-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Detect_division_by_zero
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Detect_division_by_zero
#c# 2015-11-01 <RC, 2018-11-19 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# now testing both variants

File: D/Determinant_and_permanent
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Determinant_and_permanent
#c# 2016-05-14 <RC, 2020-08-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Determine_if_a_string_has_all_the_same_characters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_has_all_the_same_characters
#c# 2019-10-30 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: NFC not yet implemented. Sorry.
#n# '.raku' serves to quote the output, useful for empty and all-blank test strings

File: D/Determine_if_a_string_has_all_unique_characters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_has_all_unique_characters
#c# 2019-10-30 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: NFC not yet implemented. Sorry.
#n# '.raku' serves to quote the output, useful for empty test string

File: D/Determine_if_a_string_is_collapsible
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_is_collapsible
#c# 2019-11-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Determine_if_a_string_is_numeric
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_is_numeric
#c# 2020-02-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 20200225 flapping errors? Happen about half the time.
#n# very old GC issue, cf. https://github.com/rakudo/rakudo/issues/1515
#n# so looks to be a low-priority bug, put a work-around in 'rc-capture' and ignore for now
#n# 2020-04-10 'quietly' does not help
#n# WARNING: unhandled Failure detected in DESTROY. 
#n# If you meant to ignore it, you can mark it as handled by calling .Bool, .so, .not, or .defined

File: D/Determine_if_a_string_is_numeric.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Determine_if_a_string_is_numeric
#c# 2016-02-24 >RC, 2017-04-20 >RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Determine_if_a_string_is_squeezable
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_a_string_is_squeezable
#c# 2019-11-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Determine_if_only_one_instance_is_running
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_only_one_instance_is_running
#c# 2016-03-07 <>RC, 2018-04-01 <RC, 2018-11-17 >RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-04-01 Thundergnat undoes my changes, he's right to
#n# auto-testing doesn't address the real purpose of the routine

File: D/Determine_if_two_triangles_overlap
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Determine_if_two_triangles_overlap
#c# 2019-02-12 <RC, 2021-02-11 >RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Dice_game_probabilities
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dice_game_probabilities
#c# 2018-03-20 <RC, 2018-03-23 >RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2018-07-31 significant digits default changed?
#n# .raku simpler than .nude.join('/')

File: D/Digital_root
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Digital_root
#c# 2016-02-09 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# test both versions of the algorithm

File: D/Digital_root_Multiplicative_digital_root
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Digital_root/Multiplicative_digital_root
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Dijkstra%27s_algorithm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Dijkstra%27s_algorithm
#c# 2018-03-12 <RC, 2018-03-23 >RC, 2021-01-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# my version was not latest, diffs mostly in formatting

File: D/Dijkstra%27s_algorithm.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dijkstra%27s_algorithm
#c# 2018-03-12 <RC, 2018-03-23 >RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Dinesman%27s_multiple-dwelling_problem-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dinesman's_multiple-dwelling_problem solution 1
#c# 2015-11-14 <>RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# for JVM: $expr not set, grammar fails
#n# .EVAL syntax doesn't work here?

File: D/Dinesman%27s_multiple-dwelling_problem-1.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Dinesman's_multiple-dwelling_problem solution 1
#c# 2015-11-14 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#c# 2016-10-20 <RC
#   ? how to create a state variable '$' that acts as a counter (0..4)?
#   started failing on:
#   This is Rakudo version 2016.10-24-g74d0e36 built on MoarVM version 2016.10-15-g715e39a

File: D/Dinesman%27s_multiple-dwelling_problem-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dinesman's_multiple-dwelling_problem  solution #2
#c# 2015-11-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Dining_philosophers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dining_philosophers
#t# skiptest
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Died with the exception: java.lang.NullPointerException

File: D/Discordian_date
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Discordian_date
#c# 2015-10-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Discrete_Fourier_transform
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Discrete_Fourier_transform
#c# 2021-05-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Display_a_linear_combination
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Display_a_linear_combination
#c# 2015-11-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Display_an_outline_as_a_nested_table
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Display_an_outline_as_a_nested_table
#c# 2019-10-24 <RC, 2020-07-19 >RC, 2020-08-30 >RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Distinct_Palindromes_Within_Decimal_Numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Distinct_Palindromes_Within_Decimal_Numbers
#c# 2021-04-06 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: D/Distinct_Palindromes_Within_Decimal_Numbers.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Distinct_Palindromes_Within_Decimal_Numbers
#c# 2021-04-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Distinct_power_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Distinct_power_numbers
#c# 2021-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Distributed_programming
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Distributed_programming
#t# skiptest
#c# 2018-04-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Distribution_of_0_Digits_in_Factorial_Series
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Distribution_of_0_Digits_in_Factorial_Series
#c# 2021-06-19 <RC, 2021-06-20 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat: Works, but depressingly slow for 10000
#n# locally:  9232.92s user 25.16s system 471% cpu 32:42.82 total
#n# fixed indexing off-by-one error

File: D/Diversity_prediction_theorem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Diversity_prediction_theorem
#c# 2016-12-03 >RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Documentation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Documentation
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# got some questions:
#n# if '@res.push: &marine.WHY' (which saves no output?) isn't called, the subsequent push's don't work
#n# also on STDOUT: (if try to capture via '@res.push:', then goes to STDERR?)
#n#  No documentation available for type 'Method'.
#n#  Perhaps it can be found at https://docs.perl6.org/type/Method

File: D/Dot_product
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dot_product
#c# 2016-02-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Doubly-linked_list_Definition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Doubly-linked_list/Definition
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Doubly-linked_list_Element_definition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Doubly-linked_list/Element_definition
#c# 2015-12-05 <RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK

File: D/Doubly-linked_list_Element_insertion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Doubly-linked_list/Element_insertion
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: D/Dragon_curve
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dragon_curve
#c# 2016-01-19 <RC, 2018-04-19 <RC, 2018-06-22 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: dragon_curve.svg

File: D/Dragon_curve.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Dragon_curve
#c# 2016-01-19 <RC, 2018-04-19 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: dragon_curve.svg

File: D/Dragon_curve.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Dragon_curve
#c# 2016-01-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: dragon_curve.svg

File: D/Draw_a_clock
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_clock
#c# 2016-05-15 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: D/Draw_a_cuboid
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_cuboid
#c# 2017-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: draw_a_cuboid.txt

File: D/Draw_a_pixel
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_pixel
#t# gui
#c# 2018-06-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# sort-of works, draws on 2nd screen, top of window cut off

File: D/Draw_a_rotating_cube
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_rotating_cube
#t# interactive
#c# 2018-03-19 <RC, 2019-01-22 >RC, 2020-12-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: D/Draw_a_sphere-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_sphere
#c# 2015-11-05 <RC, 2017-06-04 >RC, 2018-11-10 <RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: draw_a_sphere.pgm
#n# removing intermediate variables has no impact on running time

File: D/Draw_a_sphere-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_sphere
#c# 2015-11-05 <RC, 2017-06-04 >RC, 2018-11-10 <RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: draw_a_sphere.pgm

File: D/Draw_a_sphere-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_a_sphere
#c# 2018-10-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: sphere2.png

File: D/Draw_pixel_2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Draw_pixel_2
#t# gui
#c# 2018-06-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# sort-of works, draws on 2nd screen, top of window cut off

File: D/Dutch_national_flag_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dutch_national_flag_problem
#c# 2016-04-22 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-11-08 answer changed

File: D/Dynamic_variable_names
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Dynamic_variable_names
#c# 2017-05-26 <RC, 2018-04-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: D/Dynamic_variable_names.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Dynamic_variable_names
#c# 2017-05-26 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: E/EKG_sequence_convergence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/EKG_sequence_convergence
#c# 2018-08-08 <RC, 2018-10-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/EKG_sequence_convergence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/EKG_sequence_convergence
#c# 2018-08-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Eban_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Eban_numbers
#c# 2019-02-18 <RC, 2019-02-22 <RC, 2019-03-20 <RC, 2019-03-26 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: E/Eban_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Eban_numbers
#c# 2019-02-18 <RC, 2019-02-22 <RC, 2019-03-20 <RC, 2019-03-26 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: E/Echo_server
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Echo_server
#c# 2016-04-09 <>RC, 2018-04-01 <RC, 2018-04-18 <RC
#t# interactive
#m# MOAR: OK
#j# JVM:  OK
#n# either/or, comment one out to test the other

File: E/Echo_server.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Echo_server
#c# 2016-04-09 <>RC, 2018-04-01 <RC
#t# interactive
#m# MOAR: OK
#j# JVM:  OK

File: E/Echo_server.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Echo_server
#c# 2016-04-09 <>RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: E/Eertree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Eertree
#c# 2018-12-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Egyptian_division
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Egyptian_division
#c# 2017-08-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Egyptian_fractions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Egyptian_fractions
#c# 2016-05-15 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Element-wise_operations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Element-wise_operations
#c# 2016-05-15 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Elementary_cellular_automaton
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elementary_cellular_automaton
#c# 2016-08-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Elementary_cellular_automaton.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Elementary_cellular_automaton
#c# 2016-03-05 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: E/Elementary_cellular_automaton_Infinite_length
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elementary_cellular_automaton/Infinite_length
#c# 2018-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Elementary_cellular_automaton_Random_Number_Generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elementary_cellular_automaton/Random_Number_Generator
#c# 2016-05-18 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   class copied from 'Elementary_cellular_automaton'

File: E/Elliptic_Curve_Digital_Signature_Algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
#c# 2020-02-24 <RC, 2020-02-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2020-10-18 'srand' problems strikes intermittantly (but only in non-interactive runs?)
#n# 2020-10-19 output bi-stable, test for which version of results present
#n# 2020-12-06 OK now? Maybe? Hopefully? We'll see...
#n# 2021-03-02 still unstable

File: E/Elliptic_Curve_Digital_Signature_Algorithm.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm
#c# 2020-02-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: E/Elliptic_curve_arithmetic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elliptic_curve_arithmetic
#c# 2016-04-03 <>RC, 2020-02-05 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# note: '⨯' [VECTOR OR CROSS PRODUCT] used for custom product, '×' [MULTIPLICATION SIGN] for regular product

File: E/Elliptic_curve_arithmetic.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Elliptic_curve_arithmetic
#c# 2016-04-03 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# note: '⨯' [VECTOR OR CROSS PRODUCT] used for custom product, '×' [MULTIPLICATION SIGN] for regular product

File: E/Emirp_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Emirp_primes
#c# 2016-03-01 <RC, 2016-08-22 <>RC, 2018-11-06 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: E/Emirp_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Emirp_primes
#c# 2016-03-01 <RC, 2016-08-22 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Empty_directory
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Empty_directory
#c# 2016-05-04 <RC, 2018-05-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Empty_program
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Empty_program
#c# 2016-08-07 <>RC
#m# MOAR: OK
#j#  JVM: OK
#    produes no output of course...

File: E/Empty_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Empty_string
#c# 2015-12-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Enforced_immutability
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Enforced_immutability
#c# 2016-05-18 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# testing not very thorough

File: E/Entropy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Entropy
#c# 2016-01-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Entropy_Narcissist
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Entropy/Narcissist
#c# 2016-05-16 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Enumerations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Enumerations
#c# 2016-01-23 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Environment_variables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Environment_variables
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK
#    'OSTYPE' fails in batch unless variable used?

File: E/Equilibrium_index
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Equilibrium_index
#c# 2015-12-11 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Erdos-primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Erdős-primes
#c# 2021-03-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: E/Erdos-primes.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Erdős-primes
#c# 2021-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Esthetic_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Esthetic_numbers
#c# 2020-03-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Ethiopian_multiplication
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ethiopian_multiplication
#c# 2016-03-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Euler%27s_identity
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Euler%27s_identity
#c# 2018-04-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# how to type "invisible times"?

File: E/Euler%27s_sum_of_powers_conjecture
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Euler%27s_sum_of_powers_conjecture
#c# 2018-11-03 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# alternate way of writing 'race'

File: E/Euler%27s_sum_of_powers_conjecture.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Euler's_sum_of_powers_conjecture
#c# 2016-01-09 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   why so very very slow??

File: E/Euler_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Euler_method
#c# 2015-12-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Evaluate_binomial_coefficients
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Evaluate_binomial_coefficients
#c# 2015-12-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Even_or_odd
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Even_or_odd
#c# 2015-12-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Events
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Events
#c# 2016-05-18 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# work-around change in order of program sleeping / task start 

File: E/Evolutionary_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Evolutionary_algorithm
#c# 2015-11-14 <RC, 2017-05-11 <RC, 2019-06-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exceptions-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exceptions
#c# 2016-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exceptions-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exceptions
#c# 2016-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK
#    2nd example, has to be tested separately

File: E/Exceptions_Catch_an_exception_thrown_in_a_nested_call
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exceptions/Catch_an_exception_thrown_in_a_nested_call
#c# 2016-05-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Executable_library
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/Executable_library
#c# 2018-03-20 <RC, 2018-05-17 <RC, 2018-12-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# uses module 'Hailstone.pm'
#n# what happened on 2018-12-20? (answer: use lib '.' ate time like crazy)

File: E/Executable_library.jvm
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/Executable_library
#c# 2018-03-20 <RC, 2018-05-17 <RC, 2018-12-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# uses module 'Hailstone.pm'
#n# wouldn't need a separate JVM version except for the 'race'

File: E/Execute_Brainfuck
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_Brain****/Perl_6
#c# 2018-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Execute_CopyPasta_Language
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_CopyPasta_Language
#c# 2019-11-22 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# the RC version doesn't have the unnecessary frippery
#n# then 'randomess' of .roll should be invisible: both routines should return the same result

File: E/Execute_HQ9%2B
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_HQExecute_HQ9%2B
#c# 2018-03-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: hq9.txt

File: E/Execute_SNUSP
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_SNUSP
#c# 2017-02-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Execute_a_Markov_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_a_Markov_algorithm
#c# 2018-03-21 <RC, 2018-05-17 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# runs one rules/test from 'ref', and unary multiplication in-line

File: E/Execute_a_system_command
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Execute_a_system_command
#c# 2015-10-25 <RC, 2018-11-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exponentiation_operator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exponentiation_operator
#c# 2015-11-27 <RC, 2018-04-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exponentiation_order
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exponentiation_order
#c# 2016-09-03 <RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exponentiation_order.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Exponentiation_order
#c# 2016-01-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Exponentiation_with_infix_operators_in_or_operating_on_the_base
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Exponentiation_with_infix_operators_in_(or_operating_on)_the_base
#c# 2020-11-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Unicode symbol '↑' is what sinks use of .EVAL syntax.

File: E/Extend_your_language
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Extend_your_language
#c# 2016-05-19 <>RC, 2018-06-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/Extensible_prime_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Extensible_prime_generator
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: E/External_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/External_sort
#c# 2019-11-20 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: E/Extra_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Extra_primes
#c# 2020-12-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: E/Extract_file_extension
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Extract_file_extension
#c# 2016-01-06 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK

File: E/Extreme_floating_point_values
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Extreme_floating_point_values
#c# 2018-03-20 <RC, 2018-04-15 >RC
#m# MOAR: OK
#j# JVM:  OK

File: F/FASTA_format
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/FASTA_format
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/FTP
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/FTP
#t# skiptest
#c# 2016-06-01 <RC, 2018-04-25 <RC, 2018-11-30 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# need a new site to test...

File: F/FTP.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/FTP
#c# 2016-06-01 <RC, 2018-04-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: F/Faces_from_a_mesh
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Faces_from_a_mesh
#c# 2019-12-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Factorial
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factorial
#c# 2015-12-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Factorial_base_numbers_indexing_permutations_of_a_collection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factorial_base_numbers_indexing_permutations_of_a_collection
#c# 2018-12-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Factorions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factorions
#c# 2019-08-12 <RC, 2019-09-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# little slower than previous version (when doing 1.5 million iterations)
#n# 2019-10-07 crashed, race condition?
#n# 2021-08-25 .race starts causing failure, so remove for now
#n# tune .race to match # of bases

File: F/Factorions.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factorions
#c# 2019-08-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# now slower?

File: F/Factorions.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Factorions
#c# 2019-08-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# placement of .hyper here make it a little faster than newer version (measurable when doing 1.5 million iterations)
#n# try more bases (note results for 18)

File: F/Factorions.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factorions
#c# 2019-08-12 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# try more bases (note results for 18)

File: F/Factors_of_a_Mersenne_number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factors_of_a_Mersenne_number
#c# 2016-01-06 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# not using supplied fast/clever prime tester, as it crashes JVM

File: F/Factors_of_an_integer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Factors_of_an_integer
#c# 2015-10-16 <RC, 2021-07-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fairshare_between_two_and_more
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fairshare_between_two_and_more
#c# 2020-02-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Farey_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Farey_sequence
#c# 2016-05-21 <RC, 2018-11-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: F/Farey_sequence.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Farey_sequence
#c# 2016-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# an example of where .race does not help: 
#n#    in the 'farey' routine: the costs of setup/management swamp the fairly trivial calculations
#n#    calling 'farey':        time dominated by the 1000 run (?)

File: F/Fast_Fourier_transform
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fast_Fourier_transform
#c# 2017-04-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fast_Fourier_transform.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Fast_Fourier_transform
#c# 2017-04-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fast_Fourier_transform.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Fast_Fourier_transform
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Faulhaber%27s_formula
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Faulhaber's_formula
#c# 2016-01-11 <RC, 2018-05-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# removed 'cached' feature, no speed-up

File: F/Faulhaber%27s_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Faulhaber%27s_triangle
#c# 2017-06-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Feigenbaum_constant_calculation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Feigenbaum_constant_calculation
#c# 2018-05-06 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# https://www.nytimes.com/2019/07/18/science/mitchell-feigenbaum-dead.htm

File: F/Feigenbaum_constant_calculation.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Feigenbaum_constant_calculation
#c# 2018-04-xx >RC
#m# MOAR: OK
#j# JVM:  OK
#n# another FP victim...
#n# δ = 4.6692031586047085 MOAR output with x²
#n# δ = 4.6692053720403180 MOAR output with x*x
#n# δ = 4.6692053720403180 JVM output does not vary
#n# δ = 4.6692016091029906 from https://oeis.org/A006890

File: F/Fermat_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fermat_numbers
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# thundergnat: I gave up on factoring F₉ after about 20 minutes.

File: F/Fermat_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fermat_numbers
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# must wrap the 'gather' in brackets to get array return (or suffix with .Array)

File: F/Fibonacci_heap
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Fibonacci_heap
#c# 2020-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: fib_heap.txt

File: F/Fibonacci_matrix-exponentiation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_matrix-exponentiation
#c# 2020-02-05 >RC, 2020-02-11 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# works for 16/32, not 64:
#n#   first20: no error, but bogus value 11175807536929531904
#n#   last20:  Math::AnyNum / 'fibmod': Cannot unbox 65 bit wide bigint into native integer

File: F/Fibonacci_n-step_number_sequences
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_n-step_number_sequences
#c# 2016-01-23 <>RC, 2020-08-30 >RC, 2021-03-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fibonacci_n-step_number_sequences-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_n-step_number_sequences
#c# 2016-01-23 <>RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fibonacci_n-step_number_sequences.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_n-step_number_sequences
#c# 2016-12-06 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: F/Fibonacci_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_sequence
#c# 2016-08-28 <RC, 2018-05-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# removed 'cached' feature, no speed-up

File: F/Fibonacci_sequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Fibonacci_sequence
#c# 2015-11-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fibonacci_word
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_word
#c# 2016-02-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fibonacci_word_fractal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_word/fractal
#c# 2016-03-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/File_extension_is_in_extensions_list
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_extension_is_in_extensions_list
#c# 2016-09-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/File_extension_is_in_extensions_list.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/File_extension_is_in_extensions_list
#c# 2016-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/File_input_output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_input/output
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: input_output.txt

File: F/File_input_output-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_input/output
#c# 2019-10-27 NOT ON RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: input_output.txt
#n# meets task requirements, but too terse

File: F/File_modification_time
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_modification_time
#c# 2016-05-21 <RC, 2016-11-02 >RC, 2018-11-17 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#r# RC prep: cp -p ref/mod-time.txt run
#i# RC cli: run/mod-time.txt

File: F/File_size
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_size
#c# 2016-07-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/File_size_distribution
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_size_distribution
#c# 2017-05-31 <RC, 2018-05-17 <RC, 2018-09-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# should update this once a year

File: F/Filter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Filter
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_URI_in_text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_URI_in_text
#c# 2018-04-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# updated module, 1st 'stop' entry improved

File: F/Find_URI_in_text.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Find_URI_in_text
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: find_uri.txt

File: F/Find_common_directory_path
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_common_directory_path
#c# 2016-05-04 <>RC, 2018-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_duplicate_files
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_duplicate_files
#c# 2017-06-03 <RC, 2017-07-23 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: F/Find_duplicate_files.ubuntu
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_duplicate_files
#c# 2017-06-03 <RC, 2017-07-23 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# specific to Ubuntu testing (could never get Digest::xxHash to work)

File: F/Find_first_and_last_set_bit_of_a_long_integer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_first_and_last_set_bit_of_a_long_integer
#c# 2016-05-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_first_missing_positive
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_first_missing_positive
#c# 2021-02-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_if_a_point_is_within_a_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_if_a_point_is_within_a_triangle
#c# 2020-11-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_largest_left_truncatable_prime_in_a_given_base
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_largest_left_truncatable_prime_in_a_given_base
#c# 2017-04-17 <RC, 2019-02-28 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-14 died: emit without supply or react

File: F/Find_largest_left_truncatable_prime_in_a_given_base.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Find_largest_left_truncatable_prime_in_a_given_base
#c# 2016-05-31 <RC
#   ? BROKEN

File: F/Find_largest_left_truncatable_prime_in_a_given_base.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_largest_left_truncatable_prime_in_a_given_base
#c# 2016-09-22 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_limit_of_recursion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_limit_of_recursion
#c# 2016-01-04 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# MOAR will go to 10 million, but why belabor the point...

File: F/Find_minimum_number_of_coins_that_make_a_given_value
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_minimum_number_of_coins_that_make_a_given_value
#c# 2021-08-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_palindromic_numbers_in_both_binary_and_ternary_bases
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_palindromic_numbers_in_both_binary_and_ternary_bases
#c# 2016-09-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_palindromic_numbers_in_both_binary_and_ternary_bases.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Find_palindromic_numbers_in_both_binary_and_ternary_bases
#c# 2016-02-21 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: F/Find_prime_n_for_that_reversed_n_is_also_prime
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_prime_n_for_that_reversed_n_is_also_prime
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_prime_numbers_of_the_form_n_n_n%2B2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_prime_numbers_of_the_form_n*n*n%2B2
#c# 2021-03-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_the_intersection_of_a_line_with_a_plane
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_the_intersection_of_a_line_with_a_plane
#c# 2016-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#   Unicode issues, replaced U. characters with plain ASCII

File: F/Find_the_intersection_of_a_line_with_a_plane.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Find_the_intersection_of_a_line_with_a_plane
#c# 2016-12-21 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# fragile, prone to turning into malformed UTF-8

File: F/Find_the_intersection_of_two_lines
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_the_intersection_of_two_lines
#c# 2016-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# sigil-less is nicer...

File: F/Find_the_last_Sunday_of_each_month
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_the_last_Sunday_of_each_month
#c# 2016-06-01 <RC, 2018-04-07 >RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_the_missing_permutation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_the_missing_permutation
#c# 2015-11-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Find_words_which_contains_all_the_vowels
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_words_which_contains_all_the_vowels
#c# 2021-02-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_words_which_contains_more_than_3_e_vowels
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_words_which_contains_more_than_3_e_vowels
#c# 2021-02-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_words_which_contains_most_consonants
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_words_which_contains_most_consonants
#c# 2021-02-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# just 1st part

File: F/Find_words_which_first_and_last_three_letters_are_equals
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_words_which_first_and_last_three_letters_are_equals
#c# 2021-02-13 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Find_words_with_alternating_vowels_and_consonants
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Find_words_with_alternating_vowels_and_consonants
#c# 2021-01-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Finite_state_machine
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Finite_state_machine
#c# 2018-11-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# providing canned responses for testing

File: F/First-class_functions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/First-class_functions
#c# 2015-10-29 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII
#n# JVM output float-point issues required is-approx testing

File: F/First-class_functions_Use_numbers_analogously
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/First-class_functions/Use_numbers_analogously
#c# 2016-02-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/First_class_environments
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/First_class_environments
#c# 2015-12-17 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: F/First_perfect_square_in_base_N_with_N_unique_digits
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/First_perfect_square_in_base_N_with_N_unique_digits
#c# 2019-05-20 <RC, 2019-05-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# as long as you have a quantum computer, this will work for bases 2 through 36
#n# for 2..16:
#n#     7.919u  0.204s
#n#   487.887u  7.866s .1
#n#  1264.211u 17.279s .2

File: F/First_perfect_square_in_base_N_with_N_unique_digits.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/First_perfect_square_in_base_N_with_N_unique_digits
#c# 2019-05-20 <RC, 2019-05-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for 2..16:  487.887u  7.866s
#n# previous:  1264.211u 17.279s

File: F/First_perfect_square_in_base_N_with_N_unique_digits.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/First_perfect_square_in_base_N_with_N_unique_digits
#c# 2019-05-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for 2..16: 1264.211u 17.279s 18:02.09 118.4%

File: F/First_power_of_2_that_has_leading_decimal_digits_of_12
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/First_power_of_2_that_has_leading_decimal_digits_of_12
#c# 2020-01-17 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# suspect between GH#4315 and GH#4316 the issue with the module will get fixed, thundergnat++ [yes, it did]

File: F/First_power_of_2_that_has_leading_decimal_digits_of_12.0
#!/usr/bin/env perl6
#t# skiptest
#u# http://rosettacode.org/wiki/First_power_of_2_that_has_leading_decimal_digits_of_12
#c# 2020-01-15 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat took pains to hide this version, so I will too (some results dubious)

File: F/Five_weekends
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Five_weekends
#c# 2016-03-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fivenum
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fivenum
#c# 2018-02-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Fixed_length_records
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fixed_length_records
#c# 2018-10-18 <RC, 2018-11-19 >RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: flr-outfile.dat
#n# don't display on STDERR, as trips automated testing 

File: F/FizzBuzz
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/FizzBuzz
#c# 2015-10-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Flatten_a_list
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Flatten_a_list
#c# 2015-10-23 <RC, 2017-05-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Flatten_a_list.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Flatten_a_list
#c# 2015-10-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Flipping_bits_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Flipping_bits_game
#c# 2016-03-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n#  runs a fixed 3x3 game, in 3 turns
#n# oops, testing was bogus (now fixed)

File: F/Flow-control_structures
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Flow-control_structures
#t# nocode
#c# 2018-08-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Floyd%27s_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Floyd%27s_triangle
#c# 2015-12-09 <RC, 2019-04-15 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2019-04-13: --target=ast and --target=parse hang/fail with this program
#n# 2019-04-14: gah, due to typo '@floyd1' wasn't actually ever tested...

File: F/Floyd-Warshall_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Floyd-Warshall_algorithm
#c# 2017-01-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Forest_fire
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Forest_fire
#c# 2015-11-11 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: forest_fire.BEND
#n# run 'Forest_fire.1' to see interactive output
#n# srand in two places to keep output stable?  ==> YES

File: F/Forest_fire-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Forest_fire
#t# gui
#c# 2019-07-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: F/Forest_fire.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Forest_fire
#c# 2015-11-11 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: F/Fork
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fork
#c# 2016-06-01 <>RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Java HotSpot(TM) 64-Bit Server VM warning: Attempt to protect stack guard pages failed.
#n# Java HotSpot(TM) 64-Bit Server VM warning: Attempt to deallocate stack guard pages failed.

File: F/Formal_power_series
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Formal_power_series
#c# 2016-05-24 <RC, 2019-12-03 >RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Formatted_numeric_output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Formatted_numeric_output
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Fortunate_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Fortunate_numbers
#c# 2021-08-01 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Limit of 75 primorials to get first 50 unique fortunates is arbitrary, found through trial and error.

File: F/Fortunate_numbers.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Fortunate_numbers
#c# 2021-08-01 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Limit of 75 primorials to get first 50 unique fortunates is arbitrary, found through trial and error.

File: F/Forward_difference
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Forward_difference
#c# 2016-04-22 <>RC
#m# MOAR: OK
#j#  JVM: OK
#    not perfect...

File: F/Four_bit_adder
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Four_bit_adder
#c# 2016-01-21 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Four_is_magic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Four_is_magic
#c# 2017-10-04 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Four_is_the_number_of_letters_in_the_...
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Four_is_the_number_of_letters_in_the_...
#c# 2017-10-04 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# full run: 6469.673u 124.008s 2:12:20.72 83.0%

File: F/Fractal_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fractal_tree
#c# 2015-11-19 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: fractal_tree.svg

File: F/Fraction_reduction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fraction_reduction
#c# 2019-09-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Fractran
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fractran
#c# 2016-08-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Fractran.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Fractran
#c# 2016-08-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: Type check failed in binding to nu; expected Int but got Rat (<34/91>)
#n# 2019-01-08 extra credit test started failing

File: F/French_Republican_calendar
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/French_Republican_calendar
#c# 2017-01-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Frobenius_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Frobenius_numbers
#c# 2021-04-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Function_Composition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Function_Composition
#c# 2015-12-06 <RC, 2017-05-05 <RC, 2018-04-10 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# must obey: edbbc44 commit by TimToady, infix:<->($n) should not negate
#n# 2019-10-29 testing 'Texas' version 

File: F/Function_definition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Function_definition
#c# 2016-04-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Function_frequency
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Function_frequency
#c# 2015-12-12 <RC, 2020-03-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n#  needs periodic updates as codgen evolves?
#n# 'slurp-rest' deprecated, plain 'slurp' works fine

File: F/Function_prototype
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Function_prototype
#c# 2021-03-19 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# include mostly to make sure it compiles/runs without croaking

File: F/Functional_coverage_tree-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Functional_coverage_tree
#c# 2019-11-14 >RC
#m# MOAR: OK
#j#  JVM: OK

File: F/Functional_coverage_tree-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Functional_coverage_tree
#t# inprogress
#c# 2019-11-xx >RC
#m# MOAR: OK
#j#  JVM: OK
#n# a more Raku-ish version

File: F/Functional_coverage_tree.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Functional_coverage_tree
#c# 2019-11-14 >RC 
#m# MOAR: OK
#j# JVM:  OK
#n# this version on RC, differs only in how data table read in, displayed

File: F/Fusc_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fusc_sequence
#c# 2019-02-22 <RC, 2020-07-19 >RC, 2021-03-15 >RC
#m# MOAR: OK
#j# JVM:  OK

File: F/Fusc_sequence-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fusc_sequence
#c# 2021-03-15 <>RC
#m# MOAR: OK
#j# JVM:  OK

File: G/GUI_Maximum_window_dimensions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/GUI/Maximum_window_dimensions
#t# gui
#c# 2019-02-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: G/GUI_component_interaction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/GUI_component_interaction
#t# gui
#c# 2019-02-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 'random' button didn't do anything?

File: G/GUI_enabling_disabling_of_controls
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/GUI_enabling/disabling_of_controls
#t# gui
#c# 2019-02-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: G/Galton_box_animation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Galton_box_animation
#c# 2016-02-09 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: galton_box.BEND
#n# minor idiomatification
#n# RC x-cli-x: 10 4 (this wasn't working for JVM?)

File: G/Gamma_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gamma_function
#c# 2018-03-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gamma_function.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Gamma_function
#c# 2015-11-22 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# # Failed test 'Γ(9/3)' # at G/Gamma_function.1 line 35
#n# expected: '2' got: '1.999999999999995'

File: G/Gapful_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gapful_numbers
#c# 2019-11-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gauss-Jordan_matrix_inversion
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Gauss-Jordan_matrix_inversion
#c# 2018-04-05 <RC, 2018-11-03 <RC, 2019-05-16 >RC, 2020-05-15 >RC, 2020-07-19 >RC, 2020-08-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gauss-Jordan_matrix_inversion.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Gauss-Jordan_matrix_inversion
#c# 2018-04-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gaussian_elimination
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gaussian_elimination
#c# 2018-04-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gaussian_elimination.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Gaussian_elimination
#c# 2015-12-10 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Type check failed in binding to nu; expected Int but got Rat (1.0)

File: G/General_FizzBuzz
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/General_FizzBuzz
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Generalised_floating_point_addition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generalised_floating_point_addition
#c# 2019-10-03 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# works with upper limit of 9999 (and almost certainly well beyond)
#n# Rat/Num change for $e <= -20

File: G/Generate_Chess960_starting_position
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generate_Chess960_starting_position
#c# 2016-06-02 <RC, 2018-03-28 >RC, 2018-04-03 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2021-06-04 results for test #2 changed

File: G/Generate_lower_case_ASCII_alphabet
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generate_lower_case_ASCII_alphabet
#c# 2015-11-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Generate_lower_case_ASCII_alphabet.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Generate_lower_case_ASCII_alphabet
#c# 2015-10-16 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Generate_random_chess_position
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generate_random_chess_position
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-11-03 results changed with: Rakudo(tm) v2020.10-51-g53b558fe0
#n# 2020-11-07 but once in a while flips back to old result apparently... (v2020.10-55-g2fe6420e8)

File: G/Generate_random_numbers_without_repeating_a_value
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Generate_random_numbers_without_repeating_a_value
#c# 2021-08-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Generator_Exponential
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generator/Exponential
#c# 2016-01-02 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Generic_swap
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Generic_swap
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Geohash-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Geohash
#c# 2020-06-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: G/Geohash-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Geohash
#c# 2020-06-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Geometric_algebra
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Geometric_algebra
#c# 2016-07-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-05-21 all previous errors (in tests 26, 27) are gone, wa-hoo…
#n# glory be, */× swap worked even here
#n# 2020-02-27 why does AST still show '*' in use as multiplication?

File: G/Get_system_command_output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Get_system_command_output
#c# 2015-12-06 <RC, 2020-07-20 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# 'slurp-rest' deprecated, plain 'slurp' works fine

File: G/Getting_the_number_of_decimals
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Getting_the_number_of_decimals
#c# 2020-08-16 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: G/Globally_replace_text_in_several_files
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Globally_replace_text_in_several_files
#c# 2016-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK
#r# RC prep: cp ref/replace.base run/replace1.txt; cp ref/replace.base run/replace2.txt; cp ref/replace.base run/replace3.txt
#f# RC file: replace3.txt
#    just checking on 3rd modified file

File: G/Go_Fish
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Go_Fish/Perl_6
#c# 2017-04-03 <RC, 2019-05-16 >RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: G/Gradient_descent
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Gradient_descent
##c# 2019-10-29 <RC, 2019-10-31 <RC, 2019-11-02 <RC, 2020-09-04 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gradient_descent.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gradient_descent
#c# 2019-10-31 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Gradient_descent.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gradient_descent
#c# 2019-10-29 <RC, 2019-10-31 <RC, 2019-11-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Graph_colouring
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Graph_colouring
#c# 2020-03-12 <RC, 2021-02-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# oops, was out-of-date

File: G/Gray_code
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Gray_code
#c# 2015-12-06 <RC, 2018-04-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Grayscale_image
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Grayscale_image
#c# 2016-05-11 <>RC, 2018-11-17 <RC, 2021-04-01 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: grayscale.pgm
#    buggy algorithm? problem with example image, seems to fail with most other images
#n# 2021-03-31 Raku v2021.03-56-g18c4c5d4e: No such method 'chr' for invocant of type 'Rat'. [deemed a regression, previous behavior restored]
#n# Today's blead revealed that 'chr' was previously taking rational input, silently doing 'floor'; for clarity, now done explicitly.

File: G/Greatest_common_divisor
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Greatest_common_divisor
#c# 2015-10-29 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Greatest_element_of_a_list
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Greatest_element_of_a_list
#c# 2015-10-23 <RC, 2018-10-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Greatest_element_of_a_list.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Greatest_element_of_a_list
#c# 2015-10-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Greatest_subsequential_sum
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Greatest_subsequential_sum
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: G/Greed
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Greed
#t# interactive
#c# 2020-09-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: G/Greyscale_bars_Display
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Greyscale_bars/Display
#c# 2015-10-22 <RC, 2018-11-13 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: Greyscale-bars-perl6.pgm

File: G/Guess_the_number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Guess_the_number
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: 1\n2\n3
#n# always win if you guess every number...

File: G/Guess_the_number_With_feedback
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Guess_the_number/With_feedback
#c# 2016-06-02 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 10\n5\n3\n
#x# [solved]  libtommath issues, runs forever currently

File: G/Guess_the_number_With_feedback_player
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Guess_the_number/With_feedback_(player)
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: l\nh\nh\nl\nh\nl\ne
#n# 42 is the target number

File: G/Guess_the_number_With_feedback_player.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Guess_the_number/With_feedback_(player)
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: l\nh\nh\nl\nh\nl\ne # for JVM
#n# 42 is the target number
#n# JVM is glacially slow?

File: H/HTTP
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/HTTP
#c# 2015-10-11 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# my 1st RC edit!   $socket.send --> $socket.print 

File: H/HTTPS
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/HTTPS
#c# 2018-04-25 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/HTTPS_Authenticated
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/HTTPS/Authenticated
#c# 2017-10-08 <RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  OK

File: H/HTTPS_Client-authenticated
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/HTTPS/Client-authenticated
#c# 2018-11-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: H/Hailstone_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hailstone_sequence
#c# 2016-09-04 <RC, 2018-10-17 >RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hailstone_sequence.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hailstone_sequence
#c# 2015-10-27 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK

File: H/Hamming_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hamming_numbers
#c# 2015-11-04 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hamming_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hamming_numbers
#c# 2019-04-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Handle_a_signal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Handle_a_signal
#c# 2015-12-05 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: H/Happy_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Happy_numbers
#c# 2015-12-03 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# for JVM: 'state %seen' fails in 'loop' or 'while' construct, but OK if bogus 'for' used

File: H/Happy_numbers-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Happy_numbers
#c# 2015-12-03 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: 'state %seen' fails in 'loop' or 'while' construct, but OK if bogus 'for' used

File: H/Happy_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Happy_numbers
#c# 2015-12-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Harmonic_series
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Harmonic_series
#c# 2021-05-26 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: H/Harmonic_series-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Harmonic_series
#c# 2021-05-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: H/Harshad_or_Niven_series
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Harshad_or_Niven_series
#c# 2016-08-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Harshad_or_Niven_series.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Harshad_or_Niven_series
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hash_from_two_arrays
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hash_from_two_arrays
#c# 2016-08-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hash_from_two_arrays.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hash_from_two_arrays
#c# 2015-12-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hash_join
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hash_join
#c# 2016-08-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hash_join.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hash_join
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Haversine_formula
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Haversine_formula
#c# 2015-10-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hello_world_Graphical
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Graphical
#t# gui
#c# 2018-04-01 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: H/Hello_world_Line_printer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Line_printer
#t# skiptest
#c# 2018-08-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Hello_world_Newbie
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Hello_world/Newbie
##t# nocode
##c# 2018-08-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Hello_world_Newline_omission
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Newline_omission
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hello_world_Standard_error
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Standard_error
#c# 2018-03-20 <RC, 2018-05-17
#m# MOAR: OK
#j# JVM:  OK

File: H/Hello_world_Text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Text
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Hello_world_Web_server
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hello_world/Web_server
#c# 2016-02-10 <RC, 2018-04-25 <RC
#t# interactive
#m# MOAR: OK
#j# JVM:  OK
#n# either/or, comment one out to test the other

File: H/Hello_world_Web_server.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hello_world/Web_server
#c# 2016-02-10 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: H/Here_document
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Here_document
#c# 2016-08-01 <RC, 2018-04-25 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# on RC, skip intermediate variables
#n# extra spaces in the 'Bob Dylan' line?

File: H/Heronian_triangles
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Heronian_triangles
#c# 2015-10-26 <>RC, 2018-10-15 >RC, 2019-02-25 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# .race in 1st or 2nd loop give same speed-up (but not 3rd!); no, cannot nest them, blows up 
#n# 2019-10-17 concurrency is sometimes not working well?
#n# 2019-10-18 problem appears to be limited to older MacOS?

File: H/Heronian_triangles.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Heronian_triangles
#c# 2015-10-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hickerson_series_of_almost_integers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hickerson_series_of_almost_integers
#c# 2016-02-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Higher-order_functions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Higher-order_functions
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hilbert_curve-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hilbert_curve
#c# 2018-04-24 <RC, 2018-07-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: hilbert_curve.svg

File: H/Hilbert_curve-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hilbert_curve
#c# 2018-07-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: moore_curve.svg

File: H/Hilbert_curve.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hilbert_curve
#c# 2018-04-24 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: hilbert_curve.svg

File: H/History_variables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/History_variables
#c# 2016-06-02 <RC, 2018-04-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# thundergnat:  Can't have a .STORE method on a scaler sigiled variable right now

File: H/History_variables.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/History_variables
#c# 2016-06-02 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: H/Hofstadter-Conway_10,000_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hofstadter-Conway_$10,000_sequence
#c# 2016-05-08 <RC, 2018-10-16 >RC, 2018-10-16 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# .race provides no benefit here

File: H/Hofstadter-Conway_10,000_sequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hofstadter-Conway_$10,000_sequence
#c# 2016-05-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# the 'fast' alternative version no longer has any performance advantage 
#n# for 2015.12 release there was a 5-fold difference in run times:
#n#  924.509u 4.794s 15:33.19 99.5% vs 195.557u 1.699s 3:18.11 99.5%

File: H/Hofstadter_Figure-Figure_sequences
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hofstadter_Figure-Figure_sequences
#c# 2018-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Hofstadter_Figure-Figure_sequences.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Hofstadter_Figure-Figure_sequences
#c# 2015-11-22 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# mark as defunct, .plan abandoned: https://github.com/rakudo/rakudo/commit/6d1e95c96b

File: H/Hofstadter_Q_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hofstadter_Q_sequence
#c# 2015-11-22 <>RC, 2016-04-23 >RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Holidays_related_to_Easter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Holidays_related_to_Easter
#c# 2016-03-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Home_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Home_primes
#c# 2021-05-24 <RC, 2021-05-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# not testing HP49, removed timing code

File: H/Home_primes.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Home_primes
#c# 2021-06-01 <RC
#m# MOAR: OK
#j# JVM:  BROKEN OK
#n# full version, not routinely tested
#n# 104.58s user 4.47s system 77% cpu 2:20.89 total

File: H/Horizontal_sundial_calculations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Horizontal_sundial_calculations
#c# 2015-12-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Horner%27s_rule_for_polynomial_evaluation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Horner's_rule_for_polynomial_evaluation
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Horse_racing
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Horse_racing
#c# 2021-08-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Host_introspection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Host_introspection
#c# 2016-02-02 <RC, 2018-11-15 <RC, 2018-12-12 <>RC, 2020-10-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN 
#n# presumably JVM will get the read-int16 method sooner than NativeCall?

File: H/Host_introspection.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Host_introspection
#c# 2016-02-02 <RC
#m# MOAR: OK
#j#  JVM: BROKEN ($*VM.config NYI?)

File: H/Hostname
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hostname
#c# 2016-06-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Hough_transform
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hough_transform
#c# 2018-09-26 >RC, 2018-10-15 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: hough.png
#n# for JVM: module
#n# to get GD installed: ln -s /opt/local/lib/libgd.3.dylib /usr/local/lib/libgd.dylib
#n# GD interface limits us to 255 colors, so only transform darker pixels in input
#n# not using .race as cannot exactly control pixel color assigments, so testing would fail

File: H/Hourglass_puzzle
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Hourglass_puzzle
#c# 2020-12-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Huffman_coding
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Huffman_coding
#c# 2015-11-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: H/Huffman_coding-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Huffman_coding
#c# 2020-08-25 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# missed this one...

File: H/Humble_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Humble_numbers
#c# 2019-08-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: H/Hunt_the_Wumpus
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Hunt_The_Wumpus
#c# 2015-11-28 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: I/I%27m_a_software_engineer,_get_me_out_of_here
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/I%27m_a_software_engineer,_get_me_out_of_here
#c# 2021-01-24 >RC
#m# MOAR: OK
#j#  JVM: OK

File: I/I%27m_a_software_engineer,_get_me_out_of_here.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/I%27m_a_software_engineer,_get_me_out_of_here
#c# 2021-01-24 >RC
#m# MOAR: OK
#j#  JVM: OK

File: I/I.Q._Puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/I.Q._Puzzle
#c# 2017-06-08 <RC, 2018-05-30 >RC
#m# MOAR: OK
#j#  JVM: OK
# removed cache feature, made it slower

File: I/IBAN
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/IBAN
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/IPC_via_named_pipe
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/IPC_via_named_pipe
#t# interactive
#c# 2020-09-23 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN

File: I/ISBN13_check_digit
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/ISBN13_check_digit
#c# 2019-12-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# neither 'words' nor '|' actually needed

File: I/ISBN13_check_digit-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/ISBN13_check_digit
#c# 2019-12-04 NOT ON RC
#m# MOAR: OK
#j# JVM:  OK
#n# bare minimum version

File: I/I_before_E_except_after_C-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/I_before_E_except_after_C
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/I_before_E_except_after_C-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/I_before_E_except_after_C
#c# 2015-12-11 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# java.lang.StackOverflowError
#n# 2020-11-15 moar-blead [FIXED: thundergnat++, the necessary coercion is '+$<freq>']
#n# Impossible coercion from 'CollectWords' into 'Num:D': method Num returned an instance of BOOTNum

File: I/Identity_matrix
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Identity_matrix
#c# 2015-12-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Idiomatically_determine_all_the_characters_that_can_be_used_for_symbols
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Idiomatically_determine_all_the_characters_that_can_be_used_for_symbols
#c# 2018-03-20 <RC, 2018-06-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 'unival' NYI

File: I/Idiomatically_determine_all_the_lowercase_and_uppercase_letters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Idiomatically_determine_all_the_lowercase_and_uppercase_letters
#c# 2016-02-29 <RC
#m# MOAR: OK
#j#  JVM: OK
#    pretty rough, but whatever!

File: I/Image_convolution
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Image_convolution
#c# 2019-10-13 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: frog_convolution.png
#n# 2019-11-11 thundergnat gives a fix for native version, but no time to fiddle with it now
#n# made an effort to get the MagickWand version to work, but just kept seg faulting...
#n# just cloning from Perl until something better comes along

File: I/Image_noise
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Image_noise
#c# 2018-04-25 <RC, 2019-05-25 <RC, 2019-07-27 <RC
#t# gui
#m# MOAR: OK
#j# JVM:  BROKEN
#n# ln -s /opt/local/lib/libSDL2-2.0.0.dylib /usr/local/lib/libSDL2.dylib
#n# 2019-04-24 SDL_RenderDrawPoints no longer needed after update of SDL?

File: I/Imaginary_base_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Imaginary_base_numbers
#c# 2017-02-15 <RC, 2018-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Imaginary_base_numbers-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Imaginary_base_numbers
#c# 2020-04-26 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: I/Implicit_type_conversion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Implicit_type_conversion
#c# 2016-02-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Include_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Include_a_file
#c# 2016-02-13 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: I/Increasing_gaps_between_consecutive_Niven_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Increasing_gaps_between_consecutive_Niven_numbers
#c# 2020-01-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: I/Increment_a_numerical_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Increment_a_numerical_string
#c# 2016-02-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Index_finite_lists_of_positive_integers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Index_finite_lists_of_positive_integers
#c# 2016-04-17 <RC, 2018-09-9=07 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# don't let zero start list

File: I/Index_finite_lists_of_positive_integers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Index_finite_lists_of_positive_integers
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# JVM hangs when values returned from 'expand' are out of order (bigger first, then smaller)

File: I/Infinity
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Infinity
#c# 2018-03-20 <RC, 2018-04-15 >RC
#m# MOAR: OK
#j# JVM:  OK

File: I/Inheritance_Multiple
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Inheritance/Multiple
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Inheritance_Single
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Inheritance/Single
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Input_Output_for_Lines_of_Text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Input/Output_for_Lines_of_Text
#c# 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#i# RC cli: ref/lines_of_text.txt
#n# 2018-09-10 added better testing

File: I/Input_Output_for_Lines_of_Text.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Input/Output_for_Lines_of_Text
#c# 2016-06-04 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: I/Input_Output_for_Pairs_of_Numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Input/Output_for_Pairs_of_Numbers
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#i# RC cli: ref/lines_of_numbers.txt
#n# 2018-09-10 added testing

File: I/Input_loop
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/Input_loop
#c# 2015-12-23 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK
#n# 'pipe': NYI or just an example?

File: I/Integer_comparison
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Integer_comparison
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 1\n2\n3\n3

File: I/Integer_overflow
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Integer_overflow
#c# 2016-03-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Integer_roots
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Integer_roots
#c# 2016-05-16 <RC, 2019-04-19 >RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Integer_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Integer_sequence
#c# 2016-05-04 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: I/Interactive_Help
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/Interactive_Help
#t# nocode
#c# 2019-02-09 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# this entry needs a top-to-bottom re-write

File: I/Interactive_programming
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Interactive_programming
#t# skiptest
#c# 2020-03-17 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# this task needs a top-to-bottom re-write

File: I/Intersecting_Number_Wheels
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Intersecting_Number_Wheels
#c# 2019-09-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: I/Introspection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Introspection
#c# 2018-03-20 <>RC, 2018-05-17 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# testing is vague

File: I/Inverted_index
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Inverted_index
#c# 2015-12-03 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   simple-minded, doesn't handle punctuation

File: I/Inverted_syntax
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Inverted_syntax
#t# skiptest
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: I/Isqrt_integer_square_root_of_X
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Isqrt_(integer_square_root)_of_X
#c# 2020-12-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: I/Iterated_digits_squaring
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Iterated_digits_squaring
#c# 2016-05-10 <RC, 2017-05-01 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK

File: I/Iterated_digits_squaring-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Iterated_digits_squaring
#c# 2018-12-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: I/Iterated_digits_squaring-nqp
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Iterated_digits_squaring
#c# 2016-05-10 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#   20161123: 185.736u 0.326s  3:06.32 99.8%
#   20180314: 183.113u 0.450s  3:03.85 99.8%
#   20180814: 163.367u 0.447s  2:44.22 99.7%
#   20181004: 141.835u 0.425s  2:22.25 100.0%

File: I/Iterated_digits_squaring.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Iterated_digits_squaring
#c# 2016-05-10 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#    20161123:  488.091u 3.883s 9:32.62 85.9% ('slower' method for 1 million)
#    20170123:  346.000u 1.076s 5:48.55 99.5          "
#    20170123: 1575.136u 9.628s 24:57.94 105.7        " [for JVM]
#
#    20161123: 1186.824u 4.596s 19:55.32 99.6% (combined)
#    20170123:  854.808u 2.839s 14:23.53 99.3%      "

File: J/JSON
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/JSON
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: J/Jacobi_symbol
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jacobi_symbol
#c# 2020-01-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: J/Jaro-Winkler_Distance
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Jaro-Winkler_Distance
#c# 2020-07-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: J/Jaro-Winkler_Distance.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jaro-Winkler_Distance
#c# 2020-07-31 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# cut down the words tested, as very, very slow

File: J/Jaro_distance
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jaro_distance
#c# 2018-03-20 <RC, 2020-08-09 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# fiddle a little, more idiomatic
#n# on RC now called 'Jaro similarity'

File: J/Jensen%27s_Device
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jensen's_Device
#c# 2015-11-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: J/Jewels_and_Stones
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jewels_and_Stones
#c# 2018-04-25 <RC, 2018-04-27 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# warning avoided

File: J/Josephus_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Josephus_problem
#c# 2015-11-12 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: J/Joystick_position
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Joystick_position
#t# skiptest
#c# 2020-02-02 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# ENOHARDWARE

File: J/Juggler_sequence
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Juggler_sequence
#c# 2021-08-18 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: J/Julia_set
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Julia_set
#c# 2016-03-25 <RC, 2018-09-26 <RC, 2018-11-05 <RC, 2020-03-12
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: julia-set-perl6.png
#n# 2018-09-26 running time is no longer an issue!
#n# 2020-03-12 caching more than halves wall-clock time

File: J/Julia_set.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Julia_set
#c# 2016-03-25 <RC
#t# toodamnslow
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: julia-set-perl6.png
#n# Error while compiling op nativecallinvoke, no registered operation handler

File: J/Jump_anywhere
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Jump_anywhere
#c# 2016-09-16 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j#  JVM: OK

File: J/Just_in_time_processing_on_a_character_stream
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Just_in_time_processing_on_a_character_stream
#c# 2019-04-12 <RC, 2019-06-01 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# encoding string is no longer stable, so don't test for it

File: K/K-d_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/K-d_tree
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# much faster generation time: 1.4519163s (vs 67+) [when/why?]
#n# stable now?

File: K/K-means%2B%2B_clustering
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/K-means%2B%2B_clustering
#c# 2016-06-04 <RC, 2018-05-02 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'sort' tweak broke JVM (but now fixed)
#n# hash order randomization required tweak to algorithm

File: K/Kahan_summation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kahan_summation
#c# 2018-06-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: K/Kaprekar_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Kaprekar_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2015-12-05 <RC, 2018-10-05 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-10-05 added '.race', over 2x speed-up 
#n#  including base 10 & base 17:
#n#  20161123: 12946.216u 383.841s 3:44:04.17 99.1%  (with 10:1e5/17:1e6)
#n#  20170123: 11099.346u 213.517s 3:22:29.73 93.1%  ( " )
#n#  20171027:  8394.155u  80.415s 2:21:35.74 99.7%  ( " )
#n#  20181004:  8869.908u  62.636s 2:29:16.12 99.7%  ( " )
#n#  20181005    599.969u  80.040s    2:37.84 430.8% (with 10:1e5/17:1e5)
#n#  20181005    748.930u  21.489s    3:23.42 378.7% (with 10:1e6/17:1e5) ! doing more
#n#  20181006  10899.558u 259.860s   50:13.82 370.2% (with 10:1e6/17:1e6) ! doing much more
#n#  _NEXT_
#n# 2021-03-20 split from JVM version, added back base-17 calculations
#n# 2021-03-22 dropped base-17 again, race-condition in testing

File: K/Kaprekar_numbers-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2015-12-05 <RC, 2018-10-05 >RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Kaprekar_numbers-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kaprekar_numbers
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: BROKEN UnwindException

File: K/Kernighans_large_earthquake_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kernighans_large_earthquake_problem
#c# 2018-04-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: K/Keyboard_input_Flush_the_keyboard_buffer
#!/usr/bin/env perl6 
#u# http://rosettacode.org/wiki/Keyboard_input/Flush_the_keyboard_buffer
#t# interactive
#c# 2019-03-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# usual kluge for macOS, doesn't heed ^C, have to kill from other shell

File: K/Keyboard_input_Keypress_check
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Keyboard_input/Keypress_check
#t# interactive
#c# 2018-11-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: K/Keyboard_input_Obtain_a_Y_or_N_response
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Keyboard_input/Obtain_a_Y_or_N_response
#c# 2015-12-06 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: K/Keyboard_macros
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Keyboard_macros
#c# 2016-06-04 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: K/Knapsack_problem_0_1-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knapsack_problem/0-1
#c# 2017-02-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Knapsack_problem_0_1-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Knapsack_problem/0-1
#c# 2017-02-12 <RC, 2020-03-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: K/Knapsack_problem_Bounded-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knapsack_problem/Bounded
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# investigate why this is so much slower than -2 alternative?
#   20170212: 976.037u 6.201s 17:46.31 92.1%
#   20171027: 928.568u 3.373s 15:33.07 99.8%
#   20181004: 882.382u 4.265s 14:47.06 99.9%
#    _NEXT_

File: K/Knapsack_problem_Bounded-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knapsack_problem/Bounded
#c# 2019-01-27 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# nearly 200x faster compared to -1 version: 4.193u 0.145s 0:03.83 113.0%

File: K/Knapsack_problem_Continuous
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knapsack_problem/Continuous
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#   Type check failed in binding to nu; expected Int but got Str ("3.8")

File: K/Knapsack_problem_Unbounded
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knapsack_problem/Unbounded
#c# 2015-11-04 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Knight%27s_tour
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knights_tour
#c# 2015-11-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Knuth%27s_algorithm_S
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knuth's_algorithm_S
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Knuth%27s_power_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knuth\'s_power_tree
#c# 2016-05-23 <RC, 2018-05-20 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# JVM more accurate than MOAR for 1.1 ** 81? (see end)

File: K/Knuth_shuffle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Knuth_shuffle
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Koch_curve-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Koch_curve
#c# 2018-04-24 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: koch_curve-1.svg

File: K/Koch_curve-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Koch_curve
#c# 2018-04-24 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: koch_curve-2.svg

File: K/Kolakoski_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kolakoski_sequence
#c# 2018-05-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: K/Kosaraju
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kosaraju
#c# 2018-10-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# can substitute 'classify' for 'categorize'

File: K/Kronecker_product
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kronecker_product
#c# 2017-04-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: K/Kronecker_product_based_fractals
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kronecker_product_based_fractals
#c# 2017-04-18 <RC, 2018-10-16 >RC, 2019-02-18 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: kronecker-vicsek-perl6.png
#n# xx file: kronecker-carpet-perl6.png
#n# xx file: kronecker-six-perl6.png
#n# 2018-10-31 Moar bug?  https://gist.github.com/SqrtNegInf/2b0ccf921e2c5b529432555c74ece006
#n# 2018-11-05 still an open issue on GH: https://github.com/rakudo/rakudo/issues/2453
#n# 2018-11-16 after Moar/NQP bump, I see the fix woo-hoo

File: K/Kronecker_product_based_fractals.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Kronecker_product_based_fractals
#c# 2017-04-18 <RC, 2018-10-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: kronecker-vicsek-perl6.png
#n# xx file: kronecker-carpet-perl6.png
#n# xx file: kronecker-six-perl6.png
#n# 2018-10-31 Moar bug?  https://gist.github.com/SqrtNegInf/2b0ccf921e2c5b529432555c74ece006
#n# 2018-11-05 still an open issue on GH: https://github.com/rakudo/rakudo/issues/2453
#n# 2018-11-16 after Moar/NQP bump, I see the fix woo-hoo

File: L/LU_decomposition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/LU_decomposition
#c# 2015-12-14 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: lu_decomposition.txt

File: L/LZW_compression
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/LZW_compression
#c# 2016-01-04 <RC, 2020-04-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/LZW_compression.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/LZW_compression
#c# 2016-01-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Lah_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lah_numbers
#c# 2019-08-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Langton%27s_ant
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Langton's_ant
#c# 2016-01-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Langton%27s_ant.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Langton's_ant#Perl_6 
#c# 2016-01-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Largest_int_from_concatenated_ints
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Largest_int_from_concatenated_ints
#c# 2015-11-04 <RC, 2017-05-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Largest_number_divisible_by_its_digits
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Largest_number_divisible_by_its_digits
#c# 2017-09-02 <RC, 2018-10-13 >RC, 2020-07-19 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# better than 5-folder improvement with .race  and better tests
#n# align with version on RC

File: L/Largest_number_divisible_by_its_digits.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Largest_number_divisible_by_its_digits
#c# 2017-09-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 153.826u 1.602s 2:35.24 100.1%

File: L/Largest_number_divisible_by_its_digits.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Largest_number_divisible_by_its_digits
#c# 2017-09-02 <RC, 2018-10-13 >RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Largest_proper_divisor_of_n
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Largest_proper_divisor_of_n
#c# 2021-06-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: L/Last_Friday_of_each_month
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Last_Friday_of_each_month
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Last_letter-first_letter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Last_letter-first_letter
#c# 2016-01-05 <RC, 2018-11-19 >RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#    20161123: 2914.695u 163.591s 51:25.62 99.7%
#    20170123: 2416.003u  89.999s 41:49.43 99.8%
#    20171027: 1661.927u  13.988s 27:12.90 102.6%
#    20181004: 1151.774u  27.752s 19:28.70 100.9
#    _NEXT_

File: L/Latin_Squares_in_reduced_form
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Latin_Squares_in_reduced_form
#c# 2020-01-08 >RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Latin_Squares_in_reduced_form.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Latin_Squares_in_reduced_form
#t# toodamnslow
#c# 2019-12-xx >RC
#m# MOAR: OK
#j#  JVM: OK
#n# performance issues: fine for 4/5, but impossibly slow for 6 (multi-day run-time)
#n# incomplete: need sub calc of n-sized square, and proper extraction of results

File: L/Latin_Squares_in_reduced_form_Randomizing_using_Jacobson_and_Matthews_Technique
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Latin_Squares_in_reduced_form/Randomizing_using_Jacobson_and_Matthews’_Technique
#t# output varies
#c# 2021-07-30 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK
#n# results not stable, no testing possible

File: L/Launch_rocket_with_countdown_and_acceleration_in_stdout
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Launch_rocket_with_countdown_and_acceleration_in_stdout
#t# interactive
#c# 2019-08-07 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# JVM works so-so, but doesn't terminate

File: L/Law_of_cosines_-_triples-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Law_of_cosines_-_triples
#c# 2018-09-25 <RC, 2018-10-18 >RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# added atomic ops to avoid race condition, and must use fixed-size @triples
#n# jnthn: SqrtNegInf: @a is not threadsafe; it's an auto-resizing array
#n# jnthn: SqrtNegInf: Declare it fixed-size instead: `my @a[60];`

File: L/Law_of_cosines_-_triples-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Law_of_cosines_-_triples
#c# 2018-09-24 <RC
#m# MOAR: OK
#j# JVM:  OK
#  for JVM: .race and module
#n# Thundergnat's performant version (but with .race it sometimes gives 18383 for 'extra credit')
#n# see main code, use @triples not %triples, atomic ops and no more problem

File: L/Law_of_cosines_-_triples-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Law_of_cosines_-_triples
#c# 2018-09-23 >RC
#m# MOAR: OK
#j#  JVM: OK 
#n# for JVM: module
#n# 'elegant' version (no longer on RC)
#n# NB: three different uses of 'X' meta-op
#n# no extra-credit, lesson learned: 'X' operator is expensive

File: L/Leap_year
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Leap_year
#c# 2015-11-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Least_common_multiple
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Least_common_multiple
#c# 2016-02-13 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Left_factorials
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Left_factorials
#c# 2015-11-07 <>RC, 2019-03-05 <RC, 2019-03-14 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: L/Left_factorials.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Left_factorials
#c# 2015-11-07 <>RC, 2019-03-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Left_factorials.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Left_factorials
#c# 2015-11-07 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Left_factorials.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Left_factorials
#c# 2015-11-07 <>RC, 2019-03-05 <RC, 2019-03-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Legendre_prime_counting_function
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Legendre_prime_counting_function
#c# 2021-08-04 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Seems like an awful lot of pointless work. Using prime sieve anyway, why not just use it?

File: L/Length_of_an_arc_between_two_angles
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Length_of_an_arc_between_two_angles
#c# 2020-03-16 <RC, 2020-03-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Length_of_an_arc_between_two_angles.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Length_of_an_arc_between_two_angles
#c# 2020-03-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Leonardo_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Leonardo_numbers
#c# 2017-05-20 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: downgraded Unicode names to ASCII

File: L/Letter_frequency
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Letter_frequency
#c# 2018-03-20 <RC, 2018-05-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# for MOAR: .value & .key sorting to stabilize order of output when duplicate values
#n# but JVM doesn't have that yet (as of 2018-05-18) so just do a .key sort

File: L/Levenshtein_distance
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Levenshtein_distance
#c# 2016-02-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Levenshtein_distance_Alignment
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Levenshtein_distance/Alignment
#c# 2016-05-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Line_circle_intersection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Line_circle_intersection
#c# 2020-03-09 <RC, 2020-03-11 >RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Linear_congruential_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Linear_congruential_generator
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Linux_CPU_utilization
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Linux_CPU_utilization
#t# skiptest
#c# 2019-01-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# tested on Ubuntu 18

File: L/List_comprehensions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/List_comprehensions
#c# 2016-09-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/List_comprehensions.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/List_comprehensions
#c# 2015-10-16 <RC
#   update just added '.say'

File: L/List_rooted_trees
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/List_rooted_trees
#c# 2016-05-23 <RC
#m# MOAR: BROKEN
#j#  JVM: OK
#n# Cannot call 'shift' on an immutable 'List'

File: L/Literals_Floating_point
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Literals/Floating_point
#c# 2016-05-13 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# difference between MOAR/JVM is just 'e-09' vs 'E-9'

File: L/Literals_Integer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Literals/Integer
#c# 2016-01-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Literals_String
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Literals/String
#c# 2016-01-17 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: L/Logical_operations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Logical_operations
#c# 2016-04-24 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n#  where 'say' just works, gather/take construct sometimes requires .gist or .raku (they are equivalent here)

File: L/Logistic_Curve_Fitting_in_Epidemiology
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Logistic_Curve_Fitting_in_Epidemiology
#c# 2020-05-11 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK
#  {{Works with|rakudo|2020.05}} or {{broken|Raku}}  

File: L/Long_literals,_with_continuations.0
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Long_literals,_with_continuations
#c# 2020-03-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Geez Louise... GS makes even particularly picky pedants look permissive

File: L/Long_multiplication
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Long_multiplication
#c# 2015-10-26 <RC, 2018-04-25 >RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Long_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Long_primes
#c# 2018-08-04 <RC, 2018-10-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# full calculation: 1100.497u 83.821s 3:25.17 577.2%

File: L/Long_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Long_primes
#c# 2018-08-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# drastically cut down on results calculated

File: L/Long_year
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Long_year
#c# 2020-01-09 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Longest_Common_Substring-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_Common_Substring
#c# 2016-05-15 <RC, 2021-02-12 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 4x faster, even when 'grep' is left out of alternate version

File: L/Longest_Common_Substring-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_Common_Substring
#c# 2016-05-15 <RC, 2021-02-12 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# how many language elements can I wedge into 2 one-line functions?
#n# the 'grep' is a notionally for efficiency (upper-triangular) but program runs faster without it

File: L/Longest_common_prefix
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_common_prefix
#c# 2015-11-28 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Longest_common_subsequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_common_subsequence
#c# 2015-11-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Longest_common_subsequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Longest_common_subsequence
#c# 2015-11-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Longest_common_suffix
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Longest_common_suffix
#c# 2020-07-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Longest_increasing_subsequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_increasing_subsequence
#c# 2015-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n#  source of GH2788 issue

File: L/Longest_palindromic_substrings
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Longest_palindromic_substrings
#c# 2020-09-29 <RC, <RC, 2020-10-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# and edit behind RC... (the 'pi' portion of the task, which is tested)

File: L/Longest_string_challenge
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Longest_string_challenge
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Longest_substrings_without_repeating_characters
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Longest_substrings_without_repeating_characters
#c# 2021-05-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Unicode test fails JVM

File: L/Look-and-say_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Look-and-say_sequence
#c# 2018-04-04 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Look-and-say_sequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Look-and-say_sequence
#c# 2015-12-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loop_over_multiple_arrays_simultaneously
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously
#c# 2015-10-27 <RC, 2020-11-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Break
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Break
#c# 2015-11-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Continue
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Continue
#c# 2016-02-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Do-while
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Do-while
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Loops_Downward_for
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Downward_for
#c# 2015-12-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_For
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/For
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_For_with_a_specified_step
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/For_with_a_specified_step
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Foreach
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Foreach
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# mutating .= must not be white-space separated from args

File: L/Loops_Increment_loop_index_within_loop_body
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Increment_loop_index_within_loop_body
#c# 2018-02-24 <RC, 2018-04-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Loops_Increment_loop_index_within_loop_body.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Loops/Increment_loop_index_within_loop_body
#c# 2018-02-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Loops_Infinite
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Infinite
#c# 2016-05-14 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_N_plus_one_half
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/N_plus_one_half
#c# 2016-05-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Nested
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Nested
#c# 2016-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_While
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/While
#c# 2016-05-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Loops_Wrong_ranges
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/Wrong_ranges
#c# 2018-09-16 <RC, 2018-10-19 <RC, 2020-05-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: L/Loops_with_multiple_ranges-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/with_multiple_ranges
#c# 2018-09-17 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# I have to 'cache' the 1st 'j' sequence because of '@res.push:'

File: L/Loops_with_multiple_ranges-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Loops/with_multiple_ranges
#c# 2018-09-14 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# alternate method to generate $j; being very literal-minded here...
#n# .Seq issues: chose to use @j not $j, skip 'cache' (xref -1 version)
#n# Thundergnat merged this into one sequence on RC

File: L/Lucas-Lehmer_test
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lucas-Lehmer_test
#c# 2016-02-18 <RC, 2019-02-24 <RC, 2019-02-27 <RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: L/Lucas-Lehmer_test.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lucas-Lehmer_test
#c# 2016-02-18 <RC, 2019-02-24 <RC, 2019-02-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Lucky_and_even_lucky_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lucky_and_even_lucky_numbers
#c# 2016-05-12 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Ludic_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ludic_numbers
#c# 2016-01-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Luhn_test_of_credit_card_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Luhn_test_of_credit_card_numbers
#c# 2016-08-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Luhn_test_of_credit_card_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Luhn_test_of_credit_card_numbers
#c# 2015-12-05 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: L/Lychrel_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lychrel_numbers
#c# 2015-10-17 <RC, 2018-04-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# .hyper/.race fails here
#n# speed of language was not improving, but algorithm change brought 27x speed-up:
#n# and memoization brought another 15x or so...  thundergnat++
#    20161123: 1911.232u 24.260s 32:49.18 98.2%
#    20171027: 1972.841u  6.163s 33:01.60 99.8%
#    20180422:   70.895u  0.424s  1:11.00  100%
#    20200209:     4.300u 0.202s  0:03.82  117.8%

File: L/Lychrel_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Lychrel_numbers
#c# 2015-10-17 <RC, 2018-04-18 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#    20161123: 1911.232u 24.260s 32:49.18 98.2%
#    20170123: 1984.279u  9.042s 33:23.13 99.5%
#    20171027: 1972.841u  6.163s 33:01.60 99.8%
#    _NEXT_

File: M/MAC_Vendor_Lookup
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/MAC_Vendor_Lookup
#c# 2017-01-15 <RC, 2018-04-07 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# VMArray representation does not implement bind_pos_native
#n# ultimately has to do with SSL, which involves NativeCall

File: M/MAC_Vendor_Lookup.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/MAC_Vendor_Lookup
#c# 2017-01-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/MD4
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/MD4
#c# 2016-01-18 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: M/MD5
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/MD5
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/MD5_Implementation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/MD5/Implementation
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# kludge for JVM: uint64 instead of uint32
#n# 2019-10-26 kludge still needed

File: M/Mad_Libs
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mad_Libs
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: Oscar\nhe\ngiraffe\n

File: M/Magic_8-Ball
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_8-Ball
#c# 2018-04-24 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: who\nwhat\nwhen\nwhere\n\n

File: M/Magic_squares_Perl_6
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_squares/Perl_6
#c# 2016-03-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#    pass in '2' on command line to have results 2 .. 12 validated

File: M/Magic_squares_Perl_6-debug
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_squares/Perl_6
#t# skiptest
#n# cf ~/perl5/Rosetta-Code/M/Magic_squares_Perl-debug
#n# https://stackoverflow.com/questions/55994128/

File: M/Magic_squares_of_doubly_even_order
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_squares_of_doubly_even_order
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# cf M/Magic_squares_Perl_6

File: M/Magic_squares_of_odd_order
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_squares_of_odd_order
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# cf M/Magic_squares_Perl_6

File: M/Magic_squares_of_singly_even_order
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Magic_squares_of_singly_even_order
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# cf M/Magic_squares_Perl_6

File: M/Magnanimous_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Magnanimous_numbers
#c# 2020-03-19 <RC, 2020-10-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Main_step_of_GOST_28147-89
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Main_step_of_GOST_28147-89
#c# 2016-01-05 <RC, 2019-05-06 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# Tim Toady had a back-whack, no longer needed?

File: M/Make_a_backup_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Make_a_backup_file
#c# 2017-11-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#r# RC prep: cp -p ref/not-in-kansas.txt run
#f# RC file: not-in-kansas.txt.bk1
#n# '{$abs}' needed in some places, so just use it everywhere...

File: M/Make_directory_path
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Make_directory_path
#c# 2016-06-04 <>RC, 2018-05-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Man_or_boy_test
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Man_or_boy_test
#c# 2015-11-23 <RC
#m# MOAR: OK
#j#  JVM: BROKEN StackOverflowError

File: M/Mandelbrot_set
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mandelbrot_set
#c# 2016-08-22 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: mandelbrot.ppm

File: M/Mandelbrot_set-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mandelbrot_set
#c# 2016-08-22 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: mandelbrot.png

File: M/Mandelbrot_set.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Mandelbrot_set
#c# 2015-11-23 <RC
#c# 2016-08-22 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#f# RC file: mandelbrot.ppm

File: M/Map_range
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Map_range
#c# 2016-02-08 <RC, 2020-03-19 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# cut the boring solution from RC

File: M/Markov_chain_text_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Markov_chain_text_generator
#c# 2016-11-11 <RC, 2017-01-31 >RC, 2017-02-05 <>RC, 2018-05-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#n#  key order of hashes no longer stable (but ArrayHash provides a work-around)
#n# 2021-03-03 yesterday's "good" answer no longer works, updated again...

File: M/Markov_chain_text_generator.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Markov_chain_text_generator
#c# 2016-11-11 <RC, 2017-01-31 >RC, 2017-02-05 <>RC, 2018-05-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#n#  key order of hashes no longer stable (but ArrayHash provides a work-around)

File: M/Mastermind
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mastermind
#c# 2017-01-29 <RC, 2017-02-25 <RC, 2018-04-18 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# RC pipe: D B C E\nD F B E\nD F E B
#z# RC pipe: A B C D\nC A F B\nF A C B
#n# better testing again
#n# 2021-06-17 yesterday/today: hangs in automated testing, more srand drift? [yes, it was]

File: M/Matrix-exponentiation_operator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix-exponentiation_operator
#c# 2016-02-16 <RC, 2017-03-12 <RC, 2020-07-20 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'flatmap' deprecated

File: M/Matrix_Digital_Rain
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix_Digital_Rain
#t# skiptest
#c# 2018-12-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Matrix_Digital_Rain.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Matrix_Digital_Rain
#t# interactive
#c# 2018-12-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Matrix_Digital_Rain.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Matrix_Digital_Rain
#t# interactive
#c# 2018-12-18 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Matrix_chain_multiplication
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix_chain_multiplication
#c# 2018-11-29 <RC, 2019-02-06 >RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Matrix_multiplication
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix_multiplication
#c# 2016-02-16 <RC, 2020-03-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Matrix_transposition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix_transposition
#c# 2017-04-18 <RC, 2018-04-10 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-05-13 output format changed

File: M/Matrix_transposition.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Matrix_transposition
#c# 2017-04-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Matrix_transposition.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Matrix_transposition
#c# 2016-02-23 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Maximum_difference_between_adjacent_elements_of_list
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Maximum_difference_between_adjacent_elements_of_list
#c# 2021-07-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Maximum_triangle_path_sum
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Maximum_triangle_path_sum
#c# 2015-10-26 <>RC, 2018-04-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Maximum_triangle_path_sum.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Maximum_triangle_path_sum
#c# 2015-10-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Mayan_calendar
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mayan_calendar
#c# 2019-01-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Mayan_numerals-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Mayan_numerals
#c# 2019-01-18 <RC, 2021-02-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Mayan_numerals-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Mayan_numerals
#c# 2021-02-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n#  plain old text mode. Not as pretty, but still serviceable.

File: M/Maze_generation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Maze_generation
#t# skiptest
#c# 2015-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2021-03-01 still unstable ('ENTER' does not help)

File: M/Maze_solving
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Maze_solving
#t# skiptest
#c# 2015-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2021-03-01 still unstable

File: M/McNuggets_Problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/McNuggets_Problem
#c# 2018-10-27 <RC, 2018-12-01 <RC, 2019-05-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/McNuggets_Problem.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/McNuggets_Problem
#c# 2018-10-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Median_filter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Median_filter
#c# 2019-10-12 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: plasma_median.png

File: M/Memory_allocation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Memory_allocation
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Memory_layout_of_a_data_structure
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Memory_layout_of_a_data_structure
#c# 2018-08-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# as stands, just trivial
#n# 'bit' not defined

File: M/Menu
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Menu
#c# 2016-04-09 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: 2

File: M/Merge_and_aggregate_datasets
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Merge_and_aggregate_datasets
#c# 2020-12-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Mersenne_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mersenne_primes
#c# 2018-01-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Mertens_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mertens_function
#c# 2020-01-25 <RC, 2020-01-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# methinks someone has been nipping at the cooking brandy...

File: M/Mertens_function.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Mertens_function
#c# 2020-01-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Metallic_ratios
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Metallic_ratios
#c# 2019-10-31 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Metaprogramming
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Metaprogramming
#c# 2016-01-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Metered_concurrency
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Metered_concurrency
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Metronome
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Metronome
#c# 2016-05-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Mian-Chowla_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mian-Chowla_sequence
#c# 2019-03-12 <RC, 2019-03-22 <RC, 2019-06-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# changes make this twice as fast

File: M/Mian-Chowla_sequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Mian-Chowla_sequence
#c# 2019-03-12 <RC, 2019-03-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Middle_three_digits
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Middle_three_digits
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Miller-Rabin_primality_test
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Miller%E2%80%93Rabin_primality_test
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Mind_boggling_card_trick
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mind_boggling_card_trick
#c# 2018-09-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Minesweeper_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Minesweeper_game
#c# 2016-06-04 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: M/Minimal_steps_down_to_1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Minimal_steps_down_to_1
#c# 2019-12-14 <RC, 2019-12-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Minimal_steps_down_to_1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Minimal_steps_down_to_1
#c# 2019-12-14 <RC, 2019-12-16 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# for JVM: .perl not .raku (temporary)

File: M/Minimum_number_of_cells_after,_before,_above_and_below_NxN_squares
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Minimum_number_of_cells_after,_before,_above_and_below_NxN_squares
#c# 2021-08-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Minimum_positive_multiple_in_base_10_using_only_0_and_1-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Minimum_positive_multiple_in_base_10_using_only_0_and_1
#c# 2020-02-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# brute force version: (not testing separately because it's embedded in use of $iter, below)
#n# say $_ , ': ', (1..*).map( *.base(2) ).first: * %% $_ for flat 1..10, 95..105; # etc.

File: M/Minimum_positive_multiple_in_base_10_using_only_0_and_1-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Minimum_positive_multiple_in_base_10_using_only_0_and_1
#c# 2020-03-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Minkowski_question-mark_function
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Minkowski_question-mark_function
#c# 2020-11-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Modified_random_distribution
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Modified_random_distribution
#c# 2021-02-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Modular_arithmetic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Modular_arithmetic
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Modular_exponentiation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Modular_exponentiation
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Modular_inverse
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Modular_inverse
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Moebius_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Möbius_function
#c# 2020-01-26 <RC, 2020-01-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# junctions slower?

File: M/Moebius_function.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Möbius_function
#c# 2020-01-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Monads_List_monad
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monads/List_monad
#c# 2018-06-22 <RC, 2020-07-19 >RC, 2021-03-05 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# prefix/postfix 'join' started behaving differently with raku version v2021.02.1-28-gceac52170
#n# TIL that there has long been a difference in pre/post behavior for lists:
#n# my $a = ((1,2),(3,4)); say join(':',$a) ~ ' vs ' ~ $a.join: ':' ==> 1 2 3 4 vs 1 2:3 4
#n# 2021-03-10 commit  722c2c9792 restores behavior, now testing both forms of 'join'

File: M/Monads_Maybe_monad
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monads/Maybe_monad
#c# 2019-12-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Monads_Writer_monad
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Monads/Writer_monad
#c# 2020-05-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Monte_Carlo_methods
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monte_Carlo_methods
#c# 2016-03-31 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# different results when initiated from command line vs cron

File: M/Montgomery_reduction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Montgomery_reduction
#c# 2018-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Monty_Hall_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monty_Hall_problem
#c# 2015-11-23 <RC, 2018-10-14 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# with .race, output not deterministic, despite 'srand' and atomic op

File: M/Monty_Hall_problem.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Monty_Hall_problem
#c# 2015-11-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Morse_code
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Morse_code
#c# 2016-05-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Most_frequent_k_chars_distance
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Most_frequent_k_chars_distance
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Motzkin_numbers-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Motzkin_numbers
#c# 2021-08-14 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Using binomial coefficients and Catalan numbers

File: M/Motzkin_numbers-1.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Motzkin_numbers
#c# 2021-08-14 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Using binomial coefficients and Catalan numbers

File: M/Motzkin_numbers-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Motzkin_numbers
#c# 2021-08-14 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Mouse_position
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mouse_position
#t# gui
#c# 2018-12-18 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# install xdotool with: brew install xdotool
#n# change defaults: defaults write org.x.X11 enable_test_extensions -boolean true
#n# must start XQuartz for testing...

File: M/Mouse_position.1
#!/usr/bin/env perl6 # do-not-check
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Mouse_position
#t# interactive
#c# 2018-11-12 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN

File: M/Move-to-front_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Move-to-front_algorithm
#c# 2015-10-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Multi-base_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Multi-base_primes
#c# 2021-07-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Multi-base_primes-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Multi-base_primes
#t# toodamnslow
#c# 2021-07-08 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK

File: M/Multi-dimensional_array
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multi-dimensional_array
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Multidimensional_Newton-Raphson_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multidimensional_Newton-Raphson_method
#c# 2019-01-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Multifactorial
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multifactorial
#c# 2015-11-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Multiline_shebang
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiline_shebang
#c# 2018-06-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# runs and does nothing (with no args)

File: M/Multiple_distinct_objects
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiple_distinct_objects
#c# 2016-02-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Multiple_regression
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiple_regression
#c# 2016-05-01 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: BROKEN
#n# cannot use '×' at all here

File: M/Multiplication_tables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiplication_tables
#c# 2015-11-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Multiplicative_order
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Multiplicative_order
#c# 2016-02-17 <>RC, 2018-03-14 <RC, 2021-05-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: M/Multiplicative_order.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multiplicative_order
#c# 2016-02-17 <>RC, 2018-03-14 <RC
#m# MOAR: OK
#j#  JVM: BROKEN UnwindException

File: M/Multisplit
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Multisplit
#c# 2015-12-01 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Munchausen_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Munchausen_numbers
#c# 2016-09-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: M/Munching_squares-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Munching_squares
#c# 2016-06-04 <RC, 2017-06-04 >RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: munching.ppm
#    another way more colorful put into separate file: 'Munching_squares_color'

File: M/Munching_squares-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Munching_squares
#c# 2016-06-04 <RC, 2017-06-04 >RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: munching_color.ppm
#    this is 2nd example from RC URL

File: M/Musical_scale
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Musical_scale
#t# skiptest
#c# 2019-09-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 'play' is Linux-specific
#n# is it OK to think this lame knowing Tim Toady put it on RC?

File: M/Mutex
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mutex
#t# nocode
#c# 2020-01-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: M/Mutual_recursion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mutual_recursion
#c# 2016-01-30 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII

File: N/N%27th
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/N'th
#c# 2016-03-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/N-body_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/N-body_problem
#c# 2016-12-13 <RC, 2018-04-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/N-body_problem.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/N-body_problem
#c# 2016-12-13 <RC
#t# runs forever
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# as of 2017-03-07, $t not incrementing?

File: N/N-queens_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/N-queens_problem
#c# 2015-11-29 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: N/N-smooth_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/N-smooth_numbers
#c# 2019-08-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/NYSIIS
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/NYSIIS
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Named_parameters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Named_parameters
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Names_to_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Names_to_numbers
#c# 2019-11-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# Or: How I Learned To Stop Worrying, and Love Raku Regex
#n# remaining issues: spacing around punctuation, decimal fraction support very minimal, speed

File: N/Names_to_numbers.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Names_to_numbers
#c# 2016-09-10 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# coded for niecza, maybe not salvageble for Rakudo?
#n# better to start fresh and use techniques/components shown here

File: N/Naming_conventions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Naming_conventions
#c# 2016-05-12 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: N/Narcissistic_decimal_number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Narcissistic_decimal_number
#c# 2015-12-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Natural_sorting
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Natural_sorting
#c# 2015-11-15 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Nautical_bell
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nautical_bell
#c# 2016-01-12 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: N/Nautical_bell-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nautical_bell
#c# 2018-09-20 
#m# MOAR: OK
#j#  JVM: OK

File: N/Negative_base_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Negative_base_numbers
#c# 2017-02-17 <RC, 2018-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Negative_base_numbers-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Negative_base_numbers
#c# 2020-04-26 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: N/Negative_base_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Negative_base_numbers
#c# 2017-02-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Neighbour_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Neighbour_primes
#c# 2021-04-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Nested_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nested_function
#c# 2016-10-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Nested_function.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nested_function
#c# 2016-09-17 <RC

File: N/Nested_templated_data
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nested_templated_data
#c# 2018-05-28 <RC, 2018-06-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Next_highest_int_from_digits
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Next_highest_int_from_digits
#c# 2020-02-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Next_special_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Next_special_primes
#c# 2021-03-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Nice_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Nice_primes
#c# 2021-03-14 >RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Nice_primes-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Nice_primes
#c# 2021-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat++ alternate, better separation of concerns

File: N/Nim_Game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nim_Game
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: 3\n6\nG\n2\n1
#n# suspect between GH#4315 and GH#4316 this will get fixed, thundergnat++ [yes, it did]

File: N/Nimber_arithmetic
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Nimber_arithmetic
#c# 2020-06-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Non-continuous_subsequences
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-continuous_subsequences
#c# 2016-06-04 <RC, 2017-07-31 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# old version fails 07/30: Rakudo version 2017.07-97-ga256c26d8 built on MoarVM version 2017.07-266-ged84a6329
#n# previously was allowing nonense range (0..-1) on array

File: N/Non-decimal_radices_Convert
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-decimal_radices/Convert
#c# 2016-03-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Non-decimal_radices_Input
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-decimal_radices/Input
#c# 2015-10-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Non-decimal_radices_Output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-decimal_radices/Output
#c# 2016-07-31 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Non-decimal_radices_Output.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Non-decimal_radices/Output
#c# 2016-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Non-transitive_dice
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Non-transitive_dice
#c# 2020-12-26 <RC, 2020-12-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Nonoblock
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Non-continuous_subsequences
#c# 2019-04-03 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# fairly literal translation of P5 version

File: N/Nonogram_solver
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nonogram_solver
#t# inprogress
#c# 2020-01-xx >RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN

File: N/Nth_root
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Nth_root
#c# 2016-03-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Null_object
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Null_object
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Number_names-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Number_names
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Number_names-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Number_names
#c# 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: N/Number_reversal_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Number_reversal_game
#c# 2015-12-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#    modified to play a pre-defined game

File: N/Numbers_With_Equal_Rises_and_Falls
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_With_Equal_Rises_and_Falls
#c# 2020-10-08 <RC, 2020-10-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# not testing the slow step (~9 min)

File: N/Numbers_divisible_by_their_individual_digits,_but_not_by_the_product_of_their_digits.
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_divisible_by_their_individual_digits,_but_not_by_the_product_of_their_digits.
#c# 2020-10-08 <RC, 2020-10-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numbers_in_base-16_representation_that_cannot_be_written_with_decimal_digits
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_in_base-16_representation_that_cannot_be_written_with_decimal_digits
#c# 2021-06-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numbers_in_base_10_that_are_palindromic_in_bases_2,_4,_and_16
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_in_base_10_that_are_palindromic_in_bases_2,_4,_and_16
#c# 2021-06-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numbers_n_in_which_number_1_occur_twice
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_n_in_which_number_1_occur_twice
#c# 2021-07-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numbers_which_binary_and_ternary_digit_sum_are_prime
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_which_binary_and_ternary_digit_sum_are_prime
#c# 2021-04-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numbers_which_count_of_divisors_is_prime
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_which_count_of_divisors_is_prime
#c# 2021-07-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: N/Numbers_with_prime_digits_whose_sum_is_13
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Numbers_with_prime_digits_whose_sum_is_13
#c# 2020-09-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numeric_error_propagation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numeric_error_propagation
#c# 2016-01-03 <RC, 2018-03-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: N/Numeric_separator_syntax
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numeric_separator_syntax
#c# 2019-09-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numerical_Integration-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_Integration
#c# 2015-12-16 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#   20161123: 18213.707u 129.950s 5:11:41.81 98.0%
#   20181004: 12358.237u  77.530s 3:33:55.73 96.8%
#   _NEXT_

File: N/Numerical_Integration-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_integration
##c# 2015-12-16 <RC, 2018-10-06 >RC, 2020-05-16 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# <RC: "Move some calculations out of hot loops, more efficient looping constructs, arguably less idiomatic, but less horribly slow"
#n# roughly 10x faster, but still just testing the first two examples

File: N/Numerical_Integration-2.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Numerical_Integration
#c# 2015-12-16 <RC, 2018-10-06 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# only running the two fastest examples
#n# 2020-05-15 regularly dies with 'Not enough positional arguments' (starting 2020-03-21)

File: N/Numerical_Integration-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_Integration
#c# 2015-12-16 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#n# 2 out of 3 ain't bad, but then: java.lang.OutOfMemoryError: Java heap space

File: N/Numerical_and_alphabetical_suffixes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_and_alphabetical_suffixes
#c# 2018-10-27 <RC, 2018-11-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numerical_and_alphabetical_suffixes.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Numerical_and_alphabetical_suffixes
#c# 2018-10-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numerical_integration_Adaptive_Simpson%27s_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_integration/Adaptive_Simpson%27s_method
#c# 2018-11-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: N/Numerical_integration_Gauss-Legendre_Quadrature
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Numerical_integration/Gauss-Legendre_Quadrature
#c# 2015-12-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: O/Object_serialization
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Object_serialization
#c# 2018-12-05 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: O/Odd_squarefree_semiprimes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Odd_squarefree_semiprimes
#c# 2021-04-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/Odd_word_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Odd_word_problem
#c# 2016-02-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: O/Odd_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Odd_words
#c# 2020-12-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/Old_Russian_measure_of_length
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Old_Russian_measure_of_length
#c# 2016-01-06 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# slightly different than RC, not sure why...

File: O/Old_lady_swallowed_a_fly
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Old_lady_swallowed_a_fly
#c# 2016-06-05 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: O/One-dimensional_cellular_automata
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/One-dimensional_cellular_automata
#c# 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: O/One-dimensional_cellular_automata.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/One-dimensional_cellular_automata
#c# 2016-07-11 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: O/One-time_pad
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/One-time_pad
#c# 2017-11-18 <RC
#m# MOAR: OK
#r# RC prep: cp ref/rosettacode.1tp run
#j# JVM:  OK
#n# removed interactive prompts, using 'roll', not external module

File: O/One_of_n_lines_in_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/One_of_n_lines_in_a_file
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/OpenGL
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/OpenGL
#t# gui
#c# 2019-12-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# creates window, but no good content
#n# 2020-11-16 Given that this wasn't working to start with, not going to worry about:
#n#   No such method 'can' for invocant of type in 'Perl6::Metamodel::CoercionHOW'
#n# 2020-12-04 commenting out glfwSetWindow* lets code compile (but still does nothing meaningful on my system)

File: O/OpenWebNet_Password
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/OpenWebNet_Password
#c# 2018-06-07 <RC, 2018-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/Operator_precedence
#!/usr/bin/env perl6
#t# nocode
#u# http://rosettacode.org/wiki/Operator_precedence
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/Optional_parameters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Optional_parameters
#c# 2016-01-05 <>RC, 2018-06-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: O/Optional_parameters.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Optional_parameters
#c# 2016-01-05 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   but really doesn't sort the whole table, need index of sort, like APL

File: O/Orbital_elements
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Orbital_elements
#c# 2016-07-07 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# the */× switch doesn't work here due to 'Clifford' module

File: O/Order_by_pair_comparisons
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Order_by_pair_comparisons
#c# 2021-04-14 <RC
#m# MOAR: OK
#j# JVM:  OK
#=# RC pipe: >\n<\n>\n<\n>\n>\n>\n<\n>\n>\n<\n>

File: O/Order_disjoint_list_items
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Order_disjoint_list_items
#c# 2016-06-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: O/Order_two_numerical_lists
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Order_two_numerical_lists
#c# 2016-01-22 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 now stable?

File: O/Ordered_Partitions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ordered_Partitions
#c# 2018-03-24 <RC, 2018-05-01 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# there is a Rakduo bug in the gather/take construction?

File: O/Ordered_words
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ordered_words
#c# 2015-12-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/P-Adic_numbers,_basic
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/P-Adic_numbers,_basic
#c# 2021-02-28 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK

File: P/P-Adic_numbers,_basic.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/P-Adic_numbers,_basic
#c# 2021-02-26 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# .add not 100%? testing needs to be expanded...

File: P/P-value_correction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/P-value_correction
#c# 2017-11-11 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# lots of malformed UTF-8 errors, replaced characters

File: P/P-value_correction.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/P-value_correction
#c# 2017-11-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# lots of malformed UTF-8 errors, replaced characters

File: P/Padovan_n-step_number_sequences
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Padovan_n-step_number_sequences
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Padovan_sequence
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Padovan_sequence
#c# 2021-02-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Palindrome_dates
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindrome_dates
#c# 2020-02-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# testing will need adjustment on 2021-12-02, 2030-03-02, ...

File: P/Palindrome_detection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindrome_detection
#c# 2015-12-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Palindrome_pairs
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindrome_pairs
#c# 2018-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Palindromic_dates
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindromic_dates
#c# 2019-10-xx NOT ON RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# you snooze, you lose... this is overkill for Steenslag's task, so giving it a miss
#n#
#n# Fundamentally simple task used to show off how nice Perl 6 makes life for a programmer, 
#n#   copiously annotated for the beginning programmer (Hi Oscar!)
#n#
#n# Further notes:
#n#   fortunately 2-29-22 is not a leap year (yy in m-d-yy ambiguous)
#n#   the Julian/Gregorian change-over 'missing' days were not palindrome candidates
#n#   slow, but the results are good for 100,000 years!
#n#   not using any date/time facility in the language (though might be good to validate dates?)
#n#   no 'suspicious' parentheses -- code less 'busy' but you might have to think a little harder about implied scopes
#n#   non-cryptic variable names
#n#   working the DRY principle pretty hard (too far?)

File: P/Palindromic_dates.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindromic_dates
#c# 2019-10-xx NOT ON RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# you snooze, you lose... this is overkill for Steenslag's task, so giving it a miss
#n#
#n# Fundamentally simple task used to show off how nice Perl 6 makes life for a programmer, 
#n#   copiously annotated for the beginning programmer (Hi Oscar!)
#n#
#n# Further notes:
#n#   fortunately 2-29-22 is not a leap year (yy in m-d-yy ambiguous)
#n#   the Julian/Gregorian change-over 'missing' days were not palindrome candidates
#n#   slow, but the results are good for 100,000 years!
#n#   not using any date/time facility in the language (though might be good to validate dates?)
#n#   no 'suspicious' parentheses -- code less 'busy' but you might have to think a little harder about implied scopes
#n#   non-cryptic variable names
#n#   working the DRY principle pretty hard (too far?)

File: P/Palindromic_dates.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindromic_dates
#c# 2019-10-xx >RC
#m# MOAR: OK
#j# JVM:  OK
#n# Fundamentally simple task used to show off how nice Perl 6 makes life for a programmer, 
#n#   copiously annotated for the beginning programmer (Hi Oscar!)
#n#
#n# Further notes:
#n#   fortunately 2-29-22 is not a leap year (yy in m-d-yy ambiguous)
#n#   the Julian/Gregorian change-over 'missing' days were not palindrome candidates
#n#   slow, but the results are good for 100,000 years!
#n#   not using any date/time facility in the language (though might be good to validate dates?)
#n#   no 'suspicious' parentheses -- code less 'busy' but you might have to think a little harder about implied scopes
#n#   non-cryptic variable names
#n#   working the DRY principle pretty hard (too far?)
#n#
#n# At one point seeing this, but seems to have cleared up:
#n#  perl6(80736,0x70000280d000) malloc: *** error for object 0x7fdf654fc000: incorrect checksum for freed object - object was probably modified after being freed.
#n#  *** set a breakpoint in malloc_error_break to debug

File: P/Palindromic_gapful_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Palindromic_gapful_numbers
#c# 2019-11-12 <RC, 2020-02-12 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# cannot use 'hyper' in generation of inf/lazy iterators? (@npal/@gappal)
#n#  2021-01-09 additional notes:
#n#  * the runtime error is: 'This continuation has already been invoked'
#n#  * consistently seen on older Mac OS, a useful 'canary' (or just a PITA?)
#n#  * the same code runs fine on Ubuntu (no matter how memory/CPU stressed the system is)
#n#  * no error when generating only one block of values, which implicates the nested hypers?
#n#  * same error seen even when outer/display .hyper is removed (or converted to plain 'for' loop)

File: P/Palindromic_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Palindromic_primes
#c# 2021-04-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Palindromic_primes_in_base_16
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Palindromic_primes_in_base_16
#c# 2021-06-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pancake_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pancake_numbers
#c# 2020-11-10 <RC, 2021-02-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pangram_checker
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pangram_checker
#c# 2016-03-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Paraffins
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Paraffins
#c# 2016-04-30 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parallel_Brute_Force
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parallel_Brute_Force
#c# 2017-02-10 <RC, 2018-04-24 <RC, 2019-01-09 <RC, 2020-02-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# using 'medium' option for @alpha* values (cf. .1 version)

File: P/Parallel_Brute_Force.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Parallel_Brute_Force
#c# 2017-02-10 <RC, 2018-04-24 <RC, 2019-01-09 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# for JVM: module
#n# .race/.hyper are not doing anything?
#n# works again 2018-10-01, but no difference on .race; using 'cheat' starting point

File: P/Parallel_Brute_Force.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parallel_Brute_Force
#c# 2017-02-10 <RC, 2018-04-24 <RC, 2019-01-09 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# for JVM: module
#n# .race/.hyper are not doing anything?
#n# works again 2018-10-01, but no difference on .race; using 'cheat' starting point

File: P/Parallel_calculations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2017-10-28 <RC, 2018-06-28 <RC, 2018-07-06 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Parallel_calculations-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2017-10-27 <RC, 2018-02-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Exception in thread "Thread-1" org.perl6.nqp.runtime.UnwindException
#n#  older version of task; unlike up-to-date version, this shows wall-clock benefit of .race:
#n#     69.168u 0.426s 0:19.66 353.9%
#n#     67.238u 0.228s 1:07.22 100.3%
#n# 2020-10-07 fails to show benefit, likely due to more efficient .is-prime code that doesn't chew time...

File: P/Parallel_calculations.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2017-10-28 <RC, 2018-06-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: Can not invoke object '&infix:«>»'

File: P/Parallel_calculations.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2017-10-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Exception in thread "Thread-1" org.perl6.nqp.runtime.UnwindException

File: P/Parallel_calculations.3
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2017-10-25 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# over 3x speed-up over one-at-a-time method

File: P/Parallel_calculations.4
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Parallel_calculations
#c# 2015-12-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parametric_polymorphism
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parametric_polymorphism
#c# 2016-06-06 <RC, 2020-08-25 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parse_EBNF
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parse_EBNF
#c# 2018-03-21 <RC, 2018-11-17 >RC, 2019-05-16 >RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: ebnf.dat
#n# for JVM: just a trivial difference in output

File: P/Parse_an_IP_Address
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parse_an_IP_Address
#c# 2016-05-19 <RC, 2018-11-26 <RC, 2021-05-26 <RC
#m# MOAR: OK
#j#  JVM: BROKEN 
#n# java.util.regex.PatternSyntaxException: Unknown character property name {hexdigit}

File: P/Parse_command-line_arguments
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parse_command-line_arguments
#c# 2015-12-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parsing_RPN_calculator_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parsing/RPN_calculator_algorithm
#c# 2015-12-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parsing_RPN_to_infix_conversion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parsing/RPN_to_infix_conversion
#c# 2015-11-29 <>RC, 2019-10-28 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Parsing_Shunting-yard_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Parsing/Shunting-yard_algorithm
#c# 2015-11-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Partial_function_application
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Partial_function_application
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Partition_Function_P
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Partition_Function_P
#c# 2020-10-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Partition_an_integer_X_into_N_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Partition_an_integer_X_into_N_primes
#c# 2017-03-05 <RC, 2018-03-13 >RC, 2018-11-15 <RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: P/Partition_an_integer_X_into_N_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Partition_an_integer_X_into_N_primes
#c# 2017-03-05 <RC, 2018-03-13 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Pascal%27s_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pascal%27s_triangle
#c# 2018-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# re-write 'pascal4' to get results returned, not printed on-the-fly

File: P/Pascal%27s_triangle_Puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pascal%27s_triangle/Puzzle
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pascal_matrix_generation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pascal_matrix_generation
#c# 2016-01-03 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Password_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Password_generator
#c# 2016-06-05 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018.04-13-ga51112ebc built on MoarVM version 2018.04-18-ge7d79d869
#n# for Rakudo, exact tests no longer work, replace with weaker ones
#n# mutating .= must not be white-space separated from args
#n# there's a 2nd version ('functional') that's sub-par, marked as needing attention

File: P/Password_generator-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Password_generator
#c# 2021-01-13 <RC, 2021-01-17 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'functional' version, improved as per comments @ RC
#n# over-represents digits?  Sometimes see: Use of Nil in string context (line 25)

File: P/Pathological_floating_point_problems
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pathological_floating_point_problems
#c# 2016-02-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Pattern_matching
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pattern_matching
#c# 2015-10-12 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Peaceful_chess_queen_armies
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Peaceful_chess_queen_armies
#c# 2019-11-18 >RC, 2020-08-30 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# d'oh stop at first solution (was previously proceeding to the last before showing result)
#n#  1017.844u   4.788s   17:15.32 98.7%  7 x 7 got answer, but still slow
#n# 16407.682u 140.503s 5:10:29.21 88.8%  6 x 6 killed before done (board has no soln so needs to interate through all possibilities)
#n# big  win: got rid of all globals
#n# big wart: in 'place' routine using literal '◦•' in regex because I cannot figure out a
#n#             way to efficiently create a regex object which is built from $empty-square

File: P/Peaceful_chess_queen_armies.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Peaceful_chess_queen_armies
#t# skiptest
#n# not a complete solution, just a comparison of ways to use regex

File: P/Peaceful_chess_queen_armies.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Peaceful_chess_queen_armies
#c# 2019-11-18 NOT ON RC
#m# MOAR: OK
#j# JVM:  OK
#n# big wart: in 'place' routine using literal '◦•' in regex because I cannot figure out a
#n#             way to efficiently create a regex objects built from $empty-square
#n# interpolating variable into character class definition, 
#n# can lead to 'normal' running time, or SUPER-SLOW running time
#n# both the 'slow' approaches involve multi-Gb memory use
#n# all this despite my attempts to signal to the interpreter that $empty-square will never change...

File: P/Peano_curve
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Peano_curve
#c# 2018-07-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: peano_curve.svg

File: P/Pell%27s_equation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pell%27s_equation
#c# 2019-02-03 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# not tracking latest change (comma-in-biiiig ints) as breaks JVM

File: P/Penney%27s_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Penney%27s_game
#c# 2018-03-14 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# munged to avoid input, sleep times to zero

File: P/Penrose_tiling
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Penrose_tiling
#c# 2018-06-08 <RC, 2018-06-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: penrose_tiling.svg

File: P/Pentagram
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pentagram
#c# 2017-01-19 <>RC, 2018-09-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: pentagram.svg

File: P/Pentagram.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Pentagram
#c# 2017-01-19 <>RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pentagram.svg

File: P/Pentagram.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Pentagram
#c# 2015-11-02 <>RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pentagram.svg
#j#  JVM: BROKEN UnwindException
#   2017-01-19 fixed bug revealed by change in .rotor, but code superseded

File: P/Pentomino_tiling
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pentomino_tiling
#c# 2020-10-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# JVM takes nearly 10 minutes!?

File: P/Percentage_difference_between_images
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Percentage_difference_between_images
#c# 2018-12-07 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# No longer a different Mac OS/darwin answer of '1.78189346'

File: P/Perceptron
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Perceptron
#c# 2020-11-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: perceptron.png
#n# before 'zef install': (cd /usr/local/lib; ls -l /opt/local/lib/libMagickWand-6.Q16.dylib libMagickWand-7.Q16HDRI.dylib)

File: P/Percolation_Bond_percolation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Percolation/Bond_percolation
#c# 2017-03-08 <RC, 2021-02-11 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-03-31 changes required by 2020.02.1-270-g61b5e488e [fixed by 2020-04-01 / 2020.02.1-287-gaa5154e02, no GH issue]
#n# these no longer yield same results:
#n# my @a; @a.append: [0 xx 3], [1 xx 3]; say @a
#n# my @b; append @b, [0 xx 3], [1 xx 3]; say @b'
#n# unstable results for 100 trials?
#n# 2021-03-04 graph OK, numeric table results unstable

File: P/Percolation_Mean_cluster_density
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Percolation/Mean_cluster_density
#c# 2017-03-11 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII
#n# unstable results

File: P/Percolation_Mean_run_density
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Percolation/Mean_run_density
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Percolation_Site_percolation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Percolation/Site_percolation
#c# 2017-03-06 <RC, 2021-02-11 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# unstable results for 100 trials

File: P/Percolation_Site_percolation.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Percolation/Site_percolation
#c# 2017-03-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Perfect_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_numbers
#c# 2016-01-19 <RC, 2018-04-23 <RC, 2018-11-13 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# nearly 4x speed-up with .hyper:
#n#  before: 27.897u 0.231s 0:27.96 100.5%
#n#  after:  26.412u 0.935s 0:07.13 383.4%

File: P/Perfect_numbers-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_numbers
#c# 2016-01-19 <RC, 2018-04-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Perfect_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_numbers
#c# 2018-10-13 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# much, much faster version

File: P/Perfect_shuffle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_shuffle
#c# 2015-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# passive speed-up of 2x since 2016, but full results still take 60s

File: P/Perfect_totient_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_totient_numbers
#c# 2018-12-05 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# see .jvm for previous method of calculation

File: P/Perfect_totient_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perfect_totient_numbers
#c# 2018-12-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# calculating fewer results here

File: P/Peripheral_drift_illusion
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Peripheral_drift_illusion
#c# 2021-08-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: peripheral-drift-raku.svg

File: P/Perlin_noise
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Perlin_noise
#c# 2016-01-18 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# kludge for JVM: 'my' instead of 'constant' for @p (java.lang.IllegalArgumentException: bad parameter count 259)
#n# 2019-10-26 kludge still needed...
#n# 2020-01-30 for this particular input permutation doesn't need to doubled

File: P/Permutation_test
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutation_test
#c# 2015-11-20 <RC, 2018-10-17 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# .race requires atomic ++ op

File: P/Permutation_test.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutation_test
#c# 2015-11-20 <RC, 2018-10-17 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations
#c# 2015-11-19 <RC, 2018-11-23 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_Derangements
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations/Derangements
#c# 2018-04-05 <RC, 2018-04-05 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# substantial change from the previous version

File: P/Permutations_Derangements.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Permutations/Derangements
#c# 2016-08-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_Derangements.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Permutations/Derangements
#c# 2015-11-20 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: P/Permutations_Rank_of_a_permutation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations/Rank_of_a_permutation
#c# 2016-05-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_by_swapping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations_by_swapping
#c# 2015-11-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_with_repetitions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations_with_repetitions
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_with_repetitions.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Permutations_with_repetitions
#c# 2015-11-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Permutations_with_some_identical_elements
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Permutations_with_some_identical_elements
#c# 2019-07-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Permuted_multiples
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Permuted_multiples
#c# 2021-08-17 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Permuted_multiples.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Permuted_multiples
#c# 2021-08-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pernicious_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pernicious_numbers
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Phrase_reversals
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Phrase_reversals
#c# 2015-11-03 <RC, 2018-04-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Pi
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pi
#c# 2015-10-23 <>RC, 2018-11-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#    RC asks for infinite stream of digits, for testing just do 1000

File: P/Pick_random_element
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pick_random_element
#c# 2015-12-07 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Pierpont_primes-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pierpont_primes
#c# 2019-08-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# dropped calc of 1000th

File: P/Pierpont_primes-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pierpont_primes
#c# 2019-08-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# dropped calc of 1000th

File: P/Pierpont_primes-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pierpont_primes
#c# 2019-08-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pig_the_dice_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pig_the_dice_game
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#=# RC pipe: \nY\nY\nY\nY
#n# 'prompt' started generating errors in non-interactive mode, so just dispense with it
#n# (since repeated 'Y' leads to desired outcome)

File: P/Pig_the_dice_game.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pig_the_dice_game
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: OK
#x# RC pipe: \nY\nY\nY\nY\nY\n
#n# 'prompt' not working in batch, change code to default to 'Y'

File: P/Pig_the_dice_game_Player
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pig_the_dice_game/Player
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pig_dice_player.BEND

File: P/Pinstripe_Display
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pinstripe/Display
#c# 2015-12-20 <>RC, 2017-06-04 >RC, 2018-11-16 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pinstripes.pgm

File: P/Pinstripe_Printer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pinstripe/Printer
#c# 2020-02-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: Pinstripe-printer-perl6.png
#n# effectively another image generation task

File: P/Piprimes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Piprimes
#c# 2021-04-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pisano_period
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pisano_period
#c# 2020-03-03 <RC, 2020-03-06
#m# MOAR: OK
#j# JVM:  OK

File: P/Plasma_effect
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Plasma_effect
#c# 2016-06-30 <RC, 2018-11-04 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: BROKEN
#f# RC file: plasma-perl6.png

File: P/Playfair_cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Playfair_cipher
#c# 2015-11-02 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Playing_cards
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Playing_cards
#c# 2016-08-03 <>RC
#m# MOAR: OK
#j#  JVM: OK
#   made some new methods...

File: P/Plot_coordinate_pairs
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Plot_coordinate_pairs
#c# 2016-08-25 <RC, 2018-04-12 <RC, 2019-09-23 >RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: plot-pairs.svg
#n# grrr, 'lines' not 'xy-lines'

File: P/Plot_coordinate_pairs.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Plot_coordinate_pairs
#c# 2016-03-23 <RC
#m# MOAR: OK
#j#  JVM: OK
#   if SVG::Plot fully patched?

File: P/Pointers_and_references
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pointers_and_references
#c# 2016-01-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Poker_hand_analyser
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Poker_hand_analyser
#c# 2016-08-03 <>RC, 2018-11-11 <RC, 2018-11-13 >RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Poker_hand_analyser.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Playing_cards
#c# 2016-08-03 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n#  not perfect:  straight-flush not ID'd
#n#   made some new methods...

File: P/Polymorphic_copy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polymorphic_copy
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# odd: extra curlies?

File: P/Polymorphism
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polymorphism
#c# 2015-11-30 <>RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Polynomial_long_division
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polynomial_long_division
#c# 2015-12-19 <>RC, 2018-11-23 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Polynomial_regression
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polynomial_regression
#c# 2016-05-03 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# the */× switch doesn't work here due to 'Clifford' module

File: P/Polynomial_regression.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Polynomial_regression
#c# 2016-05-03 <RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: P/Polynomial_synthetic_division
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polynomial_synthetic_division
#c# 2018-03-21 <RC, 2018-10-10 >RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Polyspiral-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polyspiral
#c# 2018-10-18 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: polyspiral.svg

File: P/Polyspiral-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Polyspiral
#t# gui
#c# 2018-10-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# latest iteration...

File: P/Population_count
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Population_count
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Power_set
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Power_set
#c# 2015-11-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Powerful_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Powerful_numbers
#c# 2020-02-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Powerful_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Powerful_numbers
#c# 2020-02-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Powerful_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Powerful_numbers
#c# 2020-02-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Practical_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Practical_numbers
#c# 2021-03-30 <RC, 2021-03-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for some inputs with many factors, glacial... (but doesn't hog memory)

File: P/Pragmatic_directives
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pragmatic_directives
#c# 2016-06-11 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: P/Price_fraction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Price_fraction
#c# 2016-01-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Price_list_behind_API
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Price_list_behind_API
#c# 2021-02-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# reduced everything by factor of 10, now has orphan group at high end (with Moar)

File: P/Primality_by_Wilson%27s_theorem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primalty_by_Wilson%27s_theorem
#c# 2020-01-01 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Primality_by_trial_division
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primality_by_trial_division
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Primality_by_trial_division.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Primality_by_trial_division
#c# 2015-11-03 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Primalty_by_Wilson%27s_theorem.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primalty_by_Wilson%27s_theorem
#c# 2020-01-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Prime_conspiracy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Prime_conspiracy
#c# 2016-03-19 <RC, 2018-10-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# stopped trying the 100_000_000 calculation after two hours (ate memory too)

File: P/Prime_conspiracy.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Prime_conspiracy
#c# 2016-03-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# clear, but slow...
# 52.872u 0.440s 0:53.16 100.2

File: P/Prime_decomposition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2016-06-28 <RC, 2016-09-31 <RC, 2018-04-15 <RC, 2018-11-15 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: use .1 version
#n# 2018-11-15 thundergnat++ ekes out a little boost with race(:1batch)
#n# 2018-11-03 no benefit with 'race' here
#n# 2018-08-22 Inline::Perl5 version works fine (and fast) but clobbers JVM

File: P/Prime_decomposition-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2016-06-28 <RC, 2016-09-31 <RC, 2018-04-15 <RC, 2018-11-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Prime_decomposition.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2016-06-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Prime_decomposition.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Prime_numbers_which_contain_123
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Prime_numbers_which_contain_123
#c# 2021-07-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Prime_tripets-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Prime_triplets
#c# 2021-04-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Prime_tripets-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Prime_triplets
#c# 2021-04-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Prime_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Prime_words
#c# 2020-12-06 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Primes_-_allocate_descendants_to_their_ancestors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primes_-_allocate_descendants_to_their_ancestors
#c# 2016-07-02 <RC, 2017-01-19 >RC, 2017-01-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# JVM emits errors, but works

File: P/Primes_-_allocate_descendants_to_their_ancestors-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primes_-_allocate_descendants_to_their_ancestors
#c# 2016-07-02 <RC, 2017-01-19 >RC, 2017-01-22 >RC, 2018-12-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# running with lowered $max
#n# JVM emits errors, but works

File: P/Primes_which_contain_only_one_odd_number
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Primes_which_contain_only_one_odd_number
#c# 2021-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Primes_which_sum_of_digits_is_25
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Primes_which_sum_of_digits_is_25
#c# 2021-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Primes_whose_first_and_last_number_is_3
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Primes_whose_first_and_last_number_is_3
#c# 2021-07-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Primes_with_digits_in_nondecreasing_order
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Primes_with_digits_in_nondecreasing_order
#c# 2021-03-31 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# small style diffs in update

File: P/Primorial_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primorial_numbers
#c# 2016-01-04 <RC, 2018-10-09 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# but adding 10e5 is slow:     443.190u 11.120s 8:01.77 94.3%
#n# but adding 10e6 is glacial:  (never ran it long enough to get timing info.)
#n# this instance of .EVAL use does not appear on RC site

File: P/Primorial_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primorial_numbers
#c# 2020-01-29 <RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: P/Primorial_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primorial_numbers
#c# 2016-01-04 <RC, 2018-10-09
#m# MOAR: OK
#j#  JVM: OK
#n# caching version
#n# speed-up techniques allow code to do a bit more, in the same time as before
#n# but memory requirements explode (from saving all the intermediate primorials...)

File: P/Print_debugging_statement
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Print_debugging_statement
#c# 2019-08-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# can only test Moar or JVM, not both, because the answers for one affect the results for the other

File: P/Print_debugging_statement.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Print_debugging_statement
#c# 2019-08-29 <RC
#m# MOAR: BROKEN
#j# JVM:  OK
#n# can only test Moar or JVM, not both, because the answers for one affect the results for the other

File: P/Priority_queue
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Priority_queue
#c# 2016-01-27 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# java.lang.NullPointerException

File: P/Probabilistic_choice
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Probabilistic_choice
#c# 2016-05-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-09-01 different answers when run from interactive shell vs cron-launch?
#n# 2021-03-04 yes, and still true

File: P/Problem_of_Apollonius
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Problem_of_Apollonius
#c# 2015-11-02 <RC, 2018-09-20 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# JVM fails on '\' of Unicode char, but after removing all those, it works

File: P/Problem_of_Apollonius.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Problem_of_Apollonius
#c# 2015-11-02 <RC, 2018-09-20 >RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Process_SMIL_directives_in_XML_data
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/Process_SMIL_directives_in_XML_data
#t# skiptest
#c# 2020-03-04 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: smil-directives.txt
#n# cannot figure out how to get stable orderging of output, position/orientation & color/location

File: P/Product_of_divisors
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tau_number
#u# http://rosettacode.org/wiki/Tau_function
#u# http://rosettacode.org/wiki/Sum_of_divisors
#u# http://rosettacode.org/wiki/Product_of_divisors
#c# 2020-12-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: P/Program_name
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Program_name
#c# 2015-10-16 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Program_termination
#!/usr/bin/env perl6
#t# nocode
#u# http://rosettacode.org/wiki/Program_termination
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Proper_divisors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Proper_divisors
#c# 2015-10-30 <>RC, 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# d'oh, was missing '* >', so .race was never terminating
#n# 2018-12-10: confirmed that there is a race condition if .race is used, but it doesn't affect the RC spec'd results

File: P/Proper_divisors.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Proper_divisors
#c# 2015-10-30 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: P/Pseudo-random_numbers_Combined_recursive_generator_MRG32k3a
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pseudo-random_numbers/Combined_recursive_generator_MRG32k3a
#c# 2020-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pseudo-random_numbers_PCG32
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pseudo-random_numbers/PCG32
#c# 2020-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pseudo-random_numbers_Splitmix64
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pseudo-random_numbers/Splitmix64
#c# 2020-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pseudo-random_numbers_Xorshift_star
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pseudo-random_numbers/Xorshift_star
#c# 2020-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: P/Pseudorandom_Number_Generator_Image
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Pseudorandom_Number_Generator_Image
#c# 2020-08-18 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#f# RC file: PNG-image500.png
#n# original note: about 40% slower if @pixel split to ($x,$y) or (\x,\y)
#n# my fancy-pants version over 5x slower
#n# srand bug knocks this out for now

File: P/Pythagoras_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pythagoras_tree
#c# 2016-08-17 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pythagoras_tree.svg

File: P/Pythagorean_quadruples
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pythagorean_quadruples
#c# 2017-08-23 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# too slow at original limit; .race becomes helpful up above 1000

File: P/Pythagorean_triples
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pythagorean_triples
#c# 2016-01-09 <RC
#m# MOAR: OK
#j#  JVM: OK 
#n# both backends are slow, limiting extent of runs

File: P/Pythagorean_triples.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pythagorean_triples
#c# 2016-01-09 <RC
#m# MOAR: OK
#j#  JVM: OK 
#n# both backends are slow, limiting extent of runs

File: Q/QR_decomposition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/QR_decomposition
#c# 2018-12-10 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# don't re-use $sum, 3 local vars instead
#n# explicit typing required only for Array variables (Real/Int dropped)

File: Q/Quadrat_Special_Primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Quadrat_Special_Primes
#c# 2021-03-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: Q/Quaternion_type
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Quaternion_type
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Q/Queue_Definition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Queue/Definition
#c# 2015-12-05 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: Q/Queue_Usage
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Queue/Usage
#c# 2015-12-05 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: Q/Quickselect_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Quickselect_algorithm
#c# 2015-12-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Q/Quine
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Quine
#c# 2016-05-05 <RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK
#   run one or the other, not both

File: Q/Quoting_constructs
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Quoting_constructs
#t# nocode
#c# 2020-03-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/RCRPG_Perl_6
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/RCRPG/Perl_6
#c# 2018-04-03 <RC
#t# interactive
#m# MOAR: OK
#j# JVM:  OK

File: R/RIPEMD-160
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/RIPEMD-160
#c# 2016-06-11 <RC, 2017-08-20 >RC
#m# MOAR: OK
#j#  JVM: OK

File: R/RPG_Attributes_Generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/RPG_Attributes_Generator
#c# 2018-07-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/RSA_code
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/RSA_code
#c# 2015-11-04 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Railway_circuit
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Railway_circuit
#c# 2020-04-05 <RC, 2021-02-02 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: fails on Unicode character: 𝒫

File: R/Railway_circuit.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Railway_circuit
#c# 2020-04-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Ramanujan%27s_constant-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ramanujan%27s_constant
#c# 2019-02-24 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# calculate Ramanujan's constant as per http://oeis.org/wiki/Ramanujan%27s_constant
#n# cobbled together from other RC tasks (calculation of 𝑒 and π) and a custom ** operator
#n# show 'almost integer' of Heegner-number series (19 43 67 163), make table of deltas
#n# https://oeis.org/A003173, https://en.wikipedia.org/wiki/Heegner_number

File: R/Ramanujan%27s_constant-1.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ramanujan%27s_constant
#c# 2019-02-24 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# down-graded Unicode variable names
#n# calculate Ramanujan's constant as per http://oeis.org/wiki/Ramanujan%27s_constant
#n# cobbled together from other RC tasks (calculation of 𝑒 and π) and a custom ** operator
#n# show 'almost integer' of Heegner-number series (19 43 67 163), make table of deltas
#n# https://oeis.org/A003173, https://en.wikipedia.org/wiki/Heegner_number

File: R/Ramanujan%27s_constant-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ramanujan%27s_constant
#c# 2019-04-27 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# slower, but gets the job done
#n# LHS commenting messes up on RC, but too bad, I like it
#n# formulas from: https://en.wikipedia.org/wiki/Generalized_continued_fraction

File: R/Ramer-Douglas-Peucker_line_simplification
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ramer-Douglas-Peucker_line_simplification
#c# 2017-06-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# good use-case for dual-assign sigil-less

File: R/Ramer-Douglas-Peucker_line_simplification.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Ramer-Douglas-Peucker_line_simplification
#c# 2017-06-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Ramsey%27s_theorem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ramsey's_theorem
#c# 2015-11-28 <RC, 2017-01-19 >RC, 2018-09-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# .Array work-around obsolete, factored out array size constant 

File: R/Random_Latin_Squares
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_Latin_Squares
#c# 2019-06-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Random_number_generator_device
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_number_generator_(device)
#c# 2016-06-12 <>RC, 2018-11-17 >RC
#m# MOAR: OK
#j#  JVM: OK
#    weak tests

File: R/Random_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Random_numbers
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Range_consolidation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Range_consolidation
#c# 2019-02-05 <>RC, 2019-02-09 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# scofflaw 'extra' tests no longer on RC as of 2019-03-31 (anything explicitly permitted is absolutely forbidden!)

File: R/Range_consolidation.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Range_consolidation
#c# 2019-02-05 <>RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Range_expansion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Range_expansion
#c# 2016-08-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Range_expansion.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Range_expansion
#c# 2016-08-03 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Range_extraction
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Range_extraction
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Range_modifications
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Range_modifications
#c# 2020-10-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Ranking_methods
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ranking_methods
#c# 2018-09-27 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# output style differs from what's on RC

File: R/Rare_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/xx NOT ON RC
#c# 2019-09-xx 
#m# MOAR: OK
#j# JVM:  BROKEN
#n# Do .race and Perl5 call conflict? [seem to: same result in 'Cuban_primes' mash-up of .1 and 1.1 versions]
#n# key to decent runtime is adding more filtering tricks...

File: R/Rare_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/xx
#c# 2019-09-xx 
#m# MOAR: OK
#j# JVM:  OK

File: R/Raster_bars
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Raster_bars
#t# gui
#c# 2019-06-18 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# after a very slow start: just a black screen for me (or if I resize it, random frame-buffer stuff).

File: R/Rate_counter
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rate_counter
#c# 2015-12-06 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# testing reflects 2nd-run speed-up (but overall covers a very broad range)

File: R/Ray-casting_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ray-casting_algorithm
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Read_a_configuration_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_a_configuration_file
#c# 2016-06-11 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Read_a_configuration_file.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_a_configuration_file
#c# 2016-06-11 <RC
#m# MOAR: BROKEN  (lines 28, 50)
#j#  JVM: BROKEN

File: R/Read_a_file_character_by_character_UTF8
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_a_file_character_by_character/UTF8
#c# 2016-06-11 <RC, 2018-11-19 >RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Read_a_file_line_by_line
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_a_file_line_by_line
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Read_a_specific_line_from_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_a_specific_line_from_a_file
#t# skiptest
#c# 2018-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Read_entire_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Read_entire_file
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Read_entire_file.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Read_entire_file
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Real_constants_and_functions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Real_constants_and_functions
#c# 2016-01-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Recaman%27s_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Recaman%27s_sequence
#c# 2018-08-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Record_sound
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Record_sound
#t# interactive
#c# 2020-01-21 >RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: R/Recursive_descent_parser_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Recursive_descent_parser_generator
#t# nocode
#c# 2020-02-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Reduced_row_echelon_form
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reduced_row_echelon_form
#c# 2018-04-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: reduced_row.txt

File: R/Reduced_row_echelon_form-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reduced_row_echelon_form
#c# 2015-12-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Reduced_row_echelon_form-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reduced_row_echelon_form
#c# 2015-12-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Reduced_row_echelon_form.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Reduced_row_echelon_form
#c# 2016-01-07 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: reduced_row.txt

# Re-implemented without the pseudocode, expressed as elementary matrix row operations. See 
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://unapologetic.wordpress.com/2009/08/27/elementary-row-and-column-operations/
# and
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://unapologetic.wordpress.com/2009/09/03/reduced-row-echelon-form/
# First, a procedural version:

File: R/Reflection_Get_source
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reflection/Get_source
#c# 2016-08-01 <>RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Too many positionals passed; expected 1 arguments but got 2)

File: R/Reflection_List_methods
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reflection/List_methods
#c# 2016-08-06 <RC, 2018-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# updated test as output format changed

File: R/Reflection_List_methods.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Reflection/List_methods
#c# 2016-08-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Reflection_List_properties
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reflection/List_properties
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Regular_expressions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Regular_expressions
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Remove_duplicate_elements
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Remove_duplicate_elements
#c# 2015-10-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Remove_lines_from_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Remove_lines_from_a_file
#c# 2015-12-16 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: calendar-2016.txt

File: R/Remove_vowels_from_a_string
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Remove_vowels_from_a_string
#c# 2020-07-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: samemark NYI

File: R/Rename_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rename_a_file
#c# 2016-06-11 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Rendezvous
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rendezvous
#c# 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: rendezvous.txt
#n# is there actually anything that 'srand' can control?

File: R/Rep-string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rep-string
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Unicode problem, compiles/runs, produces incorrect results

File: R/Repeat
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Repeat
#c# 2016-02-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Repeat_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Repeat_a_string
#c# 2015-10-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Resistance_Calculator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Resistor_Calculator
#c# 2019-03-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Resistance_Network_Calculator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Resistance_Network_Calculator
#c# 2019-03-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Resistor_mesh
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Resistor_mesh
#c# 2016-01-21 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Respond_to_an_unknown_method_call
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Respond_to_an_unknown_method_call
#c# 2016-06-11 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Retrieve_and_search_chat_history
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Retrieve_and_search_chat_history
#c# 2017-05-06 <RC, 2018-04-25 <RC
#t# inprogress
#m# MOAR: OK
#j#  JVM: OK
#n# see .0 version for 'live' filter

File: R/Retrieve_and_search_chat_history.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Retrieve_and_search_chat_history
#c# 2017-05-06 <RC, 2018-04-25 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK
#n# recently broken, now OK
#n# 'live' filter, as on RC, no testing

File: R/Return_multiple_values
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Return_multiple_values
#c# 2016-09-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Return_multiple_values.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Return_multiple_values
#c# 2016-02-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Reverse_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reverse_a_string
#c# 2015-11-22 <>RC, 2018-09-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# JVM only partial

File: R/Reverse_a_string.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Reverse_a_string
#c# 2015-11-22 <>RC
#m# MOAR: OK
#j#  JVM: OK (partial)
#n# last test fails

File: R/Reverse_file_lines
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Reverse_file_lines
#t# nocode
#c# 2021-08-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Reverse_the_gender_of_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reverse_the_gender_of_a_string
#c# 2018-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Reverse_words_in_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Reverse_words_in_a_string
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Robots
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Robots
#t# interactive
#c# 2019-03-23 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# must use 'return' to redraw screen

File: R/Rock-paper-scissors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rock-paper-scissors
#c# 2016-06-11 <>RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: ro\nro\nro\nro\nq
#n# answer changed, srand drift?

File: R/Roman_numerals_Decode
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roman_numerals/Decode
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Roman_numerals_Decode.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roman_numerals/Decode
#c# 2017-01-26 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN (rton2 only)
#  test version with non-capturing [] in rton2 (fails)

File: R/Roman_numerals_Encode
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roman_numerals/Encode
#c# 2015-10-13 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Roots_of_a_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roots_of_a_function
#c# 2016-01-17 <RC, 2018-06-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Roots_of_a_quadratic_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roots_of_a_quadratic_function
#c# 2015-12-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# difference between MOAR/JVM is just 'e-06' vs 'E-6'

File: R/Roots_of_unity
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Roots_of_unity
#c# 2015-11-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Rosetta_Code_Count_examples
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Count_examples
#t# skiptest
#c# 2018-03-30 <RC, 2018-11-19 >RC, 2019-01-21 <RC, 2019-05-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# skipping 2020-12-29 update

File: R/Rosetta_Code_Count_examples.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Rosetta_Code/Count_examples
#c# 2018-03-30 <RC, 2018-11-19 >RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN

File: R/Rosetta_Code_Find_bare_lang_tags
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Find_bare_lang_tags
#c# 2016-06-12 <RC, 2018-04-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Rosetta_Code_Find_unimplemented_tasks
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Find_unimplemented_tasks
#c# 2018-04-30 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: R/Rosetta_Code_Fix_code_tags
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Fix_code_tags
#c# 2015-10-14 <RC, 2018-04-15 <RC, 2018-07-31 <RC
#m# MOAR: OK
#j# JVM:  OK

File: R/Rosetta_Code_List_authors_of_task_descriptions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/List_authors_of_task_descriptions
#c# 2018-03-31 <RC, 2018-11-19 >RC, 2020-07-19 >RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN

File: R/Rosetta_Code_List_authors_of_task_descriptions.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Rosetta_Code/List_authors_of_task_descriptions
#c# 2017-09-13 <RC, 2018-02-27 <RC
#t# output varies
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM, ecosystem...

File: R/Rosetta_Code_Rank_languages_by_number_of_users
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_number_of_users
#c# 2018-05-19 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: R/Rosetta_Code_Rank_languages_by_popularity-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity
#c# 2017-01-16 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# 2020-03-14 I for one welcome our new Raku overlords

File: R/Rosetta_Code_Rank_languages_by_popularity-2
#!/usr/bin/env perl6
#u# http://www.rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity
#c# 2016-05-21 <RC, 2018-10-28 >RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Rosetta_Code_Run_examples
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Run_examples
#t# skiptest
#c# 2018-04-15 <RC, 2018-04-17 <RC, 2018-06-22 <RC, 2019-03-25 <RC, 2019-11-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# may be slightly out-of-date, but cf. ~/perl6/rc-run/RC-run.p6 which is at usually at HEAD, and run/tested all the time
#n# (so FYI thundergnat++, it runs fine on macOS essentially with no changes [except 'xdg-open'])

File: R/Rosetta_Code_Run_examples.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Run_examples
#c# 2018-04-15 <RC, 2018-04-17 <RC, 2018-06-22 <RC, 2019-03-25 <RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN
#n# may be slightly out-of-date, but cf. ~/perl6/rc-run/RC-run.p6 which is at usually at HEAD, and run/tested all the time
#n# (so FYI thundergnat++, it runs fine on macOS essentially with no changes [except 'xdg-open'])

File: R/Rosetta_Code_Run_examples.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Rosetta_Code/Run_examples
#c# 2018-04-15 <RC, 2018-04-17 <RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN

File: R/Rosetta_Code_Tasks_without_examples
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Tasks_without_examples
#c# 2017-11-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2019-05-01 testing is pretty weak, only one task (100 doors)
#n# skip writing output to fail, and panic goes away, but it hangs after a short while, cause unknown...
#n# MoarVM panic: Internal error: zeroed target thread ID in work pass
#n# flaps: sometimes works, sometimes doesn't

File: R/Rot-13
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rot-13
#c# 2016-12-17 <RC, 2018-04-17 <RC, 2021-07-23 <RC
#m# MOAR: OK
#j#  JVM: OK
#   special case of 'Substitution_Cipher'

File: R/Run-length_encoding
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Run-length_encoding
#c# 2015-12-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Run_as_a_daemon_or_service
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Run_as_a_daemon_or_service
#t# skiptest
#c# 2018-12-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# UNIX::Daemonize installed --/test
#n# sometimes stalls?

File: R/Runge-Kutta_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Runge-Kutta_method
#c# 2016-03-25 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Runtime_evaluation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Runtime_evaluation
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: R/Runtime_evaluation_In_an_environment
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Runtime_evaluation/In_an_environment
#c# 2015-12-22 <>RC, 2016-05-12 <RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# migrated from 'Eval_in_environment'

File: S/S-Expressions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/S-Expressions
#c# 2015-11-02 <RC, 2020-03-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/SEDOLs
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SEDOLs
#c# 2015-12-17 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/SHA-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SHA-1
#c# 2016-02-10 <RC, 2017-08-20 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/SHA-1-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SHA-1
#c# 2020-02-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/SHA-256
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SHA-256
#c# 2015-12-21 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/SHA-256-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SHA-256
#c# 2020-02-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/SHA-256_Merkle_tree-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/SHA-256_Merkle_tree
#c# 2020-11-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#i# RC cli: ref/rc-title.png

File: S/SHA-256_Merkle_tree-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/SHA-256_Merkle_tree
#c# 2020-11-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#i# RC cli: ref/rc-title.png

File: S/SOAP
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/SOAP
#t# skiptest
#c# 2018-12-17 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 501 Protocol scheme 'https' is only supported if IO::Socket::SSL is installed <URL:https://www.w3schools.com/xml/tempconvert.asmx?WSDL>
#n# New error:
#n# err code: 336032814
#n# error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version

File: S/Safe_addition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Safe_addition
#c# 2019-02-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# the only 'difference' MOAR/JVM output was the case (e/E) in the 'scientific' notation of 'Error'

File: S/Safe_primes_and_unsafe_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Safe_primes_and_unsafe_primes
#c# 2018-09-28 <RC, 2018-10-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN, and the EVAL trick not working...

File: S/Safe_primes_and_unsafe_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Safe_primes_and_unsafe_primes
#c# 2018-09-28 <RC, 2018-10-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# a bit slow: 6236.988u 64.714s 47:11.84 222.5%

File: S/Sailors,_coconuts_and_a_monkey_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sailors,_coconuts_and_a_monkey_problem
#c# 2015-10-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Same_Fringe
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Same_Fringe
#c# 2015-10-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sattolo_cycle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sattolo_cycle
#c# 2016-08-30 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# better testing; let it be random to see if it ever fails

File: S/Scope_Function_names_and_labels
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Scope/Function_names_and_labels
#c# 2016-06-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Scope_modifiers
#!/usr/bin/env perl6
#t# nocode
#u# http://rosettacode.org/wiki/Scope_modifiers
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Search_a_list
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Search_a_list
#c# 2016-01-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Search_a_list_of_records
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Search_a_list_of_records
#c# 2015-12-03 <>RC, 2016-08-22 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# migrated from 'Array_search'

File: S/Secure_temporary_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Secure_temporary_file
#c# 2017-10-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# better testing

File: S/Selective_File_Copy
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Selective_File_Copy
#c# 2018-09-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Self-describing_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Self-describing_numbers
#c# 2015-10-28 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# now mirrors what's on RC, but reduced limit to keep run-time down

File: S/Self-describing_numbers.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Self-describing_numbers
#c# 2015-10-28 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Self_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Self_numbers
#c# 2020-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# faster than the literal-minded Perl translation; hard-coding '50' sub-optimal

File: S/Semiprime-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Semiprime
#c# 2015-12-29 <RC, 2018-03-15 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Semiprime-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Semiprime (more efficient example)
#c# 2017-03-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Semordnilap
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Semordnilap
#c# 2015-10-27 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Send_an_unknown_method_call
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Send_an_unknown_method_call
#c# 2016-06-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Send_email
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Send_email
#c# 2018-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# incomplete: no attempt to send email (and pretty weak testing)

File: S/Separate_the_house_number_from_the_street_name
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Separate_the_house_number_from_the_street_name
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sequence:_nth_number_with_exactly_n_divisors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence:_nth_number_with_exactly_n_divisors
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Sequence:_nth_number_with_exactly_n_divisors.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence:_nth_number_with_exactly_n_divisors
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2020-12-15 JVM: A non-trivial code issue here? 
#n# Runs, but results are not the same, due to failure to proceed through $iterator values?
#n# note: 'div-count' works for JVM in other Sequence* tasks

File: S/Sequence:_smallest_number_greater_than_previous_term_with_exactly_n_divisors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence:_smallest_number_greater_than_previous_term_with_exactly_n_divisors
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sequence:_smallest_number_with_exactly_n_divisors
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence:_smallest_number_with_exactly_n_divisors
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sequence_of_non-squares
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence_of_non-squares
#c# 2016-03-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sequence_of_primes_by_Trial_Division
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence_of_primes_by_Trial_Division
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sequence_of_primorial_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence_of_primorial_primes
#c# 2016-05-10 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Set
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Set
#c# 2015-12-05 <RC, 2018-05-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Set_consolidation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Set_consolidation
#c# 2016-05-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Set_of_real_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Set_of_real_numbers
#c# 2016-07-28 <RC, 2018-04-25 <RC, 2018-11-23 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# kudos to thundergnat for figuring out the issue with defining $A, I never could...

File: S/Set_of_real_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Set_of_real_numbers
#c# 2016-07-28 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# failures started after 6.c release

File: S/Set_of_real_numbers.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Set_of_real_numbers
#c# 2016-07-28 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: S/Set_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Set_puzzle
#c# 2016-01-19 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Seven-sided_dice_from_five-sided_dice
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Seven-sided_dice_from_five-sided_dice
#c# 2015-10-26 <RC, 2018-04-08 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# could switch back to 1_000_000 iterations, fast enough now

File: S/Sexy_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sexy_primes
#c# 2018-09-27 <RC, 2018-10-02 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: module, and the EVAL trick not working...
#n# CANNOT substitute 'classify' for 'categorize', error is:
#n#    mapper on classify-list computed to an item with different number of elements in it than previous items, 
#n#    which cannot be used because all values need to have the same number of elements. 
#n#    Mixed-level classification is not supported.

File: S/Sexy_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sexy_primes
#c# 2018-09-27 <RC, 2018-10-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Shell_one-liner
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Shell_one-liner
#c# 2020-12-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Shift_list_elements_to_left_by_3
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Shift_list_elements_to_left_by_3
#c# 2021-03-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Shoelace_formula_for_polygonal_area
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Shoelace_formula_for_polygonal_area
#c# 2017-08-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Short-circuit_evaluation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Short-circuit_evaluation
#c# 2016-02-20 <>RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Shortest_common_supersequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Shortest_common_supersequence
#c# 2015-11-30 <RC, 2018-08-18 >RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# borrowed code from 'Longest_common_subsequence' task

File: S/Show_Ascii_table-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Show_Ascii_table
#c# 2018-08-09 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: ASCII_table.txt
#n# on RC, now outputs wiki-table (cf 'Show_Ascii_table-2')
#n# characters in output table cause Malformed-UTF error, so test file
#n# dumbed-down ASCII boxing, top/mid/bot now all the same

File: S/Show_Ascii_table-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Show_Ascii_table
#c# 2018-09-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC File: ASCII_wiki.txt
#n# wiki-table output (this is current on RC)

File: S/Show_the_decimal_value_of_a_number_of_1s_appended_with_a_3,_then_squared
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Show_the_(decimal)_value_of_a_number_of_1s_appended_with_a_3,_then_squared
#c# 2021-04-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Show_the_epoch
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Show_the_epoch
#c# 2016-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sierpinski_arrowhead_curve
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_arrowhead_curve
#c# 2020-03-01 <RC, 2020-03-03 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: sierpinski-arrowhead-curve.svg

File: S/Sierpinski_carpet
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_carpet
#c# 2016-06-01 <RC, 2018-04-11 <>RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sierpinski_curve
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_curve
#c# 2020-03-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: sierpinski-curve.svg

File: S/Sierpinski_pentagon
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_pentagon
#c# 2016-01-22 <RC, 2018-11-17 >RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: sierpinski_pentagon.svg
#n# fixed co-ordinates problem  ('transform' directive goes with each 'polygon')

File: S/Sierpinski_pentagon.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sierpinski_pentagon
#c# 2016-01-22 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: pentagon.svg

File: S/Sierpinski_square_curve
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_square_curve
#c# 2020-03-01 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: sierpinski-square-curve.svg

File: S/Sierpinski_triangle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_triangle
#c# 2016-09-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sierpinski_triangle_Graphical
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sierpinski_triangle/Graphical
#c# 2015-10-16 <RC, 2018-11-12 >RC, , 2018-11-16 <RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: sierpinski_triangle.svg

File: S/Sieve_of_Eratosthenes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sieve_of_Eratosthenes
#c# 2016-09-16 <RC, 2017-02-18 >RC, 2019-01-19 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# the third 'modulus' version (commented out below) marked as error on RC, so this task marked as 'Bad' in 'task.txt'

File: S/Sieve_of_Eratosthenes.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sieve_of_Eratosthenes
#c# 2015-11-03 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Similar_string_groups
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Similar_string_groups
#c# 2018-07-24 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# delete from RC, dubious permissions

File: S/Simple_database
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simple_database
#c# 2018-04-30 <RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Simple_database-client
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simple_database
#c# 2018-04-30 <RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  OK

File: S/Simple_windowed_application
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simple_windowed_application
#t# gui
#c# 2019-11-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# not really OK...

File: S/Simulate_input_Keyboard
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simulate_input/Keyboard
#t# gui
#c# 2018-12-21 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# 2020-12-19 on Mac OS X does switch to a browser, bring up Google search, but then:
#n# Warning: XTEST extension unavailable on '(null)'. Some functionality may be disabled; See 'man xdotool' for more info.
#n# Type List does not support associative indexing.
#n#   in block <unit> at S/Simulate_input_Keyboard line 24

File: S/Simulate_input_Mouse
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simulate_input/Mouse
#t# gui
#c# 2018-12-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Simulated_annealing
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simulated_annealing
#c# 2020-01-23 <RC, 2020-01-27 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch?
#n#
#n# Notes on revisions (see .1 for original version as uploaded by Hkdtam++)
#n#
#n# more flexible on input grid (but must be perfect square), 'magic' numbers keyed to 10x10 grid go away
#n# make distance array available globally (no lookup function)
#n# more idiomatic syntax (e.g. no C-style loops)
#n# remove intermediate variables when feasible
#n# rename some variables to better reflect their roles
#n# reformat code to emphasize parallelism
#n# .rotor suffices to make grid output (no separate print routine)
#n# output follows task spec (less is more)
#n# limit displayed values to non-redonkulous precision (this is not the LIGO experiment)
#n# extended sigil-less style (temp. variable kludges clobbered with 'anonymous containers', thundergnat++)
#n# single/double quote style: former for static strings, latter for ones needing interpolation
#n# eliminated 'sa' as routine (to eliminate need for globals could have packed *everything* into it, but 6-of-one, 1/2-dozen...)

File: S/Simulated_annealing.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Simulated_annealing
#t# skiptest
#c# 2020-01-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Hdktam's original version 

File: S/Sine_wave
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sine_wave
#c# 2018-05-19 <RC, 2018-11-17 >RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: sine.svg
#n# ha ha

File: S/Sine_wave.1
#!/usr/bin/env perl6
#t# skiptest
#u# http://rosettacode.org/wiki/Sine_wave
#c# 2019-09-21 NOT ON RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# ends with segfault?

File: S/Singleton
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singleton
#c# 2016-01-06 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK
#n# not really doing anything worth testing...

File: S/Singly-linked_list_Element_definition
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singly-linked_list/Element_definition
#c# 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Singly-linked_list_Element_insertion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singly-linked_list/Element_insertion
#t# nocode
#c# 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Singly-linked_list_Element_removal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singly-linked_list/Element_removal
#c# 2018-11-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Singly-linked_list_Traversal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Singly-linked_list/Traversal
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sleep
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sleep
#c# 2016-02-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sleeping_Beauty_problem
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sleeping_Beauty_problem
#c# 2021-05-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN OK

File: S/Smallest_enclosing_circle_problem
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Smallest_enclosing_circle_problem
#c# 2020-12-08 <RC, 2021-06-26 >RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Smallest_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Smallest_numbers
#c# 2021-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Smallest_power_of_6_whose_decimal_expansion_contains_n
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Smallest_power_of_6_whose_decimal_expansion_contains_n
#c# 2021-04-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# inline 'comma' for sake of JVM

File: S/Smallest_square_that_begins_with_n
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Smallest_square_that_begins_with_n
#c# 2021-03-19 <RC, 2021-03-20 <RC, 2021-03-23 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# minor display tweaks

File: S/Smallest_square_that_begins_with_n-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Smallest_square_that_begins_with_n
#c# 2021-03-23 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Smarandache_prime-digital_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Smarandache_prime-digital_sequence
#c# 2019-06-18 <RC, 2019-07-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# added back calculation of 100K-th

File: S/Smarandache_prime-digital_sequence.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Smarandache_prime-digital_sequence
#c# 2019-06-18 <RC, 2019-07-03 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# added back calculation of 100K-th

File: S/Smith_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Smith_numbers
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# error gone after switching 'factors' algorithm (cf Count_in_factors')

File: S/Snake.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Snake
#c# 2016-09-03 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# Cannot locate native library 'libcairo.2.dylib': dlopen(libcairo.2.dylib, 1): image not found

File: S/Snake_And_Ladder
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Snake_And_Ladder
#c# 2017-02-15 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: snake_and_ladder.BEND

File: S/Sockets
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sockets
#c# 2015-12-14 <>RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: S/Sokoban
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sokoban
#c# 2016-06-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Solve_a_Hidato_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Solve_a_Hidato_puzzle
#c# 2015-11-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Solve_a_Holy_Knight%27s_tour
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Solve_a_Holy_Knight%27s_tour
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Solve_a_Hopido_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Solve_a_Hidato_puzzle
#c# 2016-01-03 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Solve_a_Numbrix_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Solve_a_Hidato_puzzle
#c# 2016-01-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Solve_the_no_connection_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Solve_the_no_connection_puzzle
#c# 2015-11-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_a_list_of_object_identifiers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_a_list_of_object_identifiers
#c# 2016-08-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_an_array_of_composite_structures
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_an_array_of_composite_structures
#c# 2016-05-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_an_integer_array
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_an_integer_array
#c# 2016-01-25 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_an_outline_at_every_level
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sort_an_outline_at_every_level
#c# 2021-07-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sort_disjoint_sublist
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_disjoint_sublist
#c# 2015-12-20 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_numbers_lexicographically
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_numbers_lexicographically
#c# 2018-07-25 <RC, 2020-03-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sort_numbers_lexicographically.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sort_numbers_lexicographically
#c# 2018-07-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sort_stability
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_stability
#c# 2016-06-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_the_letters_of_string_in_alphabetical_order
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sort_the_letters_of_string_in_alphabetical_order
#c# 2021-07-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sort_the_letters_of_string_in_alphabitical_order
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sort_the_letters_of_string_in_alphabitical_order
#c# 2021-07-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sort_three_variables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_three_variables
#c# 2017-05-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_three_variables.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sort_three_variables
#c# 2017-04-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sort_using_a_custom_comparator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sort_using_a_custom_comparator
#c# 2016-05-04 <RC, 2021-03-15 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# the old verbiage confused me, so maybe not useful for new Raku looky-loos?

File: S/Sorting_Algorithms_Circle_Sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_Algorithms/Circle_Sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# can be confused by certain input, e.g. <-1 -1a -3>

File: S/Sorting_algorithms_Bead_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Bead_sort
#c# 2016-05-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Bogosort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Bogosort
#c# 2015-11-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Bubble_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Bubble_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Cocktail_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Cocktail_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Cocktail_sort_with_shifting_bounds
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sorting_algorithms/Cocktail_sort_with_shifting_bounds
#c# 2020-05-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sorting_algorithms_Comb_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Comb_sort
#c# 2016-03-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Counting_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Counting_sort
#c# 2016-03-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Cycle_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Cycle_sort
#c# 2016-05-06 <RC, 2018-05-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Gnome_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Gnome_sort
#c# 2016-03-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Heapsort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Heapsort
#c# 2016-05-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Insertion_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Insertion_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Merge_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Merge_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Pancake_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Pancake_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Pancake_sort.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Pancake_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Patience_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Patience_sort
#c# 2015-10-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Permutation_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Permutation_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Quicksort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Quicksort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Radix_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Radix_sort
#c# 2016-05-06 <>RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Selection_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Selection_sort
#c# 2016-08-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Selection_sort.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sorting_algorithms/Selection_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Shell_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Shell_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Sleep_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Sleep_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# flaps when .roll used
#n# 2018-08-03 JVM stopped working?
#n# 2020-05-15 how to test this:
#n# react whenever Supply.from-list(@*ARGS).start({ .&sleep // +$_ }).flat { .say }

File: S/Sorting_algorithms_Stooge_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Stooge_sort
#c# 2016-05-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sorting_algorithms_Strand_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Strand_sort
#c# 2018-05-29 <>RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Soundex
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Soundex
#c# 2016-05-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sparkline_in_unicode
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sparkline_in_unicode
#c# 2016-03-19 <RC, 2019-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Special_Divisors
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Special_Divisors
#c# 2021-03-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Special_Pythagorean_Triplet
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Special_Pythagorean_Triplet
#c# 2021-08-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Special_characters
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Special_characters
#c# 2016-06-12 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: S/Special_factorials
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Special_factorials
#c# 2021-03-17 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Special_neighbor_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Special_neighbor_primes
#c# 2021-08-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Special_variables
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Special_variables
#c# 2018-03-20 <RC, 2020-04-12 >RC
#t# skiptest
#m# MOAR: OK
#j# JVM:  OK
#n# needs clean-up, obsolete variables referenced

File: S/Speech_synthesis
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Speech_synthesis
#t# skiptest
#c# 2019-09-15 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# just for completeness...

File: S/Spelling_of_ordinal_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spelling_of_ordinal_numbers
#c# 2019-02-10 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: spelling_ordinals.txt
#n# results cause 'malformed UTF' problems, output to file instead
#n# 2020-05-15 https://github.com/rakudo/rakudo/issues/3694 thundergnat++
#n# 2021-03-23 removed Allomorph '123+0i'

File: S/Spelling_of_ordinal_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spelling_of_ordinal_numbers
#c# 2019-02-10 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# for JVM, .unival NYI

File: S/Spinning_rod_animation_Text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spinning_rod_animation/Text
#t# skiptest
#c# 2018-06-11 <RC, 2018-06-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Spinning_rod_animation_Text.0
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Spinning_rod_animation/Text
##t# interactive
##c# 2018-06-11 <RC, 2018-06-12 <RC, 2020-03-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# the clock/moon don't work right in this version

File: S/Spiral_matrix-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spiral_matrix
#c# 2015-10-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Spiral_matrix-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spiral_matrix
#c# 2016-11-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Split_a_character_string_based_on_change_of_character
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Split_a_character_string_based_on_change_of_character
#c# 2017-06-02 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# noticed on 2018-03-20, test 1 ok, test 2 not ok

File: S/Split_a_character_string_based_on_change_of_character.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Split_a_character_string_based_on_change_of_character
#c# 2017-01-05 <RC
#t# skiptest
#m# MOAR: OK
#j#  JVM: OK

File: S/Split_a_character_string_based_on_change_of_character.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Split_a_character_string_based_on_change_of_character
#c# 2017-06-02 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# ASCII-only

File: S/Spoof_game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spoof_game
#c# 2020-02-07 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# rendered non-interactive for testing

File: S/Square-free_integers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Square-free_integers
#c# 2018-07-05 <RC, 2018-07-09 <RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Square-free_integers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Square-free_integers
#c# 2018-07-02 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Square_Form_Factorization
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Square_Form_Factorization
#c# 2021-03-25 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# tried to run the whole task once (waaaaay slow), cut down on results for daily smoke-testing
#n# would have to replace the Unicode symbols for JVM to work (anyhow, would probably be glacial)
#n# can't display some of the Unicode (on RC, here)
#n# Start-up is really slow: See .1 version for documentation on Unicode start-up penalty

File: S/Square_Form_Factorization.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Square_Form_Factorization
#c# 2021-03-xx NOT ON RC
#p# OK
#n# in this version all Unicode function/variable names removed, otherwise the same
#n# timings to document the 'Unicode' start-up penalty 
#n# (avoiding custom routine calls is the major component for runtime slowdown)

File: S/Square_Root_by_Hand
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Square_Root_by_Hand
#c# 2020-10-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Square_but_not_cube
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Square_but_not_cube
#c# 2018-08-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Stable_marriage_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stable_marriage_problem
#c# 2015-12-16 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Stack
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stack
#c# 2015-12-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Stack_traces
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stack_traces
#c# 2016-05-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Start_from_a_main_routine
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Start_from_a_main_routine
#c# 2016-05-15 <RC
#t# nocode
#m# MOAR: OK
#j#  JVM: OK

File: S/Starting_a_web_browser
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Starting_a_web_browser
#c# 2017-10-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: streets_and_numbers.html
#n# daily testing of HTML generation, the 'open browser' part works fine too

File: S/State_name_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/State_name_puzzle
#c# 2015-11-29 <RC, 2018-04-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# bug noticed 2019-03-15, but relevant Rakudo change could be earlier (as bug doesn't manifest every run)
#n# 2019-04-18 GH2805 has been fixed, revert to old code

File: S/State_name_puzzle-debug
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/State_name_puzzle-debug
#t# skiptest
#c# not on RC
#m# MOAR: BROKEN
#j#  JVM: OK  (Rakudo version 2018.11-13-gdd0301454 built on JVM)
#n# bug first noticed 2019-03-15, but relevant Rakudo change could be earlier (as bug doesn't trigger every run)
#n# 2019-04-01 regression caused by:
#n#  https://github.com/MoarVM/MoarVM/commit/bc98cb9467ab2d5d408dff841f39ae8734a936a5

File: S/Statistics_Basic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Statistics/Basic
#c#  2015-11-03 <>RC, 2017-02-01 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch?
#n# 2021-03-04 yes to above, and that has not changed

File: S/Statistics_Normal_distribution
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Statistics/Normal_distribution
#c# 2016-03-19 <RC, 2018-03-27 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 now stable?
#n# 2021-03-04 not bothering to test the graph until 'srand' issues fixed

File: S/Stem-and-leaf_plot
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stem-and-leaf_plot
#c# 2015-12-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Stern-Brocot_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stern-Brocot_sequence
#c# 2015-12-11 <>RC, 2017-03-29 <RC, 2021-03-15 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Stern-Brocot_sequence.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Stern-Brocot_sequence
#c# 2015-12-11 <>RC
#m# MOAR: OK
#j#  JVM: OK
#    changed Stern -> Stern globally

File: S/Stirling_numbers_of_the_first_kind
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stirling_numbers_of_the_first_kind
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Stirling_numbers_of_the_second_kind
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stirling_numbers_of_the_second_kind
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Straddling_checkerboard
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Straddling_checkerboard
#c# 2016-03-19 <>RC, 2018-04-09 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# now using .antipairs to invert translation table
#n# flattened all elements of 'table', works just as well

File: S/Straddling_checkerboard.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Straddling_checkerboard
#c# 2018-04-08 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK
#  {{Works with|rakudo|2018.04}} or {{broken|Perl 6}}  

File: S/Strange_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Strange_numbers
#c# 2021-02-22 <RC, 2021-02-23 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# junctions are a little faster

File: S/Strange_plus_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Strange_plus_numbers
#c# 2021-02-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Strange_unique_prime_triplets
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Strange_unique_prime_triplets
#c# 2021-03-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Strassen%27s_algorithm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Strassen%27s_algorithm
#t# inprogress
#c# 2021-01-26 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# was not able to get modules to work on my old Mac...
#n# 2021-02-18 code now OK, current

File: S/Stream_Merge
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Stream_Merge
#c# 2016-06-23 <RC 2018-03-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_append
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_append
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_case
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_case
#c# 2016-03-25 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_comparison
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_comparison
#c# 2015-11-24 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_concatenation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_concatenation
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/String_interpolation_included
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_interpolation_\(included\)
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/String_length
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_length
#c# 2016-01-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_matching
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_matching
#c# 2016-08-28 <RC, 2020-01-13 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_matching.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/String_matching
#c# 2015-11-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/String_prepend
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/String_prepend
#c# 2015-12-06 <RC, 2017-03-09 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Strip_a_set_of_characters_from_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strip_a_set_of_characters_from_a_string
#c# 2015-12-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Strip_block_comments
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strip_block_comments
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Strip_comments_from_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strip_comments_from_a_string
#c# 2016-01-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Strip_control_codes_and_extended_characters_from_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strip_control_codes_and_extended_characters_from_a_string
#c# 2016-03-19 <RC, 2018-04-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Strip_whitespace_from_a_string_Top_and_tail
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strip_whitespace_from_a_string/Top_and_tail
#c# 2015-12-10 <>RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK (partial)
#n# test #4 fails, returns '\r\n \t\x[2029] Good Stuff'

File: S/Strong_and_weak_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strong_and_weak_primes
#c# 2018-12-03 <RC, 2019-01-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Strong_and_weak_primes.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Strong_and_weak_primes
#c# 2018-12-03 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Strong_and_weak_primes.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Strong_and_weak_primes
#c# 2018-12-03 <RC, 2019-01-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Subleq
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Subleq
#c# 2021-05-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Subleq.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Subleq
#c# 2015-10-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Subset_sum_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Subset_sum_problem
#c# 2016-03-19 <RC, 2018-11-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# .hyper brings no speed-up, dis-ordered results ?
#n# starting with length 28, slow-down is massive (nearly 30 minutes wall-time) as it works through all combinations

File: S/Subset_sum_problem.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Subset_sum_problem
#c# 2016-03-19 <RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#    20161123: 4611.173u   6.166s 1:17:04.06  99.8%
#    20171027: 3887.080u   7.286s 1:04:57.74  99.9%
#    20181004: 2036.873u   3.757s   34:05.58  99.7% 
#    20181005: 3165.355u 869.295s   38:20.58 175.3%  with .race, no benefit
#    _NEXT_

File: S/Substitution_Cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Substitution_Cipher
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Substring
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Substring
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Substring_Top_and_tail
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Substring/Top_and_tail
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Unicode problem
#`{ java.nio.charset.MalformedInputException: Input length = 1
  in method print at gen/jvm/CORE.setting line 35089
  in sub say at gen/jvm/CORE.setting line 35924
  in block <unit> at Substring_Top_and_tail line 36
}

File: S/Substring_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Substring_primes
#c# 2021-04-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Subtractive_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Subtractive_generator
#c# 2015-11-04 <RC, 2018-04-25 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Subtractive_generator.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Subtractive_generator
#c# 2015-11-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Successive_prime_differences-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Successive_prime_differences
#c# 2019-04-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# CANNOT substitute 'classify' for 'categorize', error is:
#n#    mapper on classify-list computed to an item with different number of elements in it than previous items,
#n#    which cannot be used because all values need to have the same number of elements.
#n#    Mixed-level classification is not supported.

File: S/Successive_prime_differences-1.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Successive_prime_differences
#c# 2019-04-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Successive_prime_differences-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Successive_prime_differences
#c# 2019-04-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Successive_prime_differences-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Successive_prime_differences
#c# 2019-04-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sudoku-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sudoku
#c# 2015-10-14 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sudoku-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sudoku
#c# 2016-11-25 <RC, 2020-08-26 >RC, 2021-02-11 >RC
#t# toodamnslow
#m# MOAR: OK
#j#  JVM: OK
#    20161123: 1652.994u 7.216s 27:43.58 99.7%
#    20170123: 1396.398u 9.995s 27:13.82 86.0%
#    20181004:  887.363u 2.652s 14:49.91 100.0%
#    _NEXT_

File: S/Sudoku.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sudoku
#c# 2015-10-14 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN

File: S/Suffix_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Suffix_tree
#c# 2016-05-15 <RC, 2017-02-01 >RC, 2018-04-30 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Suffixation_of_decimal_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Suffixation_of_decimal_numbers
#c# 2018-11-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# the test '+$type ~~ Int' yields and intermittent bug (not on RC)

File: S/Sum_and_Product_Puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_and_Product_Puzzle
#c# 2016-08-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_and_Product_Puzzle.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sum_and_Product_Puzzle
#c# 2016-08-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_and_product_of_an_array
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_and_product_of_an_array
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_data_type
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_data_type
#c# 2019-06-26 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sum_digits_of_an_integer
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_digits_of_an_integer
#c# 2016-02-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_multiples_of_3_and_5
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_multiples_of_3_and_5
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_of_a_series
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_of_a_series
#c# 2016-05-05 <>RC, 2017-03-29 <RC, 2018-05-31 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII
#n# 2018-05-31 'cached' feature would make a difference under heavy use…

File: S/Sum_of_divisors
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tau_number
#u# http://rosettacode.org/wiki/Tau_function
#u# http://rosettacode.org/wiki/Sum_of_divisors
#u# http://rosettacode.org/wiki/Product_of_divisors
#c# 2020-12-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Sum_of_elements_below_main_diagonal_of_matrix
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sum_of_elements_below_main_diagonal_of_matrix
#c# 2021-07-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sum_of_first_n_cubes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sum_of_first_n_cubes
#c# 2021-05-19 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sum_of_squares
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_of_squares
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_of_the_digits_of_n_is_substring_of_n
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sum_of_the_digits_of_n_is_substring_of_n
#c# 2021-04-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sum_to_100
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sum_to_100
#c# 2017-01-02 <RC, 2017-05-10 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sum_to_100.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Sum_to_100
#c# 2017-01-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Summarize_and_say_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Summarize_and_say_sequence
#c# 2016-06-12 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2016 196.742u 2.298s 4:29.33 73.8%
#n# 2019  80.076u 0.845s 1:21.28 99.5% 
#n# 2020-11-08 renamed from 'Self-referential_sequence'

File: S/Summarize_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Summarize_primes
#c# 2021-04-15 <RC, 2021-07-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Summarize_primes.1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Summarize_primes
#c# 2021-04-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: S/Summarize_primes.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Summarize_primes
#c# 2021-04-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Sunflower_fractal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sunflower_fractal
#c# 2018-07-25 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: sunflower.svg

File: S/Super-d_numbers-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-10 <RC, 2019-11-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# thundergnat's 1st try
#n# 2..6 : 17.679u   0.469s  0:25.69 70.5%
#n# 2..8 : 648.901u 12.444s 17:32.68 62.8%
#n# */×: replacing '* * **' with '* × **' is clarifying (for humans)

File: S/Super-d_numbers-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-10 <RC, 2019-11-24 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# now with concurrency, as fast as my version (Super-d_numbers-3)

File: S/Super-d_numbers-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-10 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat's 2nd try (incorporating Util's version)
#n# 15.234u 0.583s 0:17.60 89.8%

File: S/Super-d_numbers-3
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-11 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# Divide and conquer is the strategy, but how to exit early (i.e. not have fixed termination value)?
#n# Using an X::AdHoc exception to leave the .race block
#n# Similar issue raised in comment @ https://6guts.wordpress.com/2017/03/16/considering-hyperrace-semantics/
#n# Due to overhead, concurrency makes little sense for d < 6, but code does return correct results for all d
#n# $chunk, $max-plus are tunable parameters, that scale with $d; depending how these are set there's the danger 
#n# of missing a value in the 'first N' series, but maybe I can have just a little bit of peril?

File: S/Super-d_numbers-3.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-xx NOT ON RC
#n# divide and conquer, but how to exit early? (i.e. not have fixed termination value)
#n# similar issue raised in comment @ https://6guts.wordpress.com/2017/03/16/considering-hyperrace-semantics/
#n# $chunk, $max-plus are tunable parameters, scale with $d
#n# due to overhead, concurrency makes little sense for d < 6, but does return correct results for all d

File: S/Superellipse
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Superellipse
#c# 2015-11-02 <>RC
#t# graphical
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: superellipse.svg

File: S/Superpermutation_minimisation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Superpermutation_minimisation
#c# 2018-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Sutherland-Hodgman_polygon_clipping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sutherland-Hodgman_polygon_clipping
#c# 2019-12-01 <RC
#m# MOAR: OK
#j# JVM:  OK
### xx file: polygon-clipping.svg

File: S/Sylvester%27s_sequence
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Sylvester%27s_sequence
#c# 2021-05-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: S/Symmetric_difference
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Symmetric_difference
#c# 2015-12-22 <RC, 2019-10-29 >RC
#m# MOAR: OK
#j#  JVM: OK

File: S/Synchronous_concurrency
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Synchronous_concurrency
#c# 2015-12-23 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: sync_concur.txt
#    reads *.base, writes *.txt, 'Run-MOAR' compares to *.txt~

File: S/System_time
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/System_time
#c# 2015-11-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Table_creation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Table_creation
#c# 2017-09-25 <RC
#t# nocode
#m# MOAR: OK
#j# JVM:  OK

File: T/Table_creation_Postal_addresses
#!/usr/bin/env perl6
#t# skiptest
#u# http://rosettacode.org/wiki/Table_creation/Postal_addresses
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# probably OK, need to config local sql to get DBIish to install

File: T/Take_notes_on_the_command_line
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Take_notes_on_the_command_line
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK
#r# RC prep: cp ref/take-notes.base run/take-notes.txt
#i# RC cli: "new note 1"
#f# RC file: take-notes.txt

File: T/Tarjan
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tarjan
#c# 2018-10-03 <RC, 2018-10-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Tarjan.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Tarjan
#c# 2018-10-04 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Tau_function
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tau_number
#u# http://rosettacode.org/wiki/Tau_function
#u# http://rosettacode.org/wiki/Sum_of_divisors
#u# http://rosettacode.org/wiki/Product_of_divisors
#c# 2020-12-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: T/Tau_number
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tau_number
#u# http://rosettacode.org/wiki/Tau_function
#u# http://rosettacode.org/wiki/Sum_of_divisors
#u# http://rosettacode.org/wiki/Product_of_divisors
#c# 2020-12-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: T/Taxicab_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Taxicab_numbers
#c# 2016-01-23 <RC, 2018-10-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: taxicab_numbers.txt
#n# writing results to file as cannot get '@res.push:' to work right

File: T/Taxicab_numbers.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Taxicab_numbers
#c# 2016-01-23 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: taxicab_numbers.txt

File: T/Teacup_rim_text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Teacup_rim_text
#c# 2019-08-06 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# as of 2019-08-09 a version with 'MAIN', configurable

File: T/Temperature_conversion
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Temperature_conversion
#c# 2016-07-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Clear_the_screen
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Clear_the_screen
#c# 2016-06-12 <RC, 2018-11-22 >RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Coloured_text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Coloured_text
#c# 2016-06-12 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Cursor_movement
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Cursor_movement
#c# 2016-06-12 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Cursor_positioning
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Cursor_positioning
#c# 2016-06-12 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Dimensions
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Dimensions
#c# 2016-06-12 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK
#   had to be tweaked for local 'stty' output format

File: T/Terminal_control_Display_an_extended_character
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Display_an_extended_character
#c# 2015-12-23 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Hiding_the_cursor
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Hiding_the_cursor
#t# interactive
#c# 2018-03-24 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# both ways fail, bad just on Mac OS?

File: T/Terminal_control_Inverse_video
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Inverse_video
#c# 2016-06-14 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Positional_read
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Positional_read
#t# interactive
#c# 2018-12-06 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: T/Terminal_control_Preserve_screen
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Preserve_screen
#c# 2016-06-14 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Restricted_width_positional_input_No_wrapping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Restricted_width_positional_input/No_wrapping
#t# interactive
#c# 2018-11-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# as with 15_Puzzle_game, 2048, use 'raw' mode

File: T/Terminal_control_Restricted_width_positional_input_With_wrapping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Restricted_width_positional_input/With_wrapping
#t# interactive
#c# 2018-11-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: T/Terminal_control_Ringing_the_terminal_bell
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Ringing_the_terminal_bell
#c# 2016-06-14 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Terminal_control_Unicode_output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Terminal_control/Unicode_output
#c# 2016-06-14 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Ternary_logic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ternary_logic
#c# 2016-06-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Test_a_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Test_a_function
#c# 2016-02-11 <>RC, 2018-04-08 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Test_integerness
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Test_integerness
#c# 2016-09-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Test_integerness.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Test_integerness
#c# 2016-09-03 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Test_integerness.2
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Test_integerness
#c# 2015-11-29 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Text_Completion
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Text_Completion
#c# 2020-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Hamming distance

File: T/Text_Completion-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_Completion
#c# 2020-07-30 <RC, 2020-08-xx >RC
#m# MOAR: OK
#j# JVM:  OK
#n# reduced size of 'sorenson' by over 1%! (neither '+' in ratio was needed)

File: T/Text_Completion-2.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_Completion
#c# 2020-07-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: T/Text_between
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_between
#c# 2018-01-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Text_processing_1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_processing/1
#c# 2018-03-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Text_processing_2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_processing/2
#c# 2018-03-15 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Text_processing_Max_licenses_in_use
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_processing/Max_licenses_in_use
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Text_to_HTML
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Text_to_HTML
#c# 2019-12-07 <RC, 2020-03-16 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: put needed ecosystem modules in 'lib', but fails anyhow:
#n# Method 'slurp' not found for invocant of class 'Slip', Pod::To::HTML) line 200
#n# <link rel="stylesheet" href="//design.raku.org/perl.css"> # but NOT 'raku.css'

File: T/Textonyms
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Textonyms
#c# 2016-05-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/The_ISAAC_Cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/The_ISAAC_Cipher
#c# 2019-01-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/The_ISAAC_Cipher.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/The_ISAAC_Cipher
#c# 2019-01-18 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/The_Name_Game
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/The_Name_Game
#c# 2018-03-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/The_Twelve_Days_of_Christmas
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/The_Twelve_Days_of_Christmas
#c# 2015-12-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: the_twelve_days.txt

File: T/Thiele%27s_interpolation_formula
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Thiele\'s_interpolation_formula
#c# 2016-05-01 <>RC, 2018-06-05 >RC, 2018-10-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# made default table size 12, 'invcos' converges slowly
#n# fixed hash key order dependency (as of 2018-05-17, JVM doesn't have this 'upgrade')

File: T/Thiele%27s_interpolation_formula.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Thiele\'s_interpolation_formula
#c# 2016-05-01 <>RC, 2018-06-05 >RC, 2018-10-16 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# hash key order dependency (as of 2018-05-17, JVM doesn't have this 'upgrade')
#  made default table size 12, 'invcos' converges slowly

File: T/Three_word_location
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Three_word_location
#c# 2020-07-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Three_word_location-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Three_word_location
#c# 2020-07-24 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Thue-Morse
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Thue-Morse
#c# 2015-12-22 <>RC, 2018-04-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Tic-tac-toe
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tic-tac-toe
#t# skiptest
#c# 2018-04-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#=# RC pipe: 5\n1\n9
#n# 2020-11-15 hangs, now try: 4\n3\n8\n1

File: T/Tic-tac-toe.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Tic-tac-toe
#c# 2016-01-29 <>RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: T/Tic-tac-toe.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tic-tac-toe
#c# 2018-04-08 <RC
#m# MOAR: OK
#j# JVM:  OK
#x# RC pipe: 5\n1\n9
#n# use pre-loaded array instead

File: T/Time-based_One-time_Password_Algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Time-based_One-time_Password_Algorithm
#c# 2019-03-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# only half-tested

File: T/Time_a_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Time_a_function
#c# 2016-03-12 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Tokenize_a_string
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tokenize_a_string
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Tokenize_a_string_with_escaping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tokenize_a_string_with_escaping
#c# 2016-05-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Tonelli-Shanks_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tonelli-Shanks_algorithm
#c# 2016-10-29 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII

File: T/Tonelli-Shanks_algorithm.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tonelli-Shanks_algorithm
#c# 2016-10-29 <RC, 2018-03-22 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# JVM fails on '\' of Unicode, works otherwise (see 'Tonelli-Shanks_algorithm.1')
#n# obsolete now fixed: fails for largest test value: Cannot unbox 164 bit wide bigint into native integer

File: T/Tonelli-Shanks_algorithm.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Tonelli-Shanks_algorithm
#c# 2016-10-25 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Top_rank_per_group
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Top_rank_per_group
#c# 2016-02-22 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Topic_variable
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Topic_variable
#c# 2020-09-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# just wanted 'log2' to exist in the RC code-base...

File: T/Topic_variable.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Topic_variable
#c# 2016-06-13 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Topological_sort
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Topological_sort
#c# 2016-02-23 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Topological_sort_Extracted_top_item
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Topological_sort/Extracted_top_item
#c# 2016-04-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Topswops
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Topswops
#c# 2018-12-01 <RC, 2019-10-16 >RC, 2020-07-19 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# bumping up to 9 swaps, but 10 still too slow ( > 7 min)
#n# 2019-10-17 concurrency is sometimes not working well?  
#n# 2019-10-18 problem appears to be limited to older MacOS?

File: T/Topswops-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Topswops
#c# 2020-10-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# yeah, still slow-ish on 10

File: T/Topswops.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Topswops
#c# 2016-09-07 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n#  not using custom permutations code (broken)

File: T/Total_circles_area
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Total_circles_area
#c# 2016-06-06 <>RC, 2019-05-16 >RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Totient_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Totient_function
#c# 2018-12-05 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# see JVM for previous method of calculation

File: T/Totient_function.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Totient_function
#c# 2018-12-05 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# calculating fewer results here

File: T/Towers_of_Hanoi
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Towers_of_Hanoi
#c# 2018-03-20 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Trabb_Pardo-Knuth_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Trabb_Pardo%E2%80%93Knuth_algorithm
#c# 2016-02-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Transportation_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Transportation_problem
#c# 2018-10-07 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Tree_datastructures
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tree_datastructures
#c# 2019-10-20 <RC, 2019-10-23 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# switch to JSON::Tiny to get JVM working

File: T/Tree_from_nesting_levels-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tree_from_nesting_levels
#c# 2021-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Iterative

File: T/Tree_from_nesting_levels-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tree_from_nesting_levels
#c# 2021-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Recursive

File: T/Tree_from_nesting_levels-3
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tree_from_nesting_levels
#c# 2021-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# String Eval

File: T/Tree_traversal
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Tree_traversal
#c# 2016-06-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Trigonometric_functions
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Trigonometric_functions
#c# 2021-02-13 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# locally, can't correctly display Unicode for 2nd function

File: T/Trigonometric_functions.1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Trigonometric_functions
#c# 2016-01-26 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Triplet_of_three_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Triplet_of_three_numbers
#c# 2021-05-17 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 'hyper' is safer for testing

File: T/Triplet_of_three_numbers.jvm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Triplet_of_three_numbers
#c# 2021-05-17 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# no 'race' for JVM obviously...

File: T/Tropical_algebra_overloading
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Tropical_algebra_overloading
#c# 2021-08-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Truncatable_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Truncatable_primes
#c# 2016-03-05 <RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Truncate_a_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Truncate_a_file
#c# 2016-05-04 <>RC
#m# MOAR: OK
#r# RC prep: cp ref/truncate.base run/truncate.txt
#j#  JVM: BROKEN

File: T/Truncate_a_file.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Truncate_a_file
#c# 2019-10-27 >RC
#m# MOAR: OK
#j#  JVM: OK
#r# RC prep: cp ref/truncate.base run/truncate.txt
#n# alternate method for JVM, lacking access to native/system routines

File: T/Truth_table
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Truth_table
#c# 2016-06-06 <RC, 2020-08-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#    1st vs 2nd/3rd output screwy

File: T/Twelve_statements
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Twelve_statements
#c# 2015-11-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: T/Twin_Primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Twin_Primes
#c# 2020-07-26 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# as should be, same as Perl for 10**12: 718.55s user 5.25s system 711% cpu 1:41.68 total
#n# 2020-11-08 renamed from 'Twin_Prime_Conjecture'

File: T/Two_Sum-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Two_Sum
#c# 2016-10-10 <RC
#m# MOAR: OK
#j#  JVM: OK
#n#  could be idiomatically done via cross-product? ( see -2 variant)

File: T/Two_Sum-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Two_Sum
#c# 2019-03-10 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# terminally indecisive, wrote both left-to-right and right-to-left functional processing

File: T/Two_bullet_roulette
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Two_bullet_roulette
#c# 2020-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# ends up a little different than RC version

File: T/Two_identical_strings
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Two_identical_strings
#c# 2021-04-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: T/Type_detection
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Type_detection
#c# 2016-06-04 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: U/UPC
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/UPC
#c# 2019-11-27 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/URL_decoding
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/URL_decoding
#c# 2015-12-06 <RC, 2021-07-24 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# java.util.regex.PatternSyntaxException: Unknown character property name {hexdigit} near index 11
#n# was completelly wiping previous code the best thing to do?

File: U/URL_encoding
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/URL_encoding
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: U/URL_parser
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/URL_parser
#c# 2016-01-26 <RC
#m# MOAR: OK
#j#  JVM: OK

File: U/URL_shortener
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/URL_shortener
#t# skiptest
#c# 2020-01-05 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# ($urlfile.IO.e and $urlfile.IO.f and $urlfile.IO.s) 
#n# can be written 
#n# ( $urlfile.IO ~~ :e & :f & :s ) or ( $urlfile.IO ~~ (:e :f :s) .all )

File: U/UTF-8_encode_and_decode
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/UTF-8_encode_and_decode
#c# 2017-03-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: U/Ulam_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Ulam_numbers
#c# 2020-12-01 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/Ulam_spiral_for_primes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ulam_spiral_%28for_primes%29
#c# 2015-10-16 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: ulam_spiral.dat

File: U/Unbias_a_random_generator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unbias_a_random_generator
#c# 2016-01-06 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# different results when initiated from command line vs cron

File: U/Undefined_values
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Undefined_values
#c# 2019-09-21 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/Unicode_strings
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unicode_strings
#c# 2016-05-15 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# downgraded Unicode names to ASCII

File: U/Unicode_variable_names
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unicode_variable_names
#c# 2015-12-06 <RC, 2018-06-25 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2018-08-03 the 2nd 'sub' not working for JVM, dropping for now

File: U/Unique_characters
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Unique_characters
#c# 2021-05-05 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: U/Unique_characters_in_each_string
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Unique_characters_in_each_string
#c# 2021-05-09 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/Universal_Turing_machine
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Universal_Turing_machine
#c# 2018-04-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/Universal_Turing_machine.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Universal_Turing_machine
#c# 2016-04-23 <RC
#m# MOAR: BROKEN
#j#  JVM: BROKEN
#n# waiting for Godot, I mean Goto

File: U/Unix_ls
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unix/ls
#c# 2015-12-06 <RC
#m# MOAR: OK
#j#  JVM: OK

File: U/Unprimeable_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unprimeable_numbers
#c# 2019-12-01 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: U/Unprimeable_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Unprimeable_numbers
#c# 2019-12-01 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# for JVM: native is-prime, no concurrency

File: U/Untouchable_numbers
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Untouchable_numbers
#c# 2021-02-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# slow, so limited the number of values calculated (even with Perl/ntheory functions)
#n# need to update RC with future-proofed version

File: U/Untrusted_environment
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Untrusted_environment
#t# nocode
#c# 2018-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/Update_a_configuration_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Update_a_configuration_file
#c# 2016-11-29 <RC
#m# MOAR: OK
#j#  JVM: OK
#r# RC prep: cp ref/config.base run/config.cfg
#f# RC file: config.cfg
#n# out-of-date relative to RC, but functionally the same

File: U/Update_a_configuration_file.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Update_a_configuration_file
#c# 2016-05-20 <RC
#t# interactive
#m# MOAR: OK
#j#  JVM: OK

File: U/Use_another_language_to_call_a_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Use_another_language_to_call_a_function
#t# skiptest
#c# 2020-02-03 <RC, 2020-02-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/User_defined_pipe_and_redirection_operators
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/User_defined_pipe_and_redirection_operators
#c# 2018-05-08 <RC
#m# MOAR: OK
#j# JVM:  OK

File: U/User_defined_pipe_and_redirection_operators.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/User_defined_pipe_and_redirection_operators
#c# 2017-06-04 <RC
#m# MOAR: OK
#j#  JVM: OK

File: U/User_input_Text
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/User_input/Text
#c# 2016-01-31 <RC
#m# MOAR: OK
#j#  JVM: OK
#=# RC pipe: ad astra, per asperagus\n1024

File: U/Using_a_speech_engine_to_highlight_words
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Using_a_speech_engine_to_highlight_words
#t# skiptest
#c# 2020-12-15 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# no 'espeak'

File: V/VList
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/VList
#c# 2020-01-14 <RC, 2020-02-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: V/Validate_International_Securities_Identification_Number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Validate_International_Securities_Identification_Number
#c# 2016-08-07 <RC, 2017-02-08 <RC, 2019-02-26 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# migrated from 'Calculate_International_Securities_Identification_Number'

File: V/Validate_International_Securities_Identification_Number.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Validate_International_Securities_Identification_Number
#c# 2016-08-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vampire_number
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vampire_number
#c# 2016-09-07 <RC, 2018-11-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# thundergnat's additions do more (25 vs 8) in same time

File: V/Vampire_number.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Vampire_number
#c# 2016-09-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vampire_number.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vampire_number
#c# 2016-09-07 <RC, 2018-11-10 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# thundergnat's additions do more (25 vs 8) in same time

File: V/Van_Eck_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Van_Eck_sequence
#c# 2019-07-14 <RC
#m# MOAR: OK
#j# JVM:  OK

File: V/Van_der_Corput_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Van_der_Corput_sequence
#c# 2015-11-01 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Variable-length_quantity
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Variable-length_quantity
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Variable_size_Get
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Variable_size/Get
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Variadic_function
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Variadic_function
#c# 2015-11-01 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vector
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vector
#c# 2016-03-19 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vector_products
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vector_products
#c# 2015-11-24 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# note use of 'MULTIPLICATION SIGN' for simple product, 'VECTOR OR CROSS PRODUCT' for vector product (via infix sub)

File: V/Verhoeff_algorithm
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Verhoeff_algorithm
#c# 2021-08-28 <RC
#m# MOAR: OK
#j# JVM:  OK

File: V/Verify_distribution_uniformity_Chi-squared_test
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Verify_distribution_uniformity/Chi-squared_test
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Verify_distribution_uniformity_Naive
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Verify_distribution_uniformity/Naive
#c# 2016-06-12 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch?

File: V/Vibrating_rectangles-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vibrating_rectangles
#t# interactive
#c# 2018-08-11 <RC, 2018-09-04 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# ANSI graphics

File: V/Vibrating_rectangles-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vibrating_rectangles
#t# gui
#c# 2018-10-27 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: V/Vibrating_rectangles.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Vibrating_rectangles
#t# interactive
#c# 2018-08-11 <RC
#m# MOAR: OK
#j# JVM:  OK

File: V/Video_display_modes
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Video_display_modes
#t# gui
#c# 2019-01-21 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# tested on Ubuntu 18

File: V/Vidir
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Vidir
#t# interactive
#c# 2020-06-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN OK
#n# 2021-03-23 $*DISTRO changed: from 'Darwin' to 'macosx'

File: V/Vigen%C3%A8re_cipher
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vigen%C3%A8re_cipher
#c# 2015-11-14 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vigen%C3%A8re_cipher_Cryptanalysis
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vigenère_cipher/Cryptanalysis
#c# 2019-12-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# anything defined in terms of a constant can also be a constant:
#n#   %English-letter-freq => @alphabet => %values-numbers => %values-letters

File: V/Vigen%C3%A8re_cipher_Cryptanalysis.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vigenère_cipher/Cryptanalysis
#c# 2019-12-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# anything defined in terms of a constant can also be a constant:
#n#   %English-letter-freq => @alphabet => %values-numbers => %values-letters

File: V/Visualize_a_tree
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Visualize_a_tree
#c# 2015-12-16 <RC
#m# MOAR: OK
#j#  JVM: OK

File: V/Vogel%27s_approximation_method
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Vogel%27s_approximation_method
#c# 2018-10-07 <RC, 2019-05-16 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2018-10-10 due to randomized hash keys, output switches between two possibilities, accept either 
#n# amend marked line assigning '@d' to always get optimal solution (or leave off 'reverse' to get other)

File: V/Voronoi_diagram
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Voronoi_diagram
#c# 2017-10-11 <RC, 2018-10-15 >RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: voronoi-Euclidean-perl6.png
#n# no speed diff with .race applied to x/y together or just x

File: V/Voronoi_diagram.0
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Voronoi_diagram
#c# 2017-10-11 <RC, 2018-04-12 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: voronoi-Euclidean-perl6.png
#n# for JVM, ecosystem...
#n# cute, but bad for automated testing; does it actually produce output?

File: V/Voronoi_diagram.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Voronoi_diagram
#c# 2017-10-07 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: voronoi.png

File: W/Walk_a_directory_Non-recursively
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Walk_a_directory/Non-recursively
#c# 2015-12-09 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# 'slurp-rest' deprecated, plain 'slurp' works fine

File: W/Walk_a_directory_Recursively
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Walk_a_directory/Recursively
#c# 2015-12-10 <RC, 2018-05-17 <RC
#m# MOAR: OK
#j#  JVM: OK

File: W/War_card_game
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/War_card_game
#t# skiptest
#i# interactive
#c# 2021-01-12 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: W/Water_collected_between_towers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Water_collected_between_towers
#c# 2016-12-07 <RC
#m# MOAR: OK
#j#  JVM: OK

File: W/Waveform_analysis_Doh_ray_me
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Waveform_analysis/Doh_ray_me
#c# 2020-07-25 <RC, 2020-07-25 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: Method 'read-uint32' not found for invocant of class 'Blob'

File: W/Web_scraping
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Web_scraping
#c# 2016-05-12 <>RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# for JVM: VMArray representation does not implement bind_pos_native
#n# ultimately has to do with SSL, which involves NativeCall
#n# old Naval time server was failing...

File: W/Web_scraping.0
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Web_scraping
#c# 2021-03-01 <RC
#m# MOAR: BROKEN OK
#j# JVM:  BROKEN OK
#n# current on RC

File: W/Web_scraping.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Web_scraping
#c# 2016-05-12 <>RC
#m# MOAR: OK
#j#  JVM: BROKEN

File: W/Weird_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Weird_numbers
#c# 2019-03-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Welch%27s_t-test-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Welch%27s_t-test
#c# 2017-09-09 <RC, 2018-03-12 <RC, 2020-01-11 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# down-graded Unicode variable name to get JVM working

File: W/Welch%27s_t-test-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Welch%27s_t-test
#c# 2019-01-02 <RC, 2019-10-16 >RC, 2020-01-11 >RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# '×' seems like a natural upgrade, '÷' less so; maybe just have to encounter it more often...

File: W/Wieferich_primes
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Weiferich_primes
#c# 2021-05-30 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Wilson_primes_of_order_n-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Wilson_primes_of_order_n
#c# 2021-07-28 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# intial version

File: W/Wilson_primes_of_order_n-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Wilson_primes_of_order_n
#c# 2021-07-28 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# this is the version currently on RC

File: W/Window_creation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Window_creation
#t# gui
#c# 2019-11-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# placement is funky

File: W/Window_creation_X11
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Window_creation/X11
#t# gui
#c# 2018-04-30 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# tested on Ubuntu 18

File: W/Window_management
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Window_management
#t# gui
#c# 2018-12-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: W/Wireworld
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Wireworld
#c# 2018-02-15 <RC
#m# MOAR: OK
#j# JVM:  BROKEN  UnwindException

File: W/Word_break_problem
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Word_break_problem
#c# 2017-05-12 <RC
#m# MOAR: OK
#j#  JVM: OK

File: W/Word_frequency
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Word_frequency
#c# 2017-09-02 <RC, 2020-08-26 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# .race provides no benefit here
#n# 2020-07-14 one edit behind (thundergnat++ 'Demonstrate[s] general use capability', with Russian, Greek)
#n# 2020-10-06 another edit behind (thundergnat++ 'Add regex matching comparison')

File: W/Word_frequency.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Word_count
#c# 2017-08-16 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Word_ladder
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Word_ladder
#c# 2021-06-05 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Word_search
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Word_search
#c# 2020-02-07 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch

File: W/Word_wheel-1
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Word_wheel
#c# 2020-07-04 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Word_wheel-2
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Word_wheel
#c# 2020-07-04 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

File: W/Word_wrap
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Word_wrap
#c# 2015-12-20 <RC
#m# MOAR: OK
#j#  JVM: OK

File: W/Words_containing_%22the%22_substring
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Words_containing_%22the%22_substring
#c# 2020-12-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Words_from_neighbour_ones
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Words_from_neighbour_ones
#c# 2021-02-06 <RC
#m# MOAR: OK
#j# JVM:  OK

File: W/World_Cup_group_stage
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/World_Cup_group_stage
#c# 2016-01-06 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: W/Write_entire_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_entire_file
#c# 2016-01-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: write_entire_file.dat

File: W/Write_float_arrays_to_a_text_file
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_float_arrays_to_a_text_file
#c# 2015-12-12 <RC, 2019-10-28 >RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: sqrt.dat
#n# 2nd part got a complete re-write, see '-2' variant for original

File: W/Write_float_arrays_to_a_text_file-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_float_arrays_to_a_text_file
#c# 2019-10-28 NOT ON RC
#m# MOAR: OK
#j#  JVM: OK
#n# this was the 2nd part of the original task
#n# strays pretty far from task spec, but love using 'base' for it's output precision arg.

File: W/Write_language_name_in_3D_ASCII
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_language_name_in_3D_ASCII
#c# 2018-03-21 <RC, 2018-03-22 >RC
#m# MOAR: OK
#j# JVM:  OK

File: W/Write_to_Windows_event_log
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Write_to_Windows_event_log
#t# skiptest
#c# 2020-02-03 <RC
#m# MOAR: OK
#j# JVM:  OK

File: X/XML_DOM_serialization
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/XML/DOM_serialization
#c# 2018-06-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# for JVM: ecosystem...

File: X/XML_Input
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/XML/Input
#c# 2016-05-18 <RC, 2018-03-13 >RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# 2019-04-23 updated XML, and now HTML entity is *not* converted on output

File: X/XML_Output
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/XML/Output
#c# 2018-06-10 <RC
#m# MOAR: OK
#j# JVM:  OK

File: X/XML_Validation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/XML_Validation
#c# 2019-10-09 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2020-10-12 Pod::To::Markdown fails tests, Zef-install-all uses 'force-install'

File: X/XML_XPath
#!/usr/bin/env perl6 do-not-check
#u# http://rosettacode.org/wiki/XML/XPath
#c# 2018-03-11 <RC
#m# MOAR: BROKEN
#j# JVM:  BROKEN
#n# JVM runs forever, so leave BEGIN/die in
#n# 2020-10-04 runs forever, what changed?

File: X/XXXX_redacted
#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/XXXX_redacted
#c# 2020-03-29 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# porting to P5 revealed I was one edge-case behind...

File: X/XXXX_redacted.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/XXXX_redacted
#c# 2020-03-29 <RC
#m# MOAR: OK
#j# JVM:  OK

File: X/Xiaolin_Wu%27s_line_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Xiaolin_Wu's_line_algorithm
#c# 2015-10-14 <>RC, 2018-03-28 >RC
#m# MOAR: OK
#j#  JVM: OK

File: Y/Y_combinator
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Y_combinator
#c# 2016-09-30 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Y/Y_combinator.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Y_combinator
#c# 2015-11-02 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Y/Yahoo__search_interface
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Yahoo!_search_interface
#t# skiptest
#c# 2019-11-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# 2020-02-22 stopped working a few days back (https?)

File: Y/Yellowstone_sequence
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Yellowstone_sequence
#c# 2020-02-16 <RC
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: yellowstone-sequence.svg

File: Y/Yin_and_yang
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Yin_and_yang
#c# 2015-10-18 <RC, 2018-04-19 <RC
#t# graphical
#m# MOAR: OK
#j# JVM:  OK
#f# RC file: yin_and_yang.svg

File: Y/Yin_and_yang.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Yin_and_yang
#c# 2015-10-18 <RC
#m# MOAR: OK
#j#  JVM: OK
#f# RC file: yin_and_yang.svg

File: Z/Zebra_puzzle
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zebra_puzzle
#c# 2018-11-22 <RC, 2018-12-12 <RC
#m# MOAR: OK
#j# JVM:  OK

File: Z/Zebra_puzzle.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Zebra_puzzle
#c# 2018-11-22 <RC
#m# MOAR: OK
#j# JVM:  OK

File: Z/Zeckendorf_arithmetic
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zeckendorf_arithmetic
#c# 2018-03-20 <RC, 2019-04-04 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# fixed add/subtract/divide

File: Z/Zeckendorf_number_representation
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zeckendorf_number_representation
#c# 2016-01-05 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: Z/Zero_to_the_zero_power
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zero_to_the_zero_power
#c# 2015-10-18 <RC, 2016-12-09 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Z/Zero_to_the_zero_power.1
#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Zero_to_the_zero_power
#c# 2015-10-18 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Z/Zhang-Suen_thinning_algorithm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zhang-Suen_thinning_algorithm
#c# 2015-12-20 <RC, 2016-12-19 >RC, 2018-09-18 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# did in-line data for RC version

File: Z/Zig-zag_matrix-1
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zig-zag_matrix
#c# 2016-01-18 <>RC
#m# MOAR: OK
#j#  JVM: OK

File: Z/Zig-zag_matrix-2
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zig-zag_matrix
#c# 2016-12-13 <RC
#m# MOAR: OK
#j#  JVM: OK

File: Z/Zumkeller_numbers
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zumkeller_numbers
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# */×: replacing '* * 2' with '* × 2' is clarifying (for humans)

File: Z/Zumkeller_numbers.jvm
#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Zumkeller_numbers
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK


