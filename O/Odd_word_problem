#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Odd_word_problem
#c# 2016-02-09 <RC
#m# MOAR: OK
#j#  JVM: OK

use lib 'libtest'; # DH work-around for problems with JVM and Test::Output

my &testcode = sub {

my $fh = open "ref/odd-word.txt", :r;
my &in = { $fh.getc // last }

loop {
    ew(in);
    ow(in).print;
}

multi ew ($_ where /\w/) { .print; ew(in) }
multi ew ($_)            { .print; next when "\n" }

multi ow ($_ where /\w/) { ow(in) x .print}          # see note below
multi ow ($_)            { $_ }

}

use Test;
use Test::Output;
print my $result = output-from(&testcode);
is $result, "we era not ni Kansas eromyna\n";

# clever trick [too much so?] here with the x operator:
# it evaluates both its arguments in order, but in this case only returns
# the left argument because the right one is always 1 (True). You can think
# of it as a reversed C-style comma operator.
