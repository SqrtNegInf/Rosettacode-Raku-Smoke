#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Order_two_numerical_lists
#c# 2016-01-22 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 now stable?
#n# 2021-10-04 wow, been ignoring this for a year now...  Try testing new results, see what happens. (2021-10-22: shift again)

# This is already a built-in comparison operator.

srand 123456;

my @a = <1 2 4>;
my @b = <1 2 4>;
my @res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

@a = <1 2 4>;
@b = <1 2>;
@res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

@a = <1 2>;
@b = <1 2 4>;
@res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);

for 1..10 {
    my @a = flat (^100).roll((2..3).pick);
    my @b = flat @a.map: { Bool.pick ?? $_ !! (^100).roll((0..2).pick) }
    @res.push: @a ~ " before " ~ @b ~ " = " ~ ~(@a before @b);
}

.say for @res;

my $moar = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
27 57 44 before 57 67 = True
94 71 64 before 94 71 64 = False
40 33 before 40 1 22 = False
32 59 2 before 32 2 = False
40 60 64 before 22 78 43 = False
4 26 before 4 71 60 = True
76 21 66 before 76 84 75 66 = True
73 73 22 before 73 54 30 48 = False
15 87 59 before 15 87 87 4 = True
81 66 before 66 = False
END

my $moarx = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
84 70 67 before 98 44 70 67 = True
15 60 79 before 94 79 = True
70 54 93 before 85 93 37 = True
59 2 before 59 = False
6 40 before 88 65 22 = True
43 40 50 before 43 40 50 = False
71 60 85 before 71 60 85 = False
18 99 before 18 = False
22 36 80 before 30 36 36 = True
87 59 before 87 59 = False
END

my $jvm = qq:to/END/;
1 2 4 before 1 2 4 = False
1 2 4 before 1 2 = False
1 2 before 1 2 4 = True
19 65 56 before 19 27 56 = False
83 8 5 before 83 = False
34 10 before 57 = True
22 24 50 before 73 88 = True
99 59 before 99 59 = False
2 47 71 before 2 39 48 71 = False
98 92 33 before 92 33 = False
55 22 77 before 22 77 = False
97 32 before 59 8 32 = False
93 50 before 93 = False
END

use Test;
if $*VM ~~ /jvm/ {
is @res.join("\n"), chomp $jvm;
} else {
is @res.join("\n"), chomp $moar;
}
