#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Own_digits_power_sum
#c# 2021-10-27 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 3,7:   615.42s user   10.73s system 531% cpu    1:57 total
#n# 3,8:  7538.45s user  236.54s system 527% cpu   24:34 total
#n# 3,9: 56516.67s user 1703.93s system 525% cpu 3:04:33 total (killed before completion)

my @res;

(3..7).map: -> $p {
    my %pow = (^10).map: { $_ => $_ ** $p };
    my $start = 10 ** ($p - 1);
    my $end   = 10 ** $p;
    my @temp;
    for ^9 -> $i {
        my $str = sprintf "%0*d", $p, $i x $p;
        ([X] ($i..9) xx $p).race.map: {
            next unless [<=] $_;
            my $sum = %pow{$_}.sum;
            next if $sum < $start;
            next if $sum > $end;
            @temp.push: $sum if $sum.comb.Bag eqv $_Â».Str.Bag
        }
    }
    @res.push: $_ for unique sort @temp;
}

.say for @res;

my $ref = q:to/END/;
153
370
371
407
1634
8208
9474
54748
92727
93084
548834
1741725
4210818
9800817
9926315
END

#24678050
#24678051
#88593477

use Test;
is @res.join("\n"), chomp $ref;
