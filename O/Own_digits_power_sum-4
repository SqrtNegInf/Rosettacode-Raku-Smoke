#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Own_digits_power_sum
#c# 2021-10-27 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# reasonably fast, scales well
#n# 3,7:   13.27s user 0.25s system 104% cpu    12.97 total
#n# 3,8:   32.48s user 0.36s system 101% cpu    32.37 total
#n# 3,9:   81.02s user 0.66s system 100% cpu  1:21.34 total
#n# 3,9:   89.61s user 0.66s system 100% cpu  1:29.76 total Bag
#n# 3,10: 188.27s user 1.70s system  99% cpu  3:11.19 total
#n# 3,11: 439.17s user 2.84s system  99% cpu  7:22.60 total 
#n# 3,12: 925.80s user 7.14s system  99% cpu 15:35.98 total

#n# Used code from 'Combinations with repetitions' task, the one-liner form *very* slow (cf -1 version)
#n# 'race' does not help here

proto combs_with_rep (UInt, @ ) { * }
multi combs_with_rep (0,    @ ) { () }
multi combs_with_rep ($,    []) { () }
multi combs_with_rep (1,    @a) { map { $_, }, @a }
multi combs_with_rep ($n, [$head, *@tail]) {
    |combs_with_rep($n - 1, ($head, |@tail)).map({ $head, |@_ }),
    |combs_with_rep($n, @tail);
}

say my $result = sort gather {
    for 3..9 -> $d {
        for combs_with_rep($d, [^10]) -> @digits {
            #.take if @digits>>.Str.Bag eqv .comb.Bag given sum @digits X** $d; # maybe a hair slower
            .take if $d == .comb.elems and @digits.join == .comb.sort.join given sum @digits X** $d;
        }
    }
}

my $ref = '153 370 371 407 1634 8208 9474 54748 92727 93084 548834 1741725 4210818 9800817 9926315 24678050 24678051 88593477 146511208 472335975 534494836 912985153';

use Test;
is $result, $ref;
