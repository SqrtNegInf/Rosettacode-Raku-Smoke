#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fibonacci_n-step_number_sequences
#c# 2016-01-23 <>RC, 2020-08-30 >RC, 2021-03-25 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A000045 Fibonacci
#n# OEIS:A000073 tribonacci
#n# OEIS:A000078 tetranacci
#n# OEIS:A001591 pentanacci
#n# OEIS:A000383 hexanacci
#n# OEIS:A122189 heptanacci
#n# OEIS:A079262 octanacci
#n# OEIS:A104144 nonanacci
#n# OEIS:A122265 decanacci
#n# OEIS:A168082 11-step
#n# OEIS:A168083 12-step
#n# OEIS:A000032 Lucas

my @res;

sub nacci ( $s = 2, :@start = (1,) ) {
    my @seq = |@start, { state $n = +@start; @seq[ ($n - $s .. $n++ - 1).grep: * >= 0 ].sum } â€¦ *;
}

@res.push: "{$_.fmt: '%2d'}-nacci: " ~ nacci($_)[^20] for 2..12 ;
@res.push: "Lucas: " ~ nacci(:start(2,1))[^20];

.say for @res;

my $ref = qq:to/END/;
 2-nacci: 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765
 3-nacci: 1 1 2 4 7 13 24 44 81 149 274 504 927 1705 3136 5768 10609 19513 35890 66012
 4-nacci: 1 1 2 4 8 15 29 56 108 208 401 773 1490 2872 5536 10671 20569 39648 76424 147312
 5-nacci: 1 1 2 4 8 16 31 61 120 236 464 912 1793 3525 6930 13624 26784 52656 103519 203513
 6-nacci: 1 1 2 4 8 16 32 63 125 248 492 976 1936 3840 7617 15109 29970 59448 117920 233904
 7-nacci: 1 1 2 4 8 16 32 64 127 253 504 1004 2000 3984 7936 15808 31489 62725 124946 248888
 8-nacci: 1 1 2 4 8 16 32 64 128 255 509 1016 2028 4048 8080 16128 32192 64256 128257 256005
 9-nacci: 1 1 2 4 8 16 32 64 128 256 511 1021 2040 4076 8144 16272 32512 64960 129792 259328
10-nacci: 1 1 2 4 8 16 32 64 128 256 512 1023 2045 4088 8172 16336 32656 65280 130496 260864
11-nacci: 1 1 2 4 8 16 32 64 128 256 512 1024 2047 4093 8184 16364 32720 65424 130816 261568
12-nacci: 1 1 2 4 8 16 32 64 128 256 512 1024 2048 4095 8189 16376 32748 65488 130960 261888
Lucas: 2 1 3 4 7 11 18 29 47 76 123 199 322 521 843 1364 2207 3571 5778 9349
END

use Test;
is @res.join("\n"), chomp $ref;

#`{{ previous version:

use MONKEY-SEE-NO-EVAL;

sub fibo ($n) {
    constant @starters = 1,1,2,4 ... *;
    nacci @starters[^$n];
}

sub nacci (*@starter) {
    EVAL "|@starter, { join '+', '*' xx @starter } ... *";
    #"|@starter, { join '+', '*' xx @starter } ... *".EVAL; # deprecated?
}

my @res; 
for 2..10 -> $n { @res.push: fibo($n)[^20] }
.say for @res; 
}}
