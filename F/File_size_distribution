#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/File_size_distribution
#c# 2017-05-31 <RC, 2018-05-17 <RC, 2018-09-30 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2023-01-26 test own 'ref' directory (it does change somtimes though...)

sub MAIN($dir = 'ref') {
    my @res;
    sub log10 (Int $s) { $s ?? $s.log(10).Int !! 0 }
    my %fsize;
    my @dirs = $dir.IO;
    while @dirs {
        for @dirs.pop.dir -> $path {
            %fsize{$path.s.&log10}++ if $path.f;
            @dirs.push: $path if $path.d and $path.r
        }
    }
    my $max = %fsize.values.max;
    my $bar-size = 80;
    @res.push: "File size distribution in bytes for directory: $dir\n";
    for 0 .. %fsize.keys.max {
          @res.push: sprintf( "# Files @ %5sb %8s: ", $_ ?? "10e{$_-1}" !! 0, %fsize{$_} // 0 ) ~  # DH change
              histogram( $max, %fsize{$_} // 0, $bar-size )
    }
    @res.push: %fsize.values.sum~ ' total files.';

sub histogram ($max, $value, $width = 60) {
    my @blocks = <| ▏ ▎ ▍ ▌ ▋ ▊ ▉ █>;
    my $scaled = ($value × $width / $max).Int;
    my ($end, $bar) = $scaled.polymod(8);
#say "v: $value max: $max sc: $scaled end: $end bar: $bar";
    (@blocks[8] x $bar × 8) ~ (@blocks[$end] if $end); # ~ "\n"
}

.say for @res;

my $mac-pro = qq:to/END/;
File size distribution in bytes for directory: ref

# Files @     0b        1: ▏
# Files @  10e0b       30: ████████████████████████████████████████▊
# Files @  10e1b       31: ████████████████████████████████████████▉
# Files @  10e2b       52: ████████████████████████████████████████████████████████████████████████████████
# Files @  10e3b       45: ████████████████████████████████████████████████████████████████▋
# Files @  10e4b       37: ████████████████████████████████████████████████████████
# Files @  10e5b        6: ████████▏
202 total files.
END

my $mac-pro-old = qq:to/END/;
File size distribution in bytes for directory: ref

# Files @     0b        1: ▏
# Files @  10e0b       30: ████████████████████████████████████████▉
# Files @  10e1b       31: ████████████████████████████████████████████████
# Files @  10e2b       51: ████████████████████████████████████████████████████████████████████████████████
# Files @  10e3b       45: ████████████████████████████████████████████████████████████████▊
# Files @  10e4b       36: ████████████████████████████████████████████████████████
# Files @  10e5b        6: ████████▏
200 total files.
END

my $imac = qq:to/END/;
File size distribution in bytes for directory: ref

# Files @     0b        1: ▏
# Files @  10e0b       30: ████████████████████████████████████████▊
# Files @  10e1b       31: ████████████████████████████████████████▉
# Files @  10e2b       52: ████████████████████████████████████████████████████████████████████████████████
# Files @  10e3b       45: ████████████████████████████████████████████████████████████████▋
# Files @  10e4b       36: ████████████████████████████████████████████████▉
# Files @  10e5b        6: ████████▏
201 total files.
END

my $ubuntu = qq:to/END/;
File size distribution in bytes for directory: ref

# Files @     0b        1: ▏
# Files @  10e0b       30: ████████████████████████████████████████▉
# Files @  10e1b       31: ████████████████████████████████████████████████
# Files @  10e2b       51: ████████████████████████████████████████████████████████████████████████████████
# Files @  10e3b       45: ████████████████████████████████████████████████████████████████▊
# Files @  10e4b       36: ████████████████████████████████████████████████████████
# Files @  10e5b        6: ████████▏
200 total files.
END

use Test;
is @res.join("\n"), chomp qx/uname/ ~~ /Linux/ ?? $ubuntu !! (qx/uname -a/ ~~ /iMac/) ?? $imac !! $mac-pro;
}
