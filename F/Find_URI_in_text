#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Find_URI_in_text
#c# 2018-04-02 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# updated module, 1st 'stop' entry improved
#n# 2022-01-30
#n#   with JVM 2021.12, no longer matches '_(camera_designer).'
#n#   is this module defunct?

use IETF::RFC_Grammar::URI;

my @res.push: q:to/EOF/.match(/ <IETF::RFC_Grammar::URI::absolute-URI> /, :g).list.join("\n");
    this URI contains an illegal character, parentheses and a misplaced full stop:
    http://en.wikipedia.org/wiki/Erich_Kästner_(camera_designer). (which is handled by http://mediawiki.org/).
    and another one just to confuse the parser: http://en.wikipedia.org/wiki/-)
    ")" is handled the wrong way by the mediawiki parser.
    ftp://domain.name/path(balanced_brackets)/foo.html
    ftp://domain.name/path(balanced_brackets)/ending.in.dot.
    ftp://domain.name/path(unbalanced_brackets/ending.in.dot.
    leading junk ftp://domain.name/path/embedded?punct/uation.
    leading junk ftp://domain.name/dangling_close_paren)
    EOF

@res.push: $/[*-1].gist;
@res.push: "We matched $/[*-1], which is a $/[*-1].^name() at position $/[*-1].from() to $/[*-1].to()";

.say for @res; 

#Like most of the solutions here it does not comply to IRI but only to URI:

my $moar = qq:to/END/;
stop:
http://en.wikipedia.org/wiki/Erich_Kästner_(camera_designer).
http://mediawiki.org/).
parser:
http://en.wikipedia.org/wiki/-)
ftp://domain.name/path(balanced_brackets)/foo.html
ftp://domain.name/path(balanced_brackets)/ending.in.dot.
ftp://domain.name/path(unbalanced_brackets/ending.in.dot.
ftp://domain.name/path/embedded
ftp://domain.name/dangling_close_paren)
｢ftp://domain.name/dangling_close_paren)｣
 IETF::RFC_Grammar::URI::absolute-URI => ｢ftp://domain.name/dangling_close_paren)｣
  scheme => ｢ftp｣
We matched ftp://domain.name/dangling_close_paren), which is a Match at position 554 to 593
END

my $jvm = qq:to/END/;
stop:
http://en.wikipedia.org/wiki/Erich_K
http://mediawiki.org/).
parser:
http://en.wikipedia.org/wiki/-)
ftp://domain.name/path(balanced_brackets)/foo.html
ftp://domain.name/path(balanced_brackets)/ending.in.dot.
ftp://domain.name/path(unbalanced_brackets/ending.in.dot.
ftp://domain.name/path/embedded
ftp://domain.name/dangling_close_paren)
｢ftp://domain.name/dangling_close_paren)｣
 IETF::RFC_Grammar::URI::absolute-URI => ｢ftp://domain.name/dangling_close_paren)｣
  scheme => ｢ftp｣
We matched ftp://domain.name/dangling_close_paren), which is a Match at position 554 to 593
END

#The last lines show that we get Match objects back that we can query to get all kinds of information.
#We even get the information what subrules matched, and since these are also Match objects we can obtain
#their match position in the text.

use Test;
#is @res.join("\n"), chomp $ref;
is @res.join("\n"), chomp $*VM ~~ /jvm/ ?? $jvm !! $moar;
