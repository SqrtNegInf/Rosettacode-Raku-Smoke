#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Fermat_numbers
#c# 2019-08-20 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# must wrap the 'gather' in brackets to get array return (or suffix with .Array)

my @res;

sub factor($n is copy) {
    $n == 1 ?? 1 !!
    [gather {
        $n /= take 2 while $n %% 2;
        $n /= take 3 while $n %% 3;
        loop (my $p = 5; $p×$p <= $n; $p+=2) {
            $n /= take $p while $n %% $p;
        }
        take $n unless $n == 1;
    }]
}

my @Fermats = (^Inf).map: 2 ** 2 ** * + 1;

my $sub = '₀';
@res.push: "First 9 Fermat numbers:";
@res.push: sprintf "F%s = %s", $sub++, $_ for @Fermats[^10];

$sub = '₀';
@res.push: "\nFactors of first few Fermat numbers:";
for @Fermats[^6].map( {"$_".&factor} ) -> $f {
   @res.push: sprintf "Factors of F%s: %s %s", $sub++, $f.join(" \x00d7 "), ($f.elems == 1 ?? '- prime' !! '')
}

.say for @res;

my $ref = q:to/END/;
First 9 Fermat numbers:
F₀ = 3
F₁ = 5
F₂ = 17
F₃ = 257
F₄ = 65537
F₅ = 4294967297
F₆ = 18446744073709551617
F₇ = 340282366920938463463374607431768211457
F₈ = 115792089237316195423570985008687907853269984665640564039457584007913129639937
F₉ = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084097

Factors of first few Fermat numbers:
Factors of F₀: 3 - prime
Factors of F₁: 5 - prime
Factors of F₂: 17 - prime
Factors of F₃: 257 - prime
Factors of F₄: 65537 - prime
Factors of F₅: 641 × 6700417 
END
#Factors of F₆: 274177 67280421310721 
#Factors of F₇: 59649589127497217 5704689200685129054721 
#Factors of F₈: 1238926361552897 93461639715357977769163558199606896584051237541638188580280321 

use Test;
is @res.join("\n"), chomp $ref;
