#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Giuga_numbers
#c# 2022-07-xx NOT ON RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A007850 Giuga numbers: composite numbers n such that p divides n/p - 1 for every prime divisor p of n.
#n# .hyper is no help

use Prime::Factor;

# thundergnat++
my @giuga = (1..∞).map(* × 6).grep: -> $n { $n.&prime-factors.map({($n/$_ - 1) %% $_}).all } # quickest

# ha! didn't need the lazy/gather/take...
#my @giuga = (6, 12 … ∞).grep: -> $n { $n.&prime-factors.map({($n/$_ - 1) %% $_}).all }

#my @giuga = lazy gather for (4, 6 … ∞).grep(!*.is-prime) -> $n { take $n if $n.&prime-factors.map({($n/$_ - 1) %% $_}).all }  # faster
#my @giuga = lazy gather for 4…∞ -> $n { take $n if $n.grep({ !.is-prime }) and $n.&prime-factors.map({($n/$_ - 1) %% $_}).all }

.say for @giuga[^4];

use Test;
is @giuga[^4].join(' '), '30 858 1722 66198';
