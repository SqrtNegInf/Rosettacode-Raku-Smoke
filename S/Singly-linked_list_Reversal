#!/usr/bin/env raku
#u# https://www.rosettacode.org/wiki/Singly-linked_list/Reversal
#c# 2024-02-22 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

class Cell { has ($.value, $.next) is rw;

   method reverse {
      my ($list, $prev) = self, Nil;
      while $list.defined {
         my $next = $list.next;
         $list.next = $prev;
         ($list, $prev) = ($next, $list)
      }
      return $prev;
   }

   method gist {
      my $cell = self;
      return ( gather while $cell.defined {
         take $cell.value andthen $cell = $cell.next;
      } ).Str
   }
}

sub cons ($value, $next = Nil) { Cell.new(:$value, :$next) }

my $list = cons 10, (cons 20, (cons 30, (cons 40, Nil)));

$list = $list.reverse;
@res.push: $list.gist;
$list = $list.reverse;
@res.push: $list.gist;

.say for @res;

my $ref = q:to/END/;
40 30 20 10
10 20 30 40
END

use Test;
is @res.join("\n"), chomp $ref;
