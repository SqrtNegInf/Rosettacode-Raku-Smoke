#!/usr/bin/env perl6
#u# https://rosettacode.org/wiki/Sisyphus_sequence
#c# 2023-0x-xx NOT ON RC
#n# direct from Perl, will be slower but by how much? [not that much!]
#n# 3..7: 1586.50s user 34.83s system 104% cpu 25:48.86

my @res;

use Lingua::EN::Numbers;
use ntheory:from<Perl5> qw[next_prime];

my ($i, $j, $p, @S, %H) = (3, 5, 1, 1);
my @v = map { 10**$_ }, $i..$j;

repeat {
   @S.push: @S[*-1] %% 2 ?? @S[*-1] div 2 !! @S[*-1] + ($p = next_prime($p));
   (%H{+@S}{'value'} = @S[*-1] and %H{+@S}{'prime'} = $p) if @S == @v.any;      # [or] { 10**$_ == @S }, $i..$j;
} until 10**$j == @S;

@res.push: 'The first 100 members of the Sisyphus sequence are:';
@res.push: @S[^100].batch(10)».fmt('%4d').join("\n");
@res.push: '';

push @res, sprintf "%12s member is: %10s with prime: %10s", ($_, %H{$_}{'value'}, %H{$_}{'prime'})».&comma
    for @v; #map { 10**$_ }, $i..$j;

say my $result = join "\n", @res;

my $ref = q:to/END/;
The first 100 members of the Sisyphus sequence are:
   1    3    6    3    8    4    2    1    8    4
   2    1   12    6    3   16    8    4    2    1
  18    9   28   14    7   30   15   44   22   11
  42   21   58   29   70   35   78   39   86   43
  96   48   24   12    6    3   62   31   92   46
  23   90   45  116   58   29  102   51  130   65
 148   74   37  126   63  160   80   40   20   10
   5  106   53  156   78   39  146   73  182   91
 204  102   51  178   89  220  110   55  192   96
  48   24   12    6    3  142   71  220  110   55

       1,000 member is:        990 with prime:      2,273
      10,000 member is:     24,975 with prime:     30,713
     100,000 member is:    265,781 with prime:    392,111
END
#  1,000,000 member is:  8,820,834 with prime:  4,761,697
# 10,000,000 member is: 41,369,713 with prime: 55,900,829

use Test;
is @res.join("\n"), chomp $ref;

=finish

=={{header|Raku}}==
{{libheader|ntheory}}
<syntaxhighlight lang="perl" line>
</syntaxhighlight>
{{out}}
<pre>
</pre>
