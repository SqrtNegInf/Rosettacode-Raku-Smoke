#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Smith_numbers
#c# 2016-04-17 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A6753
#n# error gone after switching 'factors' algorithm (cf Count_in_factors')

constant @primes = 2, |(3, 5, 7 ... *).grep: *.is-prime;

multi factors ( 1 ) { 1 }
multi factors($n is copy) {
    $n == 1 ?? 1 !!
    gather {
        $n /= take 2 while $n %% 2;
        $n /= take 3 while $n %% 3;
        loop (my $p = 5; $pÃ—$p <= $n; $p+=2) {
            $n /= take $p while $n %% $p;
        }
        take $n unless $n == 1;
    }
}

# Code above here is verbatim from RC 'Count_in_factors', 2nd version

sub is_smith_number ( Int $n ) {
  (!$n.is-prime) and ( [+] $n.comb ) == ( [+] factors($n).join.comb );
}

my @s = grep &is_smith_number, 2 ..^ 10_000;
say "{@s.elems} Smith numbers below 10_000";
say 'First 10: ', @s[  ^10      ];
say 'Last  10: ', @s[ *-10 .. * ];

use Test;
is @s.elems, 376;
is @s[^10], '4 22 27 58 85 94 121 166 202 265';
is @s[*-10 .. *], '9843 9849 9861 9880 9895 9924 9942 9968 9975 9985';
