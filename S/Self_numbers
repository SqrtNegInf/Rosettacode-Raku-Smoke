#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Self_numbers
#c# 2020-11-30 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# faster than the literal-minded Perl translation; hard-coding '50' sub-optimal
#n# OEIS:A003052

my ( $st, $count, $i, $pow, $digits, $offset, $lastSelf, $done, @selfs) =
     now,      0,  1,   10,       1,       9,         0, False;

# while ( $count < 1e8 ) {
until $done {
   my $isSelf = True;
   my $sum    = (my $start = max ($i-$offset), 0).comb.sum;
   loop ( my $j = $start; $j < $i; $j+=1 ) {
      if $j+$sum == $i { $isSelf = False and last }
      $j+1 % 10 ?? ( $sum+=1 ) !! $sum = ($j+1).comb.sum;
      #($j+1)%10 != 0 ?? ( $sum+=1 ) !! ( $sum = ($j+1).comb.sum ) ;
   }
   if $isSelf {
      $count+=1;
      $lastSelf = $i;
      if $count <= 50 {
         @selfs.append: $i;
         $done = True if $count == 50;
      }
   }
   $i+=1;
   if $i % $pow == 0 {
      $pow ×= 10;
      $digits+=1 ;
      $offset = $digits × 9
   }
}

# say "The 100 millionth self number is ", $lastSelf;
# say "Took ", now - $st, " seconds."

say "The first 50 self numbers are:" ~ my $result = join ' ', @selfs;

my $ref = q:to/END/;
1 3 5 7 9 20 31 42 53 64 75 86 97 108 110 121 132 143 154 165 176 187 198 209 211 222 233 244 255 266 277 288 299 310 312 323 334 345 356 367 378 389 400 411 413 424 435 446 457 468
END

use Test;
is $result, chomp $ref;
