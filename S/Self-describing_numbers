#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Self-describing_numbers
#c# 2015-10-28 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A046043 m = x{0} x{1} x{2} ... x_{b-1} such that x_i is the number of "digits" in m that are equal to i, for all i=0,...,b-1.
#n# OEIS:A138480 as above, but 1st digit describes # of zeros present [super-set of previous]
#n# aka autobiographical numbers
#n# now mirrors what's on RC, but reduced limit to keep run-time down

my @res;

my @values = <1210 2020 21200 3211000 42101000 521001000 6210001000 72100001000 27 115508>;
 
for @values -> $test {
    @res.push: "$test is {sdn($test) ?? '' !! 'NOT ' }a self describing number.";
}
 
sub sdn($n) {
    my $s = $n.Str;
    my $chars = $s.chars;
    my @a = +Â«$s.comb;
    my @b;
    for @a -> $i {
        return False if $i >= $chars;
        ++@b[$i];
    }
    @b[$_] //= 0 for ^$chars;
    @a eqv @b;
}
 
@res.push: $_ if .&sdn for ^99999; #99;

.say for @res;

my $ref = q:to/END/;
1210 is a self describing number.
2020 is a self describing number.
21200 is a self describing number.
3211000 is a self describing number.
42101000 is a self describing number.
521001000 is a self describing number.
6210001000 is a self describing number.
72100001000 is a self describing number.
27 is NOT a self describing number.
115508 is NOT a self describing number.
1210
2020
21200
END

use Test;
is @res.join("\n"), chomp $ref;
