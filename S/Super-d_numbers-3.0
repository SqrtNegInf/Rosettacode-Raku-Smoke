#!/usr/bin/env perl6
#n# NOT CURRENT, NOT SMOKE-TESTED
#u# http://rosettacode.org/wiki/Super-d_numbers
#c# 2019-10-xx NOT ON RC
#n# divide and conquer, but how to exit early? (i.e. not have fixed termination value)
#n# similar issue raised in comment @ https://6guts.wordpress.com/2017/03/16/considering-hyperrace-semantics/
#n# $chunk, $max-plus are tunable parameters, scale with $d
#n# due to overhead, concurrency makes little sense for d < 6, but does return correct results for all d


# 7:  119.011u   2.402s  2:18.58  87.6% no concurrency
# 8: 2246.582u  46.147s 50:03.70  76.3%      "

# 7:   89.992u   3.948s   :27.72 338.8%
# 8:  930.205u  36.407s  4:21.07 370.2%
# 9: 8561.503u 274.300s 41:01.21 359.0%

my @res;

sub super-d ($d,$max) {
    my $max-plus = $max + floor 2*$max/$d;
    my @super[2*$max-plus] = 0 xx 2*$max-plus;
    my @duper; #[2*$max-plus] = 0 xx 2*$max-plus;
    {
        my $digits = $d x $d;
        my $chunk  = 25 * $max * $d;
        my atomicint $found = 0;
        (0, 1*$chunk, 2*$chunk ... *).race(:8degree, :1batch).map: -> $i {
             @super[$found⚛++] = $_ if ($_ ** $d  *  $d).contains($digits) for 1+$i .. 1+$i+$chunk;
             X::AdHoc.new.throw if $found >= $max-plus;

#n# ? Cannot send a message on a closed channel
# code above could potentially assign past end of @super--which has not been seen to happen--but is easier to read...
#           for $i+1 .. $i+1+$chunk -> $n {
#               next unless ($n ** $d  *  $d).contains($digits);
#               @super[$found⚛++] = $n;
#               X::AdHoc.new.throw if $found == $max-plus;
#           }

        }
        #CATCH { when X::AdHoc { return @super.sort.grep(*>0).head($max) } }
        CATCH { when X::AdHoc { @duper = @super } }
    }
    #@duper.sort.grep(+*).head($max);
    @duper.grep(*>0).sort.head($max);
}

@res.push: "$_: " ~ join ' ', super-d($_,10) for 2..6;

.say for @res;

my $ref = q:to/END/;
2: 19 31 69 81 105 106 107 119 127 131
3: 261 462 471 481 558 753 1036 1046 1471 1645
4: 1168 4972 7423 7752 8431 10267 11317 11487 11549 11680
5: 4602 5517 7539 12955 14555 20137 20379 26629 32767 35689
6: 27257 272570 302693 323576 364509 502785 513675 537771 676657 678146
END
#7: 140997 490996 1184321 1259609 1409970 1783166 1886654 1977538 2457756 2714763
#8: 185423 641519 1551728 1854230 6415190 12043464 12147605 15517280 16561735 18542300
#9: 17546133 32613656 93568867 107225764 109255734 113315082 121251742 175461330 180917907 182557181

use Test;
is @res.join("\n"), chomp $ref;
