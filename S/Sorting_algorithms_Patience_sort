#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Patience_sort
#c# 2015-10-23 <RC
#m# MOAR: OK
#j#  JVM: OK

multi patience(@deck) {
    my @stacks;
    for @deck -> $card {
        with @stacks.first: $card before *[*-1] -> $stack {
            $stack.push: $card;
        }
        else {
            @stacks.push: [$card];
        }
    }
    gather while @stacks {
        take .pop given min :by(*[*-1]), @stacks;
        @stacks .= grep: +*;
    }
}

say patience ^10 . pick(*);

my @weights = (^50).map: { 100 + ( 1000.rand.Int / 10 ) };

use Test;
is (patience ^10 . pick(*)), ^10;
is @weights.sort, @weights.&patience;
