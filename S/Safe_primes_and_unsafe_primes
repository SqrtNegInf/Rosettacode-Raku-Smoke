#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Safe_primes_and_unsafe_primes
#c# 2018-09-28 <RC, 2018-10-11 <RC
#m# MOAR: OK
#j# JVM:  BROKEN, and the EVAL trick not working...
#n# OEIS:A005385 Safe primes p: (p-1)/2 is also prime.
#n# OEIS:A059456 Unsafe primes: primes not in A005385.

BEGIN { die 'ecosystem...' if $*VM ~~ /jvm/; }  # wait for zef-j

my @res;

sub comma { $^i.flip.comb(3).join(',').flip }

use Math::Primesieve;

my $sieve = Math::Primesieve.new;

my @primes = $sieve.primes(10_000_000);

my %filter = @primes.Set;

my $primes = @primes.classify: { %filter{($_ - 1)/2} ?? 'safe' !! 'unsafe' };

for 'safe', 35, 'unsafe', 40 -> $type, $quantity {
    @res.push: "The first $quantity $type primes are:";

    @res.push: $primes{$type}[^$quantity]Â».&comma;

    @res.push: "The number of $type primes up to {comma $_}: "~
    comma $primes{$type}.first(* > $_, :k) // +$primes{$type} for 1e6, 1e7;

    @res.push: '';
}

.say for @res;

my $ref = q:to/END/;
The first 35 safe primes are:
5 7 11 23 47 59 83 107 167 179 227 263 347 359 383 467 479 503 563 587 719 839 863 887 983 1,019 1,187 1,283 1,307 1,319 1,367 1,439 1,487 1,523 1,619
The number of safe primes up to 1,000,000: 4,324
The number of safe primes up to 10,000,000: 30,657

The first 40 unsafe primes are:
2 3 13 17 19 29 31 37 41 43 53 61 67 71 73 79 89 97 101 103 109 113 127 131 137 139 149 151 157 163 173 181 191 193 197 199 211 223 229 233
The number of unsafe primes up to 1,000,000: 74,174
The number of unsafe primes up to 10,000,000: 633,922

END

use Test;
is @res.join("\n"), chomp $ref;
