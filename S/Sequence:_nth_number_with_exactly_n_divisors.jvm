#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sequence:_nth_number_with_exactly_n_divisors
#c# 2019-04-11 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2020-12-15 A non-trivial code issue here, '$iterator' does not iterate 
#n# 2022-05-24 Added work-around to get this running, but ugly.  The '$iterator.first' combo works, 
#n#  in 'C/Chernick%27s_Carmichael_numbers.jvm' and 'C/Cyclops_numbers', why not here? is it the 'do' block? 

my @res;

sub div-count (\x) {
    return 2 if x.is-prime;
    flat (1 .. x.sqrt.floor).map: -> \d {
        unless x % d { my \y = x div d; y == d ?? y !! (y, d) } # !
    }
}

my $limit = 20;

my @primes = grep { .is-prime }, 1..*;
@primes[$limit]; # prime the array. SCNR

@res.push: "First $limit terms of OEIS:A073916";
@res.push: (1..$limit).map: -> $n {
    ($n > 4 and $n.is-prime) ??
    exp($n - 1, @primes[$n - 1]) !! fake-iter($n)
    #exp($n - 1, @primes[$n - 1]) !!
    #do {
    #    my $i = 0;
    #    $n == div-count($_) and ++$i == $n and $_ for (1..Inf).map: * ** ($n %% 2 ?? 1 !! 2); # NO
    ##}
}

sub fake-iter ($n) {
    my $i = 0;
    $n == div-count($_) and ++$i == $n and return $_ for (1..Inf).map: * ** ($n %% 2 ?? 1 !! 2);
}

.say for @res;

my $ref = q:to/END/;
First 20 terms of OEIS:A073916
1 3 25 14 14641 44 24137569 70 1089 405 819628286980801 160 22563490300366186081 2752 9801 462 21559177407076402401757871041 1044 740195513856780056217081017732809 1520
END

use Test;
is @res.join("\n"), chomp $ref;
