#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Statistics/Basic
#c#  2015-11-03 <>RC, 2017-02-01 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# 2020-10-07 different answers when run from interactive shell vs cron-launch?
#n# 2021-03-04 yes to above, and that has not changed
#n# 2022-11-01 replace call to built-in 'rand' for output stability

class splitmix64 {
    has $!state;
    submethod BUILD ( Int :$seed where * >= 0 = 1 ) { $!state = $seed }
    method next-int {
        my $next = $!state = ($!state + 0x9e3779b97f4a7c15) +& (2⁶⁴ - 1);
        $next = ($next +^ ($next +> 30)) × 0xbf58476d1ce4e5b9 +& (2⁶⁴ - 1);
        $next = ($next +^ ($next +> 27)) × 0x94d049bb133111eb +& (2⁶⁴ - 1);
        ($next +^ ($next +> 31)) +& (2⁶⁴ - 1);
    }
    method next-rat { self.next-int / 2⁶⁴ }
}

my $rng = splitmix64.new( :seed(123456) );

my @res;
for 100, 1_000, 10_000 -> $N {
    @res.push: "size: $N";
    my @data = $rng.next-rat xx $N;
    @res.push: sprintf "mean:%f", my $mean = $N R/ [+] @data;
    @res.push: sprintf "stddev:%f", sqrt
    $mean**2 R- $N R/ [+] @data »**» 2;
    @res.push: sprintf "%.1f %s", .key, '=' x (500 × .value.elems / $N)
        for sort @data.classify: (10 × *).Int / 10; # DH b7c6e73, sort works on hash keys by default
    @res.push: '';
#    &say # DH change (bare 'say' no longer allowed)
}

.say for @res;

my $ref = qq:to/END/;
size: 100
mean:0.487568
stddev:0.270329
0.0 ========================================
0.1 ============================================================
0.2 =================================================================
0.3 ==============================
0.4 =======================================================
0.5 ============================================================
0.6 ========================================
0.7 ==================================================
0.8 ==========================================================================================
0.9 ==========

size: 1000
mean:0.484747
stddev:0.288726
0.0 =============================================================
0.1 ================================================
0.2 =================================================
0.3 ============================================
0.4 =======================================================
0.5 =====================================================
0.6 =================================================
0.7 ===============================================
0.8 ==============================================
0.9 ============================================

size: 10000
mean:0.504306
stddev:0.288022
0.0 ================================================
0.1 ================================================
0.2 ================================================
0.3 ====================================================
0.4 ==================================================
0.5 ==============================================
0.6 ==================================================
0.7 ===================================================
0.8 ===================================================
0.9 ==================================================

END

use Test;
is @res.join("\n"), chomp $ref;
