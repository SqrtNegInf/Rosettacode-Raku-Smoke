#!/usr/bin/env raku
#u# https://www.rosettacode.org/wiki/Sorting_algorithms/Tree_sort_on_a_linked_list
#c# 2023-12-02 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

class BinaryTree { has ($.node, $.leftSubTree, $.rightSubTree) is rw;

   method insert($item) {
      if not $.node.defined {
         $.node = $item;
         ($.leftSubTree, $.rightSubTree)>>.&{ $_ = BinaryTree.new }
      } elsif $item cmp $.node < 0 {
         $.leftSubTree.insert($item);
      } else {
         $.rightSubTree.insert($item);
      }
   }

   method inOrder(@ll) {
      return unless $.node.defined;
      $.leftSubTree.inOrder(@ll);
      @ll.push($.node);
      $.rightSubTree.inOrder(@ll);
   }
}

sub treeSort(@ll) {
   my $searchTree = BinaryTree.new;
   for @ll -> $i { $searchTree.insert($i) }
   $searchTree.inOrder(my @ll2);
   return @ll2
}

sub printLinkedList(@ll, Str $fmt, Bool $sorted) {
   my $line;
   for @ll -> $i { $line ~= sprintf("$fmt ", $i) }
   $line ~= $sorted ?? "\n" !! '-> ';
   return $line;
}

my @ll  = <5 3 7 9 1>;
#my @ll = [37, 88, 13, 18, 72, 77, 29, 93, 21, 97, 37, 42, 67, 22, 29, 2];
@res.push: printLinkedList(@ll, "%d", False);
my @lls = treeSort(@ll);
@res.push: printLinkedList(@lls, "%d", True);

my @ll2 = <d c e b a>;
#my @ll2 = <one two three four five six seven eight nine ten>;
@res.push: printLinkedList(@ll2, "%s", False);
my @lls2 = treeSort(@ll2);
@res.push: printLinkedList(@lls2, "%s", True);

.say for @res;

my $ref = q:to/END/;
5 3 7 9 1 -> 
1 3 5 7 9 

d c e b a -> 
a b c d e 

END

use Test;
is @res.join("\n"), chomp $ref;
