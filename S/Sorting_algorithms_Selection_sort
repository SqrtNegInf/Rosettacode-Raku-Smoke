#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Sorting_algorithms/Selection_sort
#c# 2016-08-14 <RC
#m# MOAR: OK
#j#  JVM: OK

# Solution 1:
sub selection_sort ( @a is copy ) {
    for 0 ..^ @a.end -> $i {
        my $min = [ $i+1 .. @a.end ].min: { @a[$_] };
        @a[$i, $min] = @a[$min, $i] if @a[$i] > @a[$min];
    }
    @a
}

my @data = 22, 7, 2, -5, 8, 4;
say 'input   = ' ~ @data;
say 'output1 = ' ~ my $out1 = @data.&selection_sort;

# Solution 2:
sub selectionSort(@a is copy) {
    for ^@a -> $i {
        my $min = $i; 
        @a[$i, $_] = @a[$_, $i] if @a[$min] > @a[$_] for $i ^..^ @a;   # not on RC
        #my $min = $i;
        #$min = $_ if @a[$min] > @a[$_] for $i^..^@a;
        #@a[$i, $min] = @a[$min, $i] if $min != $i;
    }
    @a
}

say 'output2 = ' ~ my $out2 = @data.&selectionSort;

# above just for show, testing random values:
my @weights = (^10).map: { 100 + ( 1000.rand.Int ) };

use Test;
is @weights.sort, @weights.&selection_sort;
is @weights.sort, @weights.&selectionSort;
