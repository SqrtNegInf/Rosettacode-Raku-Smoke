#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Selectively_replace_multiple_instances_of_a_character_within_a_string
#c# 2022-05-31 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2023-01-29 replace call to built-in 'rand' for output stability

my @res;

use myRNG;
sub pick-all (@a is copy) is export {
    my $rng = myRNG.new( :seed(123456) );
    for 1 ..^ @a -> $n {
        my $k = (0 .. $n)[($n+1) × $rng.next-rat];
        $k == $n or @a[$k, $n] = @a[$n, $k];
    }
    @a
}


sub mangle ($str is copy) {
    $str.match(:ex, 'a')».from.map: { $str.substr-rw($_, 1) = 'ABaCD'.comb[$++] };
    $str.=subst('b', 'E');
    $str.substr-rw($_, 1) = 'F' given $str.match(:ex, 'r')».from[1];
    $str
}

@res.push: $_ ~ ' -> ' ~ .&mangle given 'abracadabra';

@res.push: $_ ~ ' -> ' ~ .&mangle given 'abracadabra'.comb.&pick-all.join;

.say for @res;

my $ref = q:to/END/;
abracadabra -> AErBcadCbFD
raaabdaracb -> rABaEdCFDcb
END

use Test;
is @res.join("\n"), chomp $ref;
