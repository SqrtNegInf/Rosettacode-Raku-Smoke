#!/usr/bin/env raku
#u# https://www.rosettacode.org/wiki/Sorting_algorithms/Quicksort
#c# 2023-10-02 <RC
#m# MOAR: OK
#j# JVM:  OK

#| Recursive, single-thread, single-pass, quicksort implementation
sub quicksort(@a) {
    return @a if @a.elems < 2;
    my $pivot = @a.pick;
    my %prt{Order} is default([]) = @a.classify: * cmp $pivot;
    |samewith(%prt{Less}), |%prt{Same}, |samewith(%prt{More})
}

say "x" x 10 ~ " Testing " ~ "x" x 10;
use Test;
my @functions-under-test = &quicksort;
my @testcases =
#        () => (),
#        <a>.List => <a>.List,
#        <a a> => <a a>,
        ("b", "a", 3) => (3, "a", "b"),
        <h b a c d f e g> => <a b c d e f g h>,
        <a 🎮 3 z 4 🐧> => <a 🎮 3 z 4 🐧>.sort
        ;

plan @testcases.elems × @functions-under-test.elems;
for @functions-under-test -> &fun {
    say &fun.name;
    is-deeply &fun(.key), .value, .key ~ "  =>  " ~ .value for @testcases;
}
done-testing;
