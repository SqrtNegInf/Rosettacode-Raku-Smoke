#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Semiprime
#c# 2015-12-29 <RC, 2018-03-15 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A001358

srand 123456;

use Test;

# Here is a naive, grossly inefficient implementation.

sub is-semiprime (Int $n --> Bool) {
    not $n.is-prime and
        .is-prime given 
        $n div first $n %% *, flat grep &is-prime, 2 .. *;
}

my @primes = flat grep &is-prime, 2 .. 100;

for ^5 {
    nok is-semiprime([ﾃ余 my @f1 = @primes.roll(1)), ~@f1;
    ok  is-semiprime([ﾃ余 my @f2 = @primes.roll(2)), ~@f2;
    nok is-semiprime([ﾃ余 my @f3 = @primes.roll(3)), ~@f3;
    nok is-semiprime([ﾃ余 my @f4 = @primes.roll(4)), ~@f4;
}
