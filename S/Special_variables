#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Special_variables
#c# 2018-03-20 <RC, 2020-04-12 >RC
#m# MOAR: OK
#j# JVM:  OK
#n# answers vary, just test that we got something, didn't crash on undefined value

my @res;

unit sub MAIN ($timey = 42, $wimey = 'Tardis');

sub say-what ($text) { @res.push: $text }

#say-what  $?DISTRIBUTION   ; # Which OS distribution am I compiling under  # just says 'Any'
say-what  $*KERNEL         ; # operating system compiled for
say-what  $*DISTRO         ; # Which OS distribution am I running under
say-what  $*VM             ; # Which virtual machine am I compiling under
say-what  $*PERL           ; # Which Perl am I compiled for?                 # just for backward compat
say-what  $*RAKU           ; # Which Perl am I compiled for?

### Compile-time introspection ###
class Zizzer {
say-what  $?PACKAGE        ; # current package
}

class Zazzer {
say-what  $?CLASS          ; # current class
}

class Zuzz { say-what  ::?CLASS } # current class (as package or type name)

#say-what  $?MODULE         ; # current module
#say-what  $?ROLE           ; # current role

sub foo1 {
say-what  &?ROUTINE        ; # current sub or method (itself)
say-what  &?BLOCK          ; # current block (itself)
}

sub foo2 {
say-what  &?ROUTINE        ; # current sub or method (itself)
say-what  &?BLOCK          ; # current block (itself)
}

foo1();
foo2();

say-what  $?FILE           ; # current filename of source file
say-what  $?LINE           ; # current line number in source file

say-what $*COLLATION unless $*VM ~~ /jvm/;

say-what $*TOLERANCE;  # Variable used by the =~= operator, and any operations that depend on it, to decide if two values are approximately equal. Defaults to 1e-15.
say-what $*DEFAULT-READ-ELEMS; # Affects the number of bytes read by default by IO::Handle.read. Its default value is 65536.

say-what '$*REPO';
say-what $*REPO;

say-what $*USAGE; #  value of the auto-generated USAGE message

# not PROGRAM_NAME!!
say-what $*PROGRAM-NAME   ; # path to the current executable
say-what $*PROGRAM        ; # location (in the form of an IO::Path object) of the Raku program being executed.

say-what @*ARGS           ; # command-line arguments
#say-what $*ARGFILES       ; # The magic command-line input handle

say-what $*CWD            ; # current working directory

say-what %*ENV.grep:{.key ~~ /SHELL/}            ; # system environment variables

unless $*VM ~~ /jvm/ {
    say-what $*IN             ; # Standard input handle; is an IO object
    say-what $*OUT            ; # Standard output handle
    say-what $*ERR            ; # Standard error handle
}

say-what $*EXECUTABLE-NAME; # name of the Raku executable that is currently running
say-what $*EXECUTABLE     ; # IO::Path absolute path of the Raku executable that is currently running.
say-what $*PID            ; # system process id
say-what $*TZ             ; # Local time zone
say-what $*USER           ; # system user id

.say for @res;

use Test;
ok @res > 1;
