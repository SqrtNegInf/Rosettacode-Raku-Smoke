#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Spelling_of_ordinal_numbers
#c# 2019-02-10 <RC, 2019-06-08 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#f# RC file: spelling_ordinals.HOST.txt
#n# results cause 'malformed UTF' problems, output to file instead
#n# 2020-05-15 https://github.com/rakudo/rakudo/issues/3694 thundergnat++
#n# 2021-03-23 removed Allomorph '123+0i'
#n# 2023-01-17 output changed with Unicode 15 update? [so testing host-specific for now]

my @res;

use Lingua::EN::Numbers;

my $ext = qx/uname -a/ ~~ /'Mac-Pro'/ ?? 'mpro' !! 'imac';
my $fh = open("run/spelling_ordinals.$ext.txt", :w);

#$fh.printf( "\%16s : %s\n", $_, ordinal($_) ) for

# The task
+$_ ?? $fh.printf( "Type: \%-14s %16s : %s\n", .^name, $_, .&ordinal ) !! $fh.say: "\n$_:" for

# Testing
'Required tests',
1, 2, 3, 4, 5, 11, 65, 100, 101, 272, 23456, 8007006005004003,

'Optional tests - different forms of 123',
'Numerics',
123, 00123.0, 1.23e2, 123+0i,

'Allomorphs',
|<123 1_2_3 00123.0 1.23e2 0b1111011 0o173 0x7B 861/7>,

'Numeric Strings',
|'1_2_3 00123.0 1.23e2 123+0i 0b1111011 0o173 0x7B 861/7'.words,

'Unicode Numeric Strings',
# (Only using groups of digits from the same Unicode block. Technically,
# digits from any block could be combined with digits from any other block.)
|(^0x1FFFF).grep( { .chr ~~ /<:Nd>/ and .unival == 1|2|3 }).rotor(3)>>.chr>>.join,

'Role Mixin',
'17' but 123;
