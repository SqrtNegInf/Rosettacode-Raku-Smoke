#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Kahan_summation
#c# 2018-06-24 <RC
#m# MOAR: OK
#j# JVM:  OK

# Translation of: Python
# Raku does not offer a fixed precision decimal. It does have IEEE 754 floating point numbers so let's try implementing the arbitrary precision option as shown in Python. Need to explicitly specify scientific notation numbers to force floating point Nums.

constant ε = (1e0, */2e0 … *+1e0==1e0)[*-1];

sub kahan (*@nums) {
    my $summ = my $c = 0e0;
    for @nums -> $num {
        my $y = $num - $c;
        my $t = $summ + $y;
        $c = ($t - $summ) - $y;
        $summ = $t;
    }
    $summ
}

my @res;
@res.push: 'Epsilon:    '~ ε;

@res.push: 'Simple sum: '~ ((1e0 + ε) - ε).fmt: "%.16f";

@res.push: 'Kahan sum:  '~ kahan(1e0, ε, -ε).fmt: "%.16f";
.say for @res;

my $moar = qq:to/END/;
Epsilon:    1.1102230246251565e-16
Simple sum: 0.9999999999999999
Kahan sum:  1.0000000000000000
END

my $jvm = qq:to/END/;
Epsilon:    1.1102230246251565E-16
Simple sum: 0.9999999999999999
Kahan sum:  1.0000000000000000
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
