#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/EKG_sequence_convergence
#c# 2018-08-08 <RC, 2018-10-19 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# OEIS:A064413 a(1) = 1; a(2) = 2; for n > 2, a(n) = smallest number not already used which shares a factor with a(n-1).

my @res;

sub infix:<shares-divisors-with> { ($^a gcd $^b) > 1 }

sub next-EKG ( *@s ) {
    return first {
        @s ∌ $_  and  @s.tail shares-divisors-with $_
    }, 2..*;
}

sub EKG ( Int $start ) {  1, $start, &next-EKG … *  }

sub converge-at ( @ints ) {
    my @ekgs = @ints.map: &EKG;

    return (2 .. *).first: -> $i {
        [==] @ekgs.map(     *.[$i]     ) and
        [≡]  @ekgs.map( *.head($i).Set )
    }
}

@res.push: "EKG($_): "~ .&EKG.head(10) for 2, 5, 7, 9, 10;

for [5, 7], [2, 5, 7, 9, 10] -> @ints {
    @res.push: "EKGs of (@ints[]) converge at term {$_+1}" with converge-at(@ints);
}

.say for @res;

my $ref = qq:to/END/;
EKG(2): 1 2 4 6 3 9 12 8 10 5
EKG(5): 1 5 10 2 4 6 3 9 12 8
EKG(7): 1 7 14 2 4 6 3 9 12 8
EKG(9): 1 9 3 6 2 4 8 10 5 15
EKG(10): 1 10 2 4 6 3 9 12 8 14
EKGs of (5 7) converge at term 21
EKGs of (2 5 7 9 10) converge at term 45
END

use Test;
is @res.join("\n"), chomp $ref;
