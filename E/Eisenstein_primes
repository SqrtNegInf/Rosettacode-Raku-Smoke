#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Eisenstein_primes
#t# inprogress
#c# 2023-06-xx >RC
#m# MOAR: OK
#j#  JVM: OK

my \ω = exp 2i × π/3;
#my \ω = ( -1 + i × 3.sqrt ) / 2;  # differs only in sign on real zero
#say ω; say ω×(1+ω);

sub norm (@p)    { @p[0]² - @p[0]×@p[1] + @p[1]² } 
#sub norm ($a,$b)    { $a² - $a×$b + $b² } 
sub display ($a,$b) { sprintf "%+8.4f%+8.4fi", ($a + ω×$b).reals }

# generate an excess, but not Inf
my \l = 20;
my @Ex = gather (-l..l X -l..l).map: -> (\a,\b) { 
    take (a,b) if 
    ((0 == a|b or a==b) and .is-prime && 2 == $_ mod 3 given max(a.abs, b.abs))
   or 
    norm((a,b)).is-prime 
}

my @ES = gather (0..l X 0..l).map: -> (\a,\b) { 
    if 0 == a|b or a==b {
        take (a,b) if .is-prime and 2 == $_ mod 3 given max(a.abs, b.abs)
    } else {
        take (a,b) and take (-a,b) and take (a,-b) and take (-a,-b) if norm((a,b)).is-prime 
    }
}

#my $result = @ES.sort(norm($^a)).head(100).map( {display(.[0],.[1])} ).batch(4).join("\n");
my $result = (@ES.sort: *.&norm).head(100).map( {display(.[0],.[1])} ).batch(4).join("\n");

my $ref1 = q:to/EOD/;
 +0.0000 +1.7321i  -0.0000 -1.7321i  +1.5000 +0.8660i  -1.5000 -0.8660i
 -1.0000 +1.7321i  +2.0000 +0.0000i  +1.0000 +1.7321i  -2.0000 +1.7321i
 +2.0000 -1.7321i  -0.5000 +2.5981i  +0.5000 -2.5981i  -2.5000 +0.8660i
 +2.5000 -0.8660i  +0.5000 +2.5981i  -0.5000 -2.5981i  +2.5000 +0.8660i
 -2.5000 -0.8660i  +2.0000 +1.7321i  -2.0000 -1.7321i  -2.5000 +2.5981i
 +2.5000 -2.5981i  -1.0000 +3.4641i  +1.0000 -3.4641i  -3.5000 +0.8660i
 +3.5000 -0.8660i  +1.0000 +3.4641i  -1.0000 -3.4641i  +3.5000 +0.8660i
 -3.5000 -0.8660i  +2.5000 +2.5981i  -2.5000 -2.5981i  -3.5000 +2.5981i
 +3.5000 -2.5981i  -0.5000 +4.3301i  +0.5000 -4.3301i  -4.0000 +1.7321i
 +4.0000 -1.7321i  +0.5000 +4.3301i  -0.5000 -4.3301i  +4.0000 +1.7321i
 -4.0000 -1.7321i  +3.5000 +2.5981i  -3.5000 -2.5981i  -3.0000 +3.4641i
 +3.0000 -3.4641i  -4.5000 +0.8660i  +4.5000 -0.8660i  -2.5000 +4.3301i
 +5.0000 +0.0000i  +2.5000 +4.3301i  -2.0000 +5.1962i  +2.0000 -5.1962i
 +2.0000 +5.1962i  -2.0000 -5.1962i  +5.5000 +0.8660i  -5.5000 -0.8660i
 +3.5000 +4.3301i  -3.5000 -4.3301i  -5.0000 +3.4641i  +5.0000 -3.4641i
 -0.5000 +6.0622i  +0.5000 -6.0622i  -5.5000 +2.5981i  +5.5000 -2.5981i
 +0.5000 +6.0622i  -0.5000 -6.0622i  +5.5000 +2.5981i  -5.5000 -2.5981i
 +5.0000 +3.4641i  -5.0000 -3.4641i  -4.5000 +4.3301i  +4.5000 -4.3301i
 -6.0000 +1.7321i  +6.0000 -1.7321i  -4.0000 +5.1962i  +4.0000 -5.1962i
 -2.5000 +6.0622i  +2.5000 -6.0622i  -6.5000 +0.8660i  +6.5000 -0.8660i
 +2.5000 +6.0622i  -2.5000 -6.0622i  +6.5000 +0.8660i  -6.5000 -0.8660i
 +4.0000 +5.1962i  -4.0000 -5.1962i  -5.5000 +4.3301i  +5.5000 -4.3301i
 -6.5000 +2.5981i  +6.5000 -2.5981i  -4.5000 +6.0622i  +4.5000 -6.0622i
 -7.5000 +0.8660i  +7.5000 -0.8660i  -0.5000 +7.7942i  +0.5000 -7.7942i
 +0.5000 +7.7942i  -0.5000 -7.7942i  +7.0000 +3.4641i  -7.0000 -3.4641i
EOD

my $ref2 = q:to/EOD/;
 -1.5000 -0.8660i  -0.0000 -1.7321i  -1.5000 +0.8660i  +1.5000 -0.8660i
 +0.0000 +1.7321i  +1.5000 +0.8660i  -1.0000 -1.7321i  -2.0000 +0.0000i
 +1.0000 -1.7321i  -1.0000 +1.7321i  +2.0000 +0.0000i  +1.0000 +1.7321i
 -2.0000 -1.7321i  -2.5000 -0.8660i  -0.5000 -2.5981i  -2.5000 +0.8660i
 +0.5000 -2.5981i  -2.0000 +1.7321i  +2.0000 -1.7321i  -0.5000 +2.5981i
 +2.5000 -0.8660i  +0.5000 +2.5981i  +2.5000 +0.8660i  +2.0000 +1.7321i
 -2.5000 -2.5981i  -3.5000 -0.8660i  -1.0000 -3.4641i  -3.5000 +0.8660i
 +1.0000 -3.4641i  -2.5000 +2.5981i  +2.5000 -2.5981i  -1.0000 +3.4641i
 +3.5000 -0.8660i  +1.0000 +3.4641i  +3.5000 +0.8660i  +2.5000 +2.5981i
 -3.5000 -2.5981i  -4.0000 -1.7321i  -0.5000 -4.3301i  -4.0000 +1.7321i
 +0.5000 -4.3301i  -3.5000 +2.5981i  +3.5000 -2.5981i  -0.5000 +4.3301i
 +4.0000 -1.7321i  +0.5000 +4.3301i  +4.0000 +1.7321i  +3.5000 +2.5981i
 -2.5000 -4.3301i  -5.0000 +0.0000i  +2.5000 -4.3301i  -2.5000 +4.3301i
 +5.0000 +0.0000i  +2.5000 +4.3301i  -3.5000 -4.3301i  -5.5000 -0.8660i
 -2.0000 -5.1962i  -5.5000 +0.8660i  +2.0000 -5.1962i  -3.5000 +4.3301i
 +3.5000 -4.3301i  -2.0000 +5.1962i  +5.5000 -0.8660i  +2.0000 +5.1962i
 +5.5000 +0.8660i  +3.5000 +4.3301i  -5.0000 -3.4641i  -5.5000 -2.5981i
 -0.5000 -6.0622i  -5.5000 +2.5981i  +0.5000 -6.0622i  -5.0000 +3.4641i
 +5.0000 -3.4641i  -0.5000 +6.0622i  +5.5000 -2.5981i  +0.5000 +6.0622i
 +5.5000 +2.5981i  +5.0000 +3.4641i  -4.0000 -5.1962i  -6.5000 -0.8660i
 -2.5000 -6.0622i  -6.5000 +0.8660i  +2.5000 -6.0622i  -4.0000 +5.1962i
 +4.0000 -5.1962i  -2.5000 +6.0622i  +6.5000 -0.8660i  +2.5000 +6.0622i
 +6.5000 +0.8660i  +4.0000 +5.1962i  -6.5000 -4.3301i  -7.0000 -3.4641i
 -0.5000 -7.7942i  -7.0000 +3.4641i  +0.5000 -7.7942i  -6.5000 +4.3301i
 +6.5000 -4.3301i  -0.5000 +7.7942i  +7.0000 -3.4641i  +0.5000 +7.7942i
EOD

use Test;
is $result, chomp $ref1;
#is $result, chomp $ref;
