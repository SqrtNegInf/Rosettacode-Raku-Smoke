#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Exceptions
#c# 2016-02-24 <RC
#m# MOAR: OK
#j#  JVM: OK
#    2nd example, has to be tested separately

use lib 'libtest'; # DH work-around for problems with JVM and Test::Output

use Test;
use Test::Output;

# Raku comes with phasers, that are called when certain conditions in the
# life of a program, routine or block are met. CATCH is one of them and works
# nicely together with LEAVE that is called even if an exception would force
# the current block to be left immediately. It's a nice place to put your
# cleanup code.

my &testcode = sub {

sub f () {
        ENTER { note '1) f has been entered' }
        LEAVE { note '2) f has been left' }
        say '3) here be dragons';
        die '4) that happend to be deadly';
}

CATCH {
        when X::AdHoc { note q{6) no, I'm dead}; }
}

f();
say '5) am I alive?';
}

my $out = qq:to/OUT/;
3) here be dragons
OUT

my $err = qq:to/ERR/;
1) f has been entered
6) no, I'm dead
2) f has been left
ERR

say output-from(&testcode);
is stdout-from(&testcode), $out;
is stderr-from(&testcode), $err;
