#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Emirp_primes
#c# 2016-03-01 <RC, 2016-08-22 <>RC
#m# MOAR: OK
#j#  JVM: OK

#Build a lazy list using Raku's builtin &is-prime, then display results based on parameters passed in.The default is to display an array slice starting and stopping at the given indicies. Alternately, ask for all values between two endpoints.

sub MAIN-as-sub ($start, $stop = Nil, $display = <slice>) {
    my $end = $stop // $start; 
    my @emirps = lazy gather for 1 .. * -> $n {
        take $n if $n.is-prime 
          and (+$n.flip).is-prime
          and $n != +($n.flip)
    }

    given $display {
        when 'slice'  { return @emirps[$start-1 .. $end-1] }; 
        when 'values' { 
            my @values = gather for @emirps {
                .take if $start < $_ < $end;
                last if $_> $end 
            }
            return @values
        }
    } 
}

# Run with passed parameters: 1 20
my $a1 = '13 17 31 37 71 73 79 97 107 113 149 157 167 179 199 311 337 347 359 389';

#Run with passed parameters: 7700 8000 values
my $a2 = '7717 7757 7817 7841 7867 7879 7901 7927 7949 7951 7963';

use Test;
is MAIN-as-sub(1, 20), $a1;
is (MAIN-as-sub(7700, 8000, 'values')), $a2;
is MAIN-as-sub(1000), '70529';
