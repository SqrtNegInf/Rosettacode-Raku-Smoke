#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Erdös-Selfridge_categorization_of_primes
#c# 2022-04-13 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# limited testing, for reasons of speed...

my @res;

use Prime::Factor;
use Math::Primesieve;
my $sieve = Math::Primesieve.new;

sub Erdös-Selfridge ($n) {
    my @factors = unique grep * > 3, prime-factors $n + 1;
    my $category = 1;
    while @factors.elems {
        @factors = unique grep * > 3, flat @factors.map: { prime-factors $_ + 1 };
        ++$category
    }
    $category
}

@res.push: "First 200 primes; Erdös-Selfridge categorized:";
@res.push: $_ for sort $sieve.n-primes(200).categorize: &Erdös-Selfridge;

@res.push: "\nFirst XX primes; Erdös-Selfridge categorized:";
@res.push: sprintf "Category %2d: first: %7d, last: %8d, total: %d", ++$, .[0], .[*-1], .elems
    for $sieve.n-primes(10_000).categorize( &Erdös-Selfridge ).sort(+*.key)».value;

.say for @res;

my $ref = q:to/END/;
First 200 primes; Erdös-Selfridge categorized:
1	2 3 5 7 11 17 23 31 47 53 71 107 127 191 383 431 647 863 971 1151
2	13 19 29 41 43 59 61 67 79 83 89 97 101 109 131 137 139 149 167 179 197 199 211 223 229 239 241 251 263 269 271 281 283 293 307 317 349 359 367 373 419 433 439 449 461 479 499 503 509 557 563 577 587 593 599 619 641 643 659 709 719 743 751 761 769 809 827 839 881 919 929 953 967 991 1019 1033 1049 1069 1087 1103 1187 1223
3	37 103 113 151 157 163 173 181 193 227 233 257 277 311 331 337 347 353 379 389 397 401 409 421 457 463 467 487 491 521 523 541 547 569 571 601 607 613 631 653 683 701 727 733 773 787 797 811 821 829 853 857 859 877 883 911 937 947 983 997 1009 1013 1031 1039 1051 1061 1063 1091 1097 1117 1123 1153 1163 1171 1181 1193 1217
4	73 313 443 617 661 673 677 691 739 757 823 887 907 941 977 1093 1109 1129 1201 1213
5	1021

First XX primes; Erdös-Selfridge categorized:
Category  1: first:       2, last:    73727, total: 32
Category  2: first:      13, last:   104543, total: 1046
Category  3: first:      37, last:   104717, total: 4255
Category  4: first:      73, last:   104729, total: 3290
Category  5: first:    1021, last:   104711, total: 1142
Category  6: first:    2917, last:   104707, total: 205
Category  7: first:   15013, last:   101641, total: 29
Category  8: first:   49681, last:    49681, total: 1
END

use Test;
is @res.join("\n"), chomp $ref;
