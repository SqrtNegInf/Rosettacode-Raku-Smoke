#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Evolutionary_algorithm
#c# 2015-11-14 <RC, 2017-05-11 <RC, 2019-06-25 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# hard to get rid of built-in random here: 'rand', 'roll' and 'pick' all present
#n# 2023-01-12 replace call to built-in 'rand' for output stability

my @res;

use myRNG;
my $rng = myRNG.new( :seed(123456) );

# Knuth shuffle
sub pick-all (@a is copy) is export {
    for 1 ..^ @a -> $n {
        my $k = (0 .. $n)[($n+1) × $rng.next-rat];
        $k == $n or @a[$k, $n] = @a[$n, $k];
    }
    @a
}

constant target = 'METHINKS IT IS LIKE A WEASEL';
constant mutate_chance = .08;
constant @alphabet = flat 'A'..'Z',' ';
constant C = 100;

sub mutate { [~] ($rng.next-rat < mutate_chance ?? @alphabet[27×$rng.next-rat] !! $_ for $^string.comb) }
#sub mutate { [~] ($rng.next-rat < mutate_chance ?? @alphabet.pick !! $_ for $^string.comb) }
#sub mutate { $^string.subst(/./, { rand < mutate_chance ?? @alphabet.pick !! $/ }, :g) }
#sub mutate { $^string.comb.map({ rand < mutate_chance ?? @alphabet.pick !! $_ }).join }
sub fitness { [+] $^string.comb Zeq @ = target.comb }

loop (
    my $parent = ' ' ~ @alphabet.join;
   #my $parent = @alphabet.roll(target.chars).join;
    $parent ne target;
    $parent = max :by(&fitness), mutate($parent) xx C
) { @res.push: sprintf "%6d: '%s'", $++, $parent }

.say for @res; 

my $ref = qq:to/END/;
     0: ' ABCDEFGHIJKLMNOPQRSTUVWXYZ '
     1: ' ABHDEFGHIJKLMVOPQRDTUVWXYZN'
     2: ' ALHDEFGHIMKCMVOPQLDTUGEXYZN'
     3: ' ALHDEFGUIMKCMVOPQLYAUGEXYZN'
     4: ' ALHDJFGUIMKCMVOPQLYA GEOYZN'
     5: ' ALHDJFGUIMKCMVOPQLJA WEOYZN'
     6: ' A HDJFGUIMKCMVOPQLVA WEOYZL'
     7: 'AA HGJFCUIMKCMVOPQLVA WEOSZL'
     8: 'AA HLJFCUIMKCM OPQLVA WEOSZL'
     9: 'AA HLNFCUIMKCM OPQEVA WEOSZL'
    10: 'AA HLNFCUITKCM OPQEVA WEOSZL'
    11: 'SA HLNFCUITKCM OPQEVA WEASZL'
    12: 'SA HLNKTUITKCM OPQEVA WEASZL'
    13: 'SA HLNKTUITKCM OPQEVA WEASEL'
    14: 'SA HLNKTUITKCM OPKEVA WEASEL'
    15: 'HA HLNKSUITKYM OPKEVA WEASEL'
    16: 'HA HLNKSUITKYM OIKE A WEASEL'
    17: 'HA HLNKSUITKYM OIKE A WEASEL'
    18: 'HA HLNKSUITKIM OIKE A WEASEL'
    19: 'MA HLNKSUITKIM OIKE A WEASEL'
    20: 'ME HLKKSUITKIM UIKE A WEASEL'
    21: 'ME HLLKS ITKIM UIKE A WEASEL'
    22: 'ME HKLKS ITKIM UIKE A WEASEL'
    23: 'ME HKLKS ITKIM UIKE A WEASEL'
    24: 'ME HKHKS ITKI  UIKE A WEASEL'
    25: 'ME HKHKS ITKI  UIKE A WEASEL'
    26: 'ME HKHKS ITKI  UIKE A WEASEL'
    27: 'ME HAHKS ITKI  LIKE A WEASEL'
    28: 'MEFHAHKS ITKI  LIKE A WEASEL'
    29: 'MEFHAHKS ITKI  LIKE A WEASEL'
    30: 'METHAHKS ITKI  LIKE A WEASEL'
    31: 'METHAHKS ITKI  LIKE A WEASEL'
    32: 'METHAHKS ITKI  LIKE A WEASEL'
    33: 'METHAHKS ITKI  LIKE A WEASEL'
    34: 'METHAHKS ITKI  LIKE A WEASEL'
    35: 'METHAHKS ITKI  LIKE A WEASEL'
    36: 'METHAHKS ITKI  LIKE A WEASEL'
    37: 'METHAHKS ITKI  LIKE A WEASEL'
    38: 'METHAHKS ITKI  LIKE A WEASEL'
    39: 'METHAHKS ITZI  LIKE A WEASEL'
    40: 'METHAHKS ITOI  LIKE A WEASEL'
    41: 'METHAHKS ITOI  LIKE A WEASEL'
    42: 'METHAHKS ITOI  LIKE A WEASEL'
    43: 'METHAHKS ITOI  LIKE A WEASEL'
    44: 'METHAHKS ITZI  LIKE A WEASEL'
    45: 'METHAHKS ITZI  LIKE A WEASEL'
    46: 'METHANKS ITZI  LIKE A WEASEL'
    47: 'METHANKS IT IZ LIKE A WEASEL'
    48: 'METHANKS IT IZ LIKE A WEASEL'
    49: 'METHANKS IT IZ LIKE A WEASEL'
    50: 'METHANKS IT IZ LIKE A WEASEL'
    51: 'METHANKS IT IZ LIKE A WEASEL'
    52: 'METHANKS IT IZ LIKE A WEASEL'
    53: 'METHINKS IT IZ LIKE A WEASEL'
    54: 'METHINKS IT IZ LIKE A WEASEL'
    55: 'METHINKS IT IZ LIKE A WEASEL'
    56: 'METHINKS IT IZ LIKE A WEASEL'
    57: 'METHINKS IT IZ LIKE A WEASEL'
    58: 'METHINKS IT IZ LIKE A WEASEL'
    59: 'METHINKS IT IZ LIKE A WEASEL'
    60: 'METHINKS IT IZ LIKE A WEASEL'
    61: 'METHINKS IT IZ LIKE A WEASEL'
    62: 'METHINKS IT IZ LIKE A WEASEL'
    63: 'METHINKS IT IZ LIKE A WEASEL'
    64: 'METHINKS IT IZ LIKE A WEASEL'
    65: 'METHINKS IT IZ LIKE A WEASEL'
    66: 'METHINKS IT IZ LIKE A WEASEL'
    67: 'METHINKS IT IZ LIKE A WEASEL'
    68: 'METHINKS IT IZ LIKE A WEASEL'
    69: 'METHINKS IT IZ LIKE A WEASEL'
    70: 'METHINKS IT IZ LIKE A WEASEL'
    71: 'METHINKS IT IN LIKE A WEASEL'
    72: 'METHINKS IT IN LIKE A WEASEL'
    73: 'METHINKS IT IN LIKE A WEASEL'
    74: 'METHINKS IT IN LIKE A WEASEL'
    75: 'METHINKS IT IN LIKE A WEASEL'
    76: 'METHINKS IT IJ LIKE A WEASEL'
    77: 'METHINKS IT IJ LIKE A WEASEL'
    78: 'METHINKS IT IJ LIKE A WEASEL'
    79: 'METHINKS IT IA LIKE A WEASEL'
    80: 'METHINKS IT IA LIKE A WEASEL'
    81: 'METHINKS IT IA LIKE A WEASEL'
    82: 'METHINKS IT IA LIKE A WEASEL'
END

use Test;
is @res.join("\n"), chomp $ref;
