#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Prime_decomposition
#c# 2016-06-28 <RC, 2016-09-31 <RC, 2018-04-15 <RC
#m# MOAR: OK
#j# JVM:  OK

sub prime-factors ( Int $n where * > 0 ) {
    return $n if $n.is-prime;
    return [] if $n == 1;
    my $factor = find-factor( $n );
    sort flat prime-factors( $factor ), prime-factors( $n div $factor );
}

sub find-factor ( Int $n, $constant = 1 ) {
    my $x      = 2;
    my $rho    = 1;
    my $factor = 1;
    while $factor == 1 {
        $rho *= 2;
        my $fixed = $x;
        for ^$rho {
            $x = ( $x * $x + $constant ) % $n;
            $factor = ( $x - $fixed ) gcd $n;
            last if 1 < $factor;
        }
    }
    $factor = find-factor( $n, $constant + 1 ) if $n == $factor;
    $factor;
}

my @res;

for 2²⁹-1, 2⁴¹-1, 2⁵⁹-1, 2⁷¹-1, 2⁷⁹-1, 2⁹⁷-1, 2¹¹⁷-1,
5465610891074107968111136514192945634873647594456118359804135903459867604844945580205745718497
 ->  $n {
    my $start = now;
    @res.push: "factors of $n: "~ prime-factors($n).join(' × ');
    say @res[*-1] ~ " \t in ", (now - $start).fmt("%0.3f"), " sec."
    #say "factors of $n: ",
    #prime-factors($n).join(' × '), " \t in ", (now - $start).fmt("%0.3f"), " sec."
}

my $ref = qq:to/END/;
factors of 536870911: 233 × 1103 × 2089
factors of 2199023255551: 13367 × 164511353
factors of 576460752303423487: 179951 × 3203431780337
factors of 2361183241434822606847: 228479 × 48544121 × 212885833
factors of 604462909807314587353087: 2687 × 202029703 × 1113491139767
factors of 158456325028528675187087900671: 11447 × 13842607235828485645766393
factors of 166153499473114484112975882535043071: 7 × 73 × 79 × 937 × 6553 × 8191 × 86113 × 121369 × 7830118297
factors of 5465610891074107968111136514192945634873647594456118359804135903459867604844945580205745718497: 165901 × 10424087 × 18830281 × 53204737 × 56402249 × 59663291 × 91931221 × 95174413 × 305293727939 × 444161842339 × 790130065009
END

use Test;
is @res.join("\n"), chomp $ref;
