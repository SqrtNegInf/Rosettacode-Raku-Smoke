#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Primorial_numbers
#c# 2016-01-04 <RC, 2018-10-09 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A002110
#n# but adding 10e5 is slow:     443.190u 11.120s 8:01.77 94.3%
#n# but adding 10e6 is glacial:  (never ran it long enough to get timing info.)
#n# this instance of .EVAL use does not appear on RC site

my @res;

my @primes;
my $sieve;
if $*VM ~~ /jvm/ { @primes = lazy gather for 1 .. * { .take if $_.is-prime } }
else             { 'use Math::Primesieve; $sieve = Math::Primesieve.new; @primes = $sieve.primes(105_000);'.EVAL }

sub primorial($n) { [Ã—] @primes[^$n] }

@res.push: "First ten primorials: {(primorial $_ for ^10)}";
@res.push: "primorial(10^$_) has {primorial(10**$_).chars} digits" for 1..4;

.say for @res;

my $ref = qq:to/END/;
First ten primorials: 1 2 6 30 210 2310 30030 510510 9699690 223092870
primorial(10^1) has 10 digits
primorial(10^2) has 220 digits
primorial(10^3) has 3393 digits
primorial(10^4) has 45337 digits
END
# primorial(10^5) has 563921 digits

use Test;
is @res.join("\n"), chomp $ref;
