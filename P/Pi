#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pi
#c# 2015-10-23 <>RC, 2018-11-22 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# RC asks for infinite stream of digits, for testing just do 1000
#n# based on http://www.mathpropress.com/stan/bibliography/spigot.pdf

sub stream(&next, &safe, &prod, &cons, $z is copy, @x) {
    gather loop {
        $z = safe($z, my $y = next($z)) ??
             prod($z, take $y)          !!
             cons($z, @x[$++])  
    }
}

sub extr([$q, $r, $s, $t], $x) {
    ($q × $x + $r) div ($s × $x + $t)
}

sub comp([$q,$r,$s,$t], [$u,$v,$w,$x]) {
    [$q × $u + $r × $w,
     $q × $v + $r × $x,
     $s × $u + $t × $w,
     $s × $v + $t × $x]
}

my $pi :=
    stream -> $z { extr($z, 3) },
           -> $z, $n { $n == extr($z, 4) },
           -> $z, $n { comp([10, -10×$n, 0, 1], $z) },
           &comp,
           <1 0 0 1>,
           (1..*).map: { [$_, 4 × $_ + 2, 0, 2 × $_ + 1] }

#for ^Inf -> $i {
#    print $pi[$i];
#    once print '.'
#}

my $ref = '31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989';

use Test;
is $pi[0..1000].join, $ref;
