#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Periodic_table
#c# 2022-06-20 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# count in base 18, advance and retard as needed

my @res;


my $b = 18;
my @offset = (16, 10, 10, (2×$b)+1, (-2×$b)-15, (2×$b)+1, (-2×$b)-15);
#my @offset = (16, 10, 10, (2×$b)+1, (-3×$b)+3, (2×$b)+1, (-3×$b)+3 );
my @span   = flat ^8 Zxx <1 3 8 44 15 17 15 15>;

for 1, 2, 29, 42, 56, 57, 58, 71, 72, 88, 89, 90, 103, 104, 118 -> $n {
    #@res.push: sprintf "%3d: %2d, %2d", $n, flat 1 X+ ($n-1 + [+] @offset.head(@span[$n-1])).polymod($b).reverse.flat;
    @res.push: sprintf "%3d: %2d, %2d", $n, map {$_+1}, ($n-1 + [+] @offset.head(@span[$n-1])).polymod($b).reverse;
    #@res.push: sprintf "%3d: %2d, %2d", $n, map {$_+1}, ($n-1 + [+] @offset[0..@span[$n-1]-1]).polymod($b).reverse;
}

.say for @res;

my $ref = qq:to/END/;
  1:  1,  1
  2:  1, 18
 29:  4, 11
 42:  5,  6
 56:  6,  2
 57:  8,  4
 58:  8,  5
 71:  8, 18
 72:  6,  4
 88:  7,  2
 89:  9,  4
 90:  9,  5
103:  9, 18
104:  7,  4
118:  7, 18
END

use Test;
is @res.join("\n"), chomp $ref;
