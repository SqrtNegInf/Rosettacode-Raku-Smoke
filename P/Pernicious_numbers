#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Pernicious_numbers
#c# 2015-11-03 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A052294

#Straightforward implementation using Raku's is-prime built-in subroutine.
sub is-pernicious(Int $n --> Bool) {
    is-prime [+] $n.base(2).comb;
}

say my $p1 = (grep &is-pernicious, 0 .. *)[^25];
say my $p2 = grep &is-pernicious, 888_888_877 .. 888_888_888;

use Test;
is $p1, <3 5 6 7 9 10 11 12 13 14 17 18 19 20 21 22 24 25 26 28 31 33 34 35 36>, 'First 25';
is $p2, <888888877 888888878 888888880 888888883 888888885 888888886>, 'Some much bigger ones'; 
