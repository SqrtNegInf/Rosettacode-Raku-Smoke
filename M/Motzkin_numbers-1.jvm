#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Motzkin_numbers
#c# 2021-08-14 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# Using binomial coefficients and Catalan numbers

my @res;

constant \C = 1, |[\√ó] (2, 6 ‚Ä¶ ‚àû) Z/ 2 .. *;

sub binomial { [√ó] ($^n ‚Ä¶ 0) Z/ 1 .. $^p }

my \Mfunc = 1, |(1..‚àû).map: -> \n { sum ^n .map( -> \k { C[k] √ó binomial n, 2√ók } ) };

@res.push: " ùêß          ùêå[ùêß]            Prime?";
Mfunc[^42].kv.map: { @res.push: sprintf "%2d %24s  %s", $^k, $^v, $v.is-prime };

.say for @res;

my $ref = q:to/END/;
 ùêß          ùêå[ùêß]            Prime?
 0                        1  False
 1                        1  False
 2                        2  True
 3                        4  False
 4                        9  False
 5                       21  False
 6                       51  False
 7                      127  True
 8                      323  False
 9                      835  False
10                     2188  False
11                     5798  False
12                    15511  True
13                    41835  False
14                   113634  False
15                   310572  False
16                   853467  False
17                  2356779  False
18                  6536382  False
19                 18199284  False
20                 50852019  False
21                142547559  False
22                400763223  False
23               1129760415  False
24               3192727797  False
25               9043402501  False
26              25669818476  False
27              73007772802  False
28             208023278209  False
29             593742784829  False
30            1697385471211  False
31            4859761676391  False
32           13933569346707  False
33           40002464776083  False
34          114988706524270  False
35          330931069469828  False
36          953467954114363  True
37         2750016719520991  False
38         7939655757745265  False
39        22944749046030949  False
40        66368199913921497  False
41       192137918101841817  False
END

use Test;
is @res.join("\n"), chomp $ref;
