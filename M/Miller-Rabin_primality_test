#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Miller%E2%80%93Rabin_primality_test
#c# 2015-11-22 <RC
#m# MOAR: OK
#j#  JVM: OK

srand 123456;

# from 'M/Modular_exponentiation'
sub expmod(Int $a is copy, Int $b is copy, $n) {
	my $c = 1;
	repeat while $b div= 2 {
		($c ×= $a) %= $n if $b % 2;
		($a ×= $a) %= $n;
	}
	$c
}

subset PrimeCandidate of Int where { $_ > 2 and $_ % 2 }

my Bool multi sub is_prime(Int $n, Int $k)            { return False }
my Bool multi sub is_prime(2, Int $k)                 { return True  }
my Bool multi sub is_prime(PrimeCandidate $n, Int $k) {
	my ($s, $d) = 0, $n - 1;

	while $d %% 2 { $d div= 2; $s++ }

	for (2 ..^ $n).pick($k) -> $a {
		my $x = expmod($a, $d, $n);

		next if $x == 1 | $n - 1;          # not slower
		#next if $x == 1 or $x == $n - 1;

		for 1 ..^ $s {
			$x = $x ** 2 mod $n;
			return False if $x == 1;
			last if $x == $n - 1;
		}
		return False if $x !== $n - 1;
	}
	True
}

say my $out = (1..1000).grep({ is_prime($_, 10) }).join: ', '; 

my $ref = '2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997';

use Test;
is $out, $ref;
