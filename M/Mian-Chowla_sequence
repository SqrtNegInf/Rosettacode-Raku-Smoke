#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Mian-Chowla_sequence
#c# 2019-03-12 <RC, 2019-03-22 <RC, 2019-06-29 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# OEIS:A005282 a(1) = 1; for n>1, a(n) = smallest number > a(n-1) such that the pairwise sums of elements are all distinct.
#n# B_2 sequences, see also: A010672, A011185, A025582
#n# changes make this twice as fast

my @res;

my @mian-chowla = 1, |(2..Inf).map: -> $test {
    state $index = 1;
    state %sums  = 2 => 1;
    my $next;
    my %these;
    @mian-chowla[^$index].map: { ++$next and last if %sums{$_ + $test}:exists; ++%these{$_ + $test} };
    next if $next;
    ++%sums{$test + $test}; 
    %sums.push: %these;
    ++$index;
    $test
};

@res.push: "First 30 terms in the Mian–Chowla sequence:\n" ~ @mian-chowla[^30];
@res.push: "\nTerms 91 through 100:\n" ~ @mian-chowla[90..99];

.say for @res;

my $ref = q:to/END/;
First 30 terms in the Mian–Chowla sequence:
1 2 4 8 13 21 31 45 66 81 97 123 148 182 204 252 290 361 401 475 565 593 662 775 822 916 970 1016 1159 1312

Terms 91 through 100:
22526 23291 23564 23881 24596 24768 25631 26037 26255 27219
END

use Test;
is @res.join("\n"), chomp $ref;
