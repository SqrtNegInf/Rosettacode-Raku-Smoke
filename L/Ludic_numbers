#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Ludic_numbers
#c# 2016-01-24 <RC
#m# MOAR: OK
#j#  JVM: OK

my @res;

constant @ludic = gather {
        my @taken = take 1;
        my @rotor;

        for 2..* -> $i {
            loop (my $j = 0; $j < @rotor; $j++) {
                --@rotor[$j] or last;
            }
            if $j < @rotor {
                @rotor[$j] = @taken[$j+1];
            }
            else {
                push @taken, take $i;
                push @rotor, @taken[$j+1];
            }
        }
    }

@res.push: @ludic[^25];
@res.push: "Number of Ludic numbers <= 1000: "~ +(@ludic ...^ * > 1000);
@res.push: "Ludic numbers 2000..2005: "~ @ludic[1999..2004];

my \l250 = set @ludic ...^ * > 250;
@res.push: "Ludic triples < 250: "~ gather
    for l250.keys.sort -> $a {
        my $b = $a + 2;
        my $c = $a + 6;
        take "<$a $b $c>" if $b ∈ l250 and $c ∈ l250;
    }

my $ref = qq:to/END/;
1 2 3 5 7 11 13 17 23 25 29 37 41 43 47 53 61 67 71 77 83 89 91 97 107
Number of Ludic numbers <= 1000: 142
Ludic numbers 2000..2005: 21475 21481 21487 21493 21503 21511
Ludic triples < 250: <1 3 7> <5 7 11> <11 13 17> <23 25 29> <41 43 47> <173 175 179> <221 223 227> <233 235 239>
END

.say for @res;

use Test;
is @res.join("\n"), chomp $ref;
