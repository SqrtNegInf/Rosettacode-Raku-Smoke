#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Lantern_Problem
#c# 2022-05-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# OEIS:A022915 Multinomial coefficients (0, 1, ..., n)! = C(n+1,2)!/(0!*1!*2!*...*n!)

my @res;

unit sub MAIN(@columns = (1, 2, 3) );

my @sequences = @columns
              . pairs
              . map({ (.key+1) xx .value })
              . flat
              . permutations
              . map( *.join(',') )
              . unique;

my @offsets = |0,|(1..@columns).map: { [+] @columns[0..$_-1] };
my $line;
my @matrix;
  for ^@columns.max -> $i {
    for ^@columns -> $j {
      my $value = $i < @columns[$j] ?? ($i+@offsets[$j]+1) !! Nil;
      @matrix[$j][$i] = $value if $value;;
      $line ~= "   " ~ ($value // " ");
    }
    @res.push: $line;
    $line = '';
}

@res.push: "There are {+@sequences} possible takedown sequences:";

for @sequences».split(',') -> @seq {
    my @work = @matrix».clone;
    my $seq = '[';
    for @seq -> $col {
        $seq ~= @work[$col-1].pop ~ ',';
    }
    $seq ~~ s/','$/]/;
    @res.push: $seq;
}

.say for @res;

my $ref = q:to/END/;
   1   2   4
       3   5
           6
There are 60 possible takedown sequences:
[1,3,2,6,5,4]
[1,3,6,2,5,4]
[1,3,6,5,2,4]
[1,3,6,5,4,2]
[1,6,3,2,5,4]
[1,6,3,5,2,4]
[1,6,3,5,4,2]
[1,6,5,3,2,4]
[1,6,5,3,4,2]
[1,6,5,4,3,2]
[3,1,2,6,5,4]
[3,1,6,2,5,4]
[3,1,6,5,2,4]
[3,1,6,5,4,2]
[3,2,1,6,5,4]
[3,2,6,1,5,4]
[3,2,6,5,1,4]
[3,2,6,5,4,1]
[3,6,1,2,5,4]
[3,6,1,5,2,4]
[3,6,1,5,4,2]
[3,6,2,1,5,4]
[3,6,2,5,1,4]
[3,6,2,5,4,1]
[3,6,5,1,2,4]
[3,6,5,1,4,2]
[3,6,5,2,1,4]
[3,6,5,2,4,1]
[3,6,5,4,1,2]
[3,6,5,4,2,1]
[6,1,3,2,5,4]
[6,1,3,5,2,4]
[6,1,3,5,4,2]
[6,1,5,3,2,4]
[6,1,5,3,4,2]
[6,1,5,4,3,2]
[6,3,1,2,5,4]
[6,3,1,5,2,4]
[6,3,1,5,4,2]
[6,3,2,1,5,4]
[6,3,2,5,1,4]
[6,3,2,5,4,1]
[6,3,5,1,2,4]
[6,3,5,1,4,2]
[6,3,5,2,1,4]
[6,3,5,2,4,1]
[6,3,5,4,1,2]
[6,3,5,4,2,1]
[6,5,1,3,2,4]
[6,5,1,3,4,2]
[6,5,1,4,3,2]
[6,5,3,1,2,4]
[6,5,3,1,4,2]
[6,5,3,2,1,4]
[6,5,3,2,4,1]
[6,5,3,4,1,2]
[6,5,3,4,2,1]
[6,5,4,1,3,2]
[6,5,4,3,1,2]
[6,5,4,3,2,1]
END

use Test;
is @res.join("\n"), chomp $ref;
