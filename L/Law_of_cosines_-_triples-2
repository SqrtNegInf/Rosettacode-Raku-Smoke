#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Law_of_cosines_-_triples
#c# 2018-09-23 >RC
#m# MOAR: OK
#j#  JVM: OK 
#n# 'elegant' version (no longer on RC)
#n# NB: three different uses of 'X' meta-op
#n# no extra-credit, lesson learned: 'X' operator is expensive

use Sort::Naturally;

my @res;

sub triples ($n, @angles) {
    my $sq-as-set = set my @squares = 1..$n X**2; # or: (1..$n) >>**>> 2  or: (1..$n)»²
    my %triples; my %c2;
    for flat (@squares X @squares).grep: {.[0] <= .[1]} -> $a2, $b2 {
        (my $a, my $b) = ($a2,$b2)».sqrt».floor; 
        my $ab = $a × $b;
        %c2{@angles} = $a2 + $b2 X+ 0, -$ab, $ab; 
        %triples{$_}{~sort $a, $b, %c2{$_}.sqrt}++ if %c2{$_} ∈ $sq-as-set for @angles;
    }
    %triples;
}

my $n = 13;
say "Integer triangular triples for sides 1..$n:";
my %itt = triples($n, (90, 60, 120));
for %itt.keys.sort: {+%itt{$^a}} -> $angle {
    @res.push: sprintf "Angle %3d° has %2d solutions: %s", $angle, +%itt{$angle}, %itt{$angle}.keys.sort(&naturally).join(', ');
}

.say for @res;

my $ref = qq:to/END/;
Angle 120° has  2 solutions: 3 5 7, 7 8 13
Angle  90° has  3 solutions: 3 4 5, 5 12 13, 6 8 10
Angle  60° has 15 solutions: 1 1 1, 2 2 2, 3 3 3, 3 7 8, 4 4 4, 5 5 5, 5 7 8, 6 6 6, 7 7 7, 8 8 8, 9 9 9, 10 10 10, 11 11 11, 12 12 12, 13 13 13
END

use Test; 
is @res.join("\n"), chomp $ref;
