#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Lucky_and_even_lucky_numbers
#c# 2016-05-12 <>RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A000959 lucky numbers
#n# OEIS:A045954 even lucky numbers 

sub luck(\a,\b) {
    gather {
	my @taken = take a;
	my @rotor;
	my $i = b;

	loop {
	    loop (my $j = 0; $j < @rotor; $j++) {
		--@rotor[$j] or last;
	    }
	    if $j < @rotor {
		@rotor[$j] = @taken[$j+1];
	    }
	    else {
		push @taken, take $i;
		push @rotor, $i - @taken;
	    }
	    $i += 2;
	}
    }
}

constant @lucky = luck(1,3);
constant @evenlucky = luck(2,4);

subset Luck where m:i/^ 'even'? 'lucky' $/;

multi MAINly (Int $num where * > 0) {
    say @lucky[$num-1];
}

multi MAINly (Int $num where * > 0, ',', Luck $howlucky = 'lucky') {
    say @::(lc $howlucky)[$num-1];
}

multi MAINly (Int $first where * > 0, Int $last where * > 0, Luck $howlucky = 'lucky') {
    say @::(lc $howlucky)[$first-1 .. $last - 1];
}

multi MAINly (Int $min where * > 0, Int $neg-max where * < 0, Luck $howlucky = 'lucky') {
    say grep * >= $min, (@::(lc $howlucky) ...^ * > abs $neg-max);
}

use Test;
is @lucky[^20], '1 3 7 9 13 15 21 25 31 33 37 43 49 51 63 67 69 73 75 79';
is (@evenlucky[^20]), '2 4 6 10 12 18 20 22 26 34 36 42 44 50 52 54 58 68 70 76';
is @lucky[1000], '8827';
