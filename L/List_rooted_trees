#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/List_rooted_trees
#c# 2016-05-23 <RC
#m# MOAR: OK
#j#  JVM: OK
#n# OEIS:A000081

sub expand-tree ( Bag $tree ) {
    bag(bag(bag()) ⊎ $tree) ⊎
    [⊎] (
        $tree.keys ==> map {
            $^a.&expand-tree.map: * ⊎ ( $tree (-) bag($^a) )
        }
    );
}

sub expand-trees ( Bag $trees ) {
    [⊎] $trees.keys.map:  { $_.&expand-tree } ;
}      

my $n = 5;
my @res; my $line;
for ( bag(), bag(bag()), *.&expand-trees ... * )[$n] {
    #@res.push: ++$ ~ ". " ~ $_.gist;
    @res.push: $_.gist;
};

.put for @res.sort;

# The Bag Bag(Bag(Bag()), Bag()(2)) coresponds with ((())()()). 
# There are two independent ways how we can get it by nesting 4 Bags. (unclear, so we over-count by 1?)
my $ref = q:to/END/;
Bag() => 3
Bag(Bag()(2)) => 1
Bag(Bag()(3)) => 1
Bag(Bag()(4)) => 1
Bag(Bag()) => 4
END

use Test;
is @res.sort.join("\n"), chomp $ref;


