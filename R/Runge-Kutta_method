#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Runge-Kutta_method
#c# 2016-03-25 <>RC
#m# MOAR: OK
#j#  JVM: OK

use Test;

sub runge-kutta(&yp) {
    return -> \t, \y, \δt {
        my $a = δt × yp( t, y );
        my $b = δt × yp( t + δt/2, y + $a/2 );
        my $c = δt × yp( t + δt/2, y + $b/2 );
        my $d = δt × yp( t + δt, y + $c );
        ($a + 2×($b + $c) + $d) / 6;
    }
}

constant δt = .1;
my &δy = runge-kutta { $^t × sqrt($^y) };

loop (
    my ($t, $y) = (0, 1);
    $t <= 10;
    ($t, $y) »+=« (δt, δy($t, $y, δt))
    #$t, $y  Z[+=] δt, δy($t, $y, δt) # fails, cf: N/N-body_problem.0 (also fails), S/Smallest_enclosing_circle_problem (works)
) {
    printf "y(%2d) =%12f ±%e\n", $t, $y, abs($y - ($t² + 4)² / 4²)
    if $t.narrow ~~ Int;
    if $t.narrow == 0  { is $y, 1; }
    if $t.narrow == 1  { is-approx $y, 1.56249985427811; }
    if $t.narrow == 10 { is-approx $y, 675.99994901671; }
}

