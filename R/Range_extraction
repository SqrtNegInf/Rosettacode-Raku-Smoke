#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Range_extraction
#c# 2015-10-27 <RC
#m# MOAR: OK
#j#  JVM: OK

sub range-extraction (*@ints) {
    my $prev = âˆž; # was NaN;
    my @ranges;

    for @ints -> $int {
        if $int == $prev + 1 {
            @ranges[*-1].push: $int
        } else {
            @ranges.push: [$int]
        }
        $prev = $int
    }
    join ',', @ranges.map: -> @r { @r > 2 ?? "@r[0]-@r[*-1]" !! @r }
}

my @range1 = qw<-6 -3 -2 -1 0 1 3 4 5 7 8 9 10 11 14 15 17 18 19 20>;
say range-extraction @range1;

my @range2 = qw<0  1  2  4  6  7  8 11 12 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 35 36 37 38 39>;
say range-extraction(@range2);

my $ref1 = '-6,-3-1,3-5,7-11,14,15,17-20';
my $ref2 = '0-2,4,6-8,11,12,14-25,27-33,35-39';

use Test;
is (range-extraction @range1), $ref1;
is (range-extraction @range2), $ref2;
