#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Rosetta_Code/Rank_languages_by_popularity
#t# network
#c# 2017-01-16 <RC
#m# MOAR: OK
#j#  JVM: BROKEN
#n# SSL lib issue even without 'https' URL?
die 'BROKEN on Mac-Pro (OK in iMac)' if qx/uname -a/ ~~ /'Mac-Pro'/;

BEGIN { die 'ecosystem...' if $*VM ~~ /jvm/; }  # wait for zef-j

use HTTP::UserAgent;
use JSON::Tiny;

#my $api = MediaWiki::API->new( { api_url => 'https://rosettacode.org/w/api.php' } );

my @res.push: $_ for
    mediawiki-query('https://rosettacode.org/w', 'pages',
                    generator => 'categorymembers',
                    gcmtitle  => "Category:Programming Languages",
                    prop      => 'categoryinfo')\

    .map({ %( name  => .<title>.subst(/^'Category:'/, ''),
              count => .<categoryinfo><pages> || 0 ) })

    .sort({ -.<count>, .<name> })

    .map({ last if .<count>==0; sprintf "%3d. %3d - %s", ++$, .<count name> });

.say for @res[0..15]; say '...'; .say for @res[*-15..*];

sub mediawiki-query ($site, $type, *%query) {
    my $url = "$site/api.php?" ~ uri-query-string(
        :action<query>, :format<json>, :gcmlimit<350>, :rawcontinue(), |%query);
    my $continue = '';
    my $client = HTTP::UserAgent.new;

    gather loop {
        my $response = $client.get("$url&$continue");

        my $data = from-json($response.content);
        take $_ for $data.<query>.{$type}.values;

        $continue = uri-query-string |($data.<query-continue>{*}».hash.hash or last);
    }
}

sub uri-query-string (*%fields) {
    %fields.map({ "{.key}={uri-encode .value}" }).join("&")
}

sub uri-encode ($str) {
    $str.subst(/<[\x00..\xff]-[a..zA..Z0..9_.~-]>/, *.ord.fmt('%%%02X'), :g)
}

use Test;
@res.join("\n") ~~ m/ (\d+) ' - Raku'/;
ok 1219 ≤ +$0;  # since Raku usage will only go up...

#`<
  1. 1006 - Kotlin
  2. 977 - Racket
  3. 960 - Python
  4. 946 - Raku
…
598.   1 - Ya
>
