#!/usr/bin/env raku
#u# https://rosettacode.org/wiki/Radical_of_an_integer
#c# 2023-05-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# very, very slow, limit testing

my @res;

use Prime::Factor;
use List::Divvy;
use Lingua::EN::Numbers;

sub radical ($_) { [×] unique .&prime-factors }

@res.push: "First fifty radicals:\n" ~
  (1..50).map({.&radical}).batch(10)».fmt("%2d").join: "\n";
@res.push: '';

@res.push: sprintf "Radical for %7s => %7s", .&comma, comma .&radical
  for 99999, 499999, 999999;

my %rad = 1 => 1;
my $limit = 1e4.Int;

%rad.push: $_ for (2..$limit).map: {(unique .&prime-factors).elems => $_};

@res.push: "\nRadical factor count breakdown, 1 through {comma $limit}:";
@res.push: .key ~ " => {comma +.value}" for sort %rad;

my @primes = (2..$limit).grep: &is-prime;

my int $powers;
@primes.&upto($limit.sqrt.floor).map: -> $p {
   for (2..*) { ($p ** $_) < $limit ?? ++$powers !! last }
}

@res.push: qq:to/RADICAL/;

    Up to {comma $limit}:
    Primes: {comma +@primes}
    Powers:    $powers
    Plus 1:      1
    Total:  {comma 1 + $powers + @primes}
    RADICAL

.say for @res;

my $ref = q:to/END/;
First fifty radicals:
 1  2  3  2  5  6  7  2  3 10
11  6 13 14 15  2 17  6 19 10
21 22 23  6  5 26  3 14 29 30
31  2 33 34 35  6 37 38 39 10
41 42 43 22 15 46 47  6  7 10

Radical for  99,999 =>  33,333
Radical for 499,999 =>   3,937
Radical for 999,999 => 111,111

Radical factor count breakdown, 1 through 10,000:
1 => 1,281
2 => 4,097
3 => 3,695
4 => 894
5 => 33

Up to 10,000:
Primes: 1,229
Powers:    51
Plus 1:      1
Total:  1,281

END

use Test;
is @res.join("\n"), chomp $ref;
