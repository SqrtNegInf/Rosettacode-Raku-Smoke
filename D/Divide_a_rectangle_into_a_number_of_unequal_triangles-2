#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Divide_a_rectangle_into_a_number_of_unequal_triangles
#c# 2022-01-26 <RC, 2022-01-28 <RC
#m# MOAR: OK
#j# JVM:  OK

my @res;

# The first triangle bisects the rectangle via the diagonal. The rest of them all got one vertex at the origin and a side defined by ratios of numbers from an ascending positive integer sequence.
#
# Proof :
#
#    H---A-----B-------C---------D-----------E
#    |                                       |
#    |                                       |
#    |                                       |
#    O---------------------------------------L
#
#    ▲OEL is unique as its area is the sum of the rest.
#
#    The sum of length on sides for ▲OED > ▲ODC > ... > ▲OAH
#    so no pairs of any will meet the SSS congruence requirement. 

sub UnequalDivider (\L,\H,\N where N > 2) { 
 
   my \sum = $ = 0 ; my \part = $ = 0 ; my @sequence = (N^...1) ; 
 
   loop {                                               #   if  ▲OHA ~ ▲OEL    
      sum  = @sequence.sum;                             #   increase 1st term 
      @sequence[0]*L*L/sum == H*H ?? (@sequence[0] +=1) !! last 
   }
 
   (  [ (0,0), (L,H), (L,0) ],  ).Array.append: @sequence.map: -> \chunk {
      [ (0,0), (L*part/sum,H), (L*(part+=chunk)/sum,H) ] ;
   } 
}

.say for my @V = UnequalDivider(1000,500,5);
@res.push: $_.gist for @V;

my $ref = q:to/END/;
[(0 0) (1000 500) (1000 0)]
[(0 0) (0 500) (400 500)]
[(0 0) (400 500) (700 500)]
[(0 0) (700 500) (900 500)]
[(0 0) (900 500) (1000 500)]
END

use Test;
is @res.join("\n"), chomp $ref;
