#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Dating_agency
#c# 2021-11-10 <RC
#m# MOAR: OK
#j# JVM:  BROKEN

my @res;

use Digest::SHA1::Native;

my %ladies = < Alice Beth Cecilia Donna Eunice Fran Genevieve Holly Irene Josephine Kathlene Loralie Margaret
               Nancy Odelle Pamela Quinci Rhonda Stephanie Theresa Ursula Victoria Wren Yasmine Zoey >.map: -> $name {
    $name => {
        loves   => :16(sha1-hex($name).substr(0,4)),
        lovable => :16(sha1-hex($name).substr(*-4))
    }
}

my %sailors = < Ahab Brutus Popeye >.map: -> $name {
    $name => {
        loves   => :16(sha1-hex($name).substr(0,4)),
        lovable => :16(sha1-hex($name).substr(*-4))
    }
}

for %sailors.sort( *.key ) -> $sailor {
    @res.push: sprintf("%6s will like: ", $sailor.key) ~
               join ', ', sort my @likes = %ladies.sort( { abs $sailor.value.<loves> - .value.<loves> } ).head(10)».key;
    @res.push: '     Is liked by: ' ~
               join ', ', sort my @liked = %ladies.sort( { abs $sailor.value.<lovable> - .value.<lovable> } ).head(10)».key;
    my %matches;
    for @liked.reverse Z, (1..10) { %matches{.[0]} += .[1] };
    for @likes.reverse Z, (1..10) { %matches{.[0]} += .[1] };
    #@res.push: 'Best match: ' ~ %matches.max( *.value ).key; # a tie in 1st group
    @res.push: 'Best match(s): ' ~ %matches.grep(*.value == %matches.values.max)».key.sort.join(', '); 
    @res.push: '';
}

.say for @res;

my $ref = q:to/END/;
  Ahab will like: Alice, Cecilia, Donna, Eunice, Fran, Genevieve, Holly, Irene, Ursula, Zoey
     Is liked by: Alice, Eunice, Genevieve, Kathlene, Nancy, Odelle, Pamela, Rhonda, Theresa, Victoria
Best match(s): Eunice, Genevieve

Brutus will like: Beth, Josephine, Kathlene, Margaret, Nancy, Odelle, Quinci, Rhonda, Theresa, Wren
     Is liked by: Alice, Eunice, Fran, Holly, Loralie, Margaret, Quinci, Victoria, Wren, Yasmine
Best match(s): Quinci

Popeye will like: Alice, Cecilia, Donna, Genevieve, Loralie, Nancy, Stephanie, Theresa, Yasmine, Zoey
     Is liked by: Alice, Eunice, Fran, Holly, Loralie, Margaret, Quinci, Victoria, Wren, Yasmine
Best match(s): Loralie
END

use Test;
is @res.join("\n"), $ref;
