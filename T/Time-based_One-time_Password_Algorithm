#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Time-based_One-time_Password_Algorithm
#c# 2019-03-31 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# only half-tested
#n# 2022-12-18 inlined HMAC code (because of troubles getting Digest::HMAC installed)

my @res;

# This is a minimal attempt that covers only the "Time-based" part of the requirement.
# https://github.com/retupmoca/P6-Digest-HMAC

use Digest::SHA1;
#use Digest::HMAC;

sub hmac($key is copy, $message is copy, &hash, $blocksize = 64) is export {
    $key = $key.encode('ascii') unless $key ~~ Blob;
    $message = $message.encode('ascii') unless $message ~~ Blob;

    if $key.list.elems > $blocksize {
        $key = hash($key);
    }
    if $key.list.elems < $blocksize {
        $key ~= Buf.new(0x00 xx ($blocksize - $key.list.elems));
    }

    # $i_key_pad ~ $message
    my $inner-buf = hash((Buf.new(0x36 xx $blocksize) ~^ $key) ~ $message);

    # $o_key_pad ~ $inner
    return hash((Buf.new(0x5c xx $blocksize) ~^ $key) ~ $inner-buf);
}

sub hmac-hex($key, $message, &hash, $blocksize = 64) is export {
    return hmac($key, $message, &hash, $blocksize).listÂ».fmt("%02x").join;
}

sub totp (Str \secret, DateTime \counter, Int \T0=0, Int \T1=30 --> Str) {
   my \key = ( counter - DateTime.new(T0) ).Int div T1;   
   return hmac-hex(key.Str, secret, &sha1).substr(0,5) # first 5 chars of sha1
}

my $message = "show me the monKey";

@res.push: "Deterministic output at "~ DateTime.new(2177452800)~ " with fixed checks,";
loop (my $t = 2177452800 ; $t < 2177452900 ; $t+= 17 ) { # Y2038 safe
   @res.push: totp $message, DateTime.new($t);
}

#@res.push: "Current time output at ", DateTime.new(now)~ " with random checks,";
#loop (my $n = 0 ; $n < 6 ; $n++, sleep (13..23).roll ) {
#   say totp $message, DateTime.new(now);
#} 

.say for @res;

my $ref = q:to/END/;
Deterministic output at 2039-01-01T00:00:00Z with fixed checks,
34ca2
acfa3
950fc
950fc
a2d4e
a2d4e
END
#Current time output at 2019-03-31T13:14:19.635127Z with random checks,
#9e6f3
#2b5bc
#2b5bc
#836ce
#95955
#a79e1

use Test;
is @res.join("\n"), chomp $ref;
