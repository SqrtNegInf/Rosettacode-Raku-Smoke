#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Best_shuffle
#c# 2016-04-17 <RC, 2022-08-18 >RC
#m# MOAR: OK
#j#  JVM: OK

srand 123456;

my @res.push: sprintf "%s, %s, (%d)", $_, best-shuffle $_ for <abracadabra seesaw elk grrrrrr up a>;
.say for @res;

sub best-shuffle(Str $orig) {
    my @s = $orig.comb;
    my @t = @s.pick: *;

    for flat ^@s X ^@s -> \i,\j {
        if i != j and @t[i] ne @s[j] and @t[j] ne @s[i] {
            @t[i,j] = @t[j,i] and last
        }
    }

    my $count = 0;
    for @t.kv -> $k,$v {
        ++$count if $v eq @s[$k]
    }

    @t.join, $count;
}

my $moar = qq:to/END/;
abracadabra, barbaardcaa, (3)
seesaw, eswase, (0)
elk, kel, (0)
grrrrrr, rrrrgrr, (5)
up, pu, (0)
a, a, (1)
END

my $jvm = qq:to/END/;
abracadabra, daaracarabb, (0)
seesaw, eswesa, (0)
elk, lke, (0)
grrrrrr, rrrgrrr, (5)
up, pu, (0)
a, a, (1)
END

use Test;
my $ref = $*VM ~~ /jvm/ ?? $jvm !! $moar;
is @res.join("\n"), chomp $ref;
