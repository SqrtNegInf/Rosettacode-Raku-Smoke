#!/usr/bin/env perl6
#u# http://rosettacode.org/wiki/Balanced_ternary
#c# 2015-11-17 <>RC, 2017-02-01 >RC
#m# MOAR: OK
#j#  JVM: OK
#n# note that final line of output has Unicode 'minus sign' (purely cosmetic, not used in code)

class BT {
    has @.coeff;

    my %co2bt = '-1' => '-', '0' => '0', '1' => '+';
    my %bt2co = %co2bt.invert;

    multi method new (Str $s) {
    	self.bless(coeff => %bt2co{$s.flip.comb}); # DH GLR change
    }
    multi method new (Int $i where $i >= 0) {
    	self.bless(coeff => carry $i.base(3).comb.reverse); # DH GLR change
    }
    multi method new (Int $i where $i < 0) {
    	self.new(-$i).neg;
    }

    method Str () { %co2bt{@!coeff}.join.flip }
    method Int () { [+] @!coeff Z× (1,3,9...*) }

    multi method neg () {
    	self.new: coeff => carry self.coeff X× -1;
    }
}

sub carry (*@digits is copy) {
    loop (my $i = 0; $i < @digits; $i++) {
	while @digits[$i] < -1 { @digits[$i] += 3; @digits[$i+1]--; }
	while @digits[$i] > 1  { @digits[$i] -= 3; @digits[$i+1]++; }
    }
    pop @digits while @digits and not @digits[*-1];
    @digits;
}

multi prefix:<-> (BT $x) { $x.neg }

multi infix:<+> (BT $x, BT $y) {
    my ($b,$a) = sort +*.coeff, ($x, $y); # DH b7c6e73 group x/y explicitly; 'flat' also works
   #my ($b,$a) = ($x, $y).sort: +*.coeff; # or this
    BT.new: coeff => carry ($a.coeff Z+ |$b.coeff, |(0 xx $a.coeff - $b.coeff)); # DH GLR change
}

multi infix:<-> (BT $x, BT $y) { $x + $y.neg }

multi infix:<×> (BT $x, BT $y) {
    my @x = $x.coeff;
    my @y = $y.coeff;
    my @z = 0 xx @x+@y-1;
    my @safe;
    for @x -> $xd {
        @z = @z Z+ |(@y X× $xd), |(0 xx @z-@y); # DH GLR change
	    @safe.push: @z.shift;
    }
    BT.new: coeff => carry @safe, @z;
}

my $a = BT.new: "+-0++0+";
my $b = BT.new: -436;
my $c = BT.new: "+-++-";
my $x = $a × ( $b - $c );

my @res;
@res.push: 'a == ' ~ $a.Int;
@res.push: 'b == ' ~ $b.Int;
@res.push: 'c == ' ~ $c.Int;
@res.push: "a × (b − c) == {~$x} == " ~ $x.Int;
.say for @res;

my $ref = qq:to/END/;
a == 523
b == -436
c == 65
a × (b − c) == ----0+--0++0 == -262023
END

use Test;
is @res.join("\n"), chomp $ref;
