#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bioinformatics/Subsequence
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  BROKEN
#n# new-disp 'srand' shift

srand 123;

my @res;

use String::Splice:ver<0.0.3>;

my $line = 80;

my $haystack = [~] <A C G T>.roll($line Ã— 8);

@res.push: 'Needle: ' ~ my $needle = [~] <A C G T>.roll(4);

my $these = $haystack ~~ m:g/<$needle>/;

my @match = $these.map: { .from, .pos }

@res.push: sprintf "From: %3s to %3s", |$_ for @match;

say join "\n", @res;

my $disp = $haystack.comb.batch($line)Â».join.join("\n");

for @match.reverse {
    $disp.=&splice(.[1] + .[1] div $line, "\e[0m" );
    $disp.=&splice(.[0] + .[0] div $line, "\e[31m");
}

my $moar1 = q:to/END/;
Needle: TAAG
From:  10 to  14
From: 158 to 162
From: 354 to 358
From: 528 to 532
END

my $jvm1 = q:to/END/;
Needle: AACG
From: 250 to 254
From: 536 to 540
From: 547 to 551
From: 611 to 615
END

my $moar2 = q:to/END/;
TCCCAATAGC[31mTAAG[0mCCCTCTGCTACTATCAAGGAGGGGTAGCGGGGAGGACGATCTGGTGCTCCGTCCAGTATCGCCTTG
GTCCACGGGGCGTTTAGCAGACCACGTGACTCATGATATGGAACTCTGGTTGGGGCACGGGCTAGCAGACCACTGGTG[31mTA
AG[0mGTTTGTCGCTCCCTCTGCAACGTGTTTACATGAGTATCGGATTCTCTGTCCTGGGGGTATTTGACGCGGCAAGGGACT
CTCGACGGACTTTGGGGAACCGCGATCGTTTTCTGCCACCATCCAGACCGTAAAGGATCCCCTAATCCGTAGGGCTTGGG
AGGATTTCAGAGACCTCAATCCTTTGACTCGCCC[31mTAAG[0mTGAGGGAAGCACATAGAGAGCCTGACCGCTCCGGGAGGTAAA
CGGATCCCCCCCTCGCTTCTACAATGAGGACGTGATATTCCCGCTAGACTCCGACAATGTCCTAAAGACAGGTCTGAGGC
CTCTTCAAGGGGAGAGACCAATGTCTTCGTAGTACTTACCGAGTCTGA[31mTAAG[0mTATCGTGATCTGCGATGTTAAAGCTAGG
GTCTTGATTGGGGTGGTTAGACACCGCATAATCGCCCTACGGTTTGACCGTAGTGAGGATCTTCTCAATAGAGGGACAGA
END

my $jvm2 = q:to/END/;
GTCGTTGATGTATAAACTGCCACCCAGAGGATCGGGGCAAATGTTGGACGCTGCTCAGAAGGAGCCCATCCGAATTTTAC
ATGGACAGTAGTCCGTTGTGGCAATTCAGCCAACAAACCACCCACTCTTAAGACTATACTCATGTGAGTTGTACAGTTAG
ACACACAACTTTAACTTCCAAATCAAATTTGTTAAGTTGGCACAGAAGTGGGATGTGGACCGACCCCCGTTGGCTATTGC
GACCCGATTA[31mAACG[0mCTCGTCCGTAGCTCTCGCGAGTTCAAGTAAGTCCCGTGAGACATAATTCCGCACGAAATCTAATCT
AGTGCCTAGATGAAGCTGTCTATAGACAGGCAGCAGCCATCTGCATTCGAATAAAGCAGGTACAAGGACCCCAGTCGTGG
GCATGAAGCTACGCACTTTCCTTCTCGATGCTGGTCAGGCGTTACCTCTATTCCGATGATAATCACTGTAAACTTACCCA
TAGAACTCCGCATAAACATGTAGTGAGGAATAATATTTGGTCGAGCGATTATAACT[31mAACG[0mGAATCAC[31mAACG[0mATGATTAAC
CACAGTAATCTGTCACAGGTTCTGAGTCCTGGAAACCGAAATGCGTGCGAA[31mAACG[0mGCACGTGACTACAAAAGGATTGCTT
END

use Test;
if $*VM ~~ /jvm/ {
is @res.join("\n"), chomp $jvm1;
is $disp, chomp $jvm2;
} else {
is @res.join("\n"), chomp $moar1;
is $disp, chomp $moar2;
}
