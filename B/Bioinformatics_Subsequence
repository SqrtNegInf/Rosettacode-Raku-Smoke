#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bioinformatics/Subsequence
#c# 2021-03-22 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2023-02-13 replace call to built-in 'rand' for output stability

my @res;

use myRNG;
my $rng = myRNG.new( :seed(123456) );

use String::Splice:ver<0.0.3+>;

my $line = 80;
my $haystack = [~] <A C G T>[4×$rng.next-rat] xx $line × 8;

@res.push: 'Needle: ' ~ my $needle = [~] <A C G T>[4×$rng.next-rat] xx 4;
my $these = $haystack ~~ m:g/<$needle>/;
my @match = $these.map: { .from, .pos }
@res.push: sprintf "From: %3s to %3s", |$_ for @match;
say join "\n", @res;

my $disp = $haystack.comb.batch($line)».join.join("\n");
for @match.reverse {
    $disp .= &splice(.[1] + .[1] div $line, "\e[0m" );
    $disp .= &splice(.[0] + .[0] div $line, "\e[31m");
}

my $ref = q:to/END/;
Needle: ACGC
From: 521 to 525
From: 625 to 629
END

use Test;
is @res.join("\n"), chomp $ref;
