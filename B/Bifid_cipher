#!/usr/bin/env raku
#u# http://rosettacode.org/wiki/Bifid_cipher
#c# 2022-07-13 <RC
#m# MOAR: OK
#j# JVM:  OK
#n# 2022-12-27 replace call to built-in 'rand' for output stability

my @res;

use myRNG;
my $rng = myRNG.new( :seed(123456) );

sub polybius ($text) {
    my $n = $text.chars.sqrt.narrow;
    $text.comb.kv.map: { $^v => ($^k % $n, $k div $n).join: ' ' }
}

sub encrypt ($message, %poly) {
    %poly.invert.hash{(flat reverse [Z] %poly{$message.comb}».words).batch(2)».reverse».join: ' '}.join
}

sub decrypt ($message, %poly) {
   %poly.invert.hash{reverse [Z] (reverse flat %poly{$message.comb}».words».reverse).batch($message.chars)}.join
}

for 'ABCDEFGHIKLMNOPQRSTUVWXYZ', 'ATTACKATDAWN',
    'BGWKZQPNDSIOAXEFCLUMTHYVR', 'FLEEATONCE',
    (flat '_', '.', 'A'..'Z', 'a'..'z', 0..9).&pickall.join, 'The invasion will start on the first of January 2023.'.subst(/' '/, '_', :g)
   #(flat '_', '.', 'A'..'Z', 'a'..'z', 0..9).pick(*).join, 'The invasion will start on the first of January 2023.'.subst(/' '/, '_', :g)
 -> $polybius, $message {
    my %polybius = polybius $polybius;
    @res.push: "\nUsing polybius:\n\t" ~ $polybius.comb.batch($polybius.chars.sqrt.narrow).join: "\n\t";
    @res.push: "\n  Message : $message";
    @res.push: "Encrypted : " ~ my $encrypted = encrypt $message, %polybius;
    @res.push: "Decrypted : " ~ decrypt $encrypted, %polybius;
}

.say for @res;

my $ref = q:to/END/;

Using polybius:
	A B C D E
	F G H I K
	L M N O P
	Q R S T U
	V W X Y Z

  Message : ATTACKATDAWN
Encrypted : DQBDAXDQPDQH
Decrypted : ATTACKATDAWN

Using polybius:
	B G W K Z
	Q P N D S
	I O A X E
	F C L U M
	T H Y V R

  Message : FLEEATONCE
Encrypted : UAEOLWRINS
Decrypted : FLEEATONCE

Using polybius:
	T _ a t z 1 B H
	I U p C r 8 0 b
	j 5 u L l 2 J x
	M h K d e G 6 W
	P o 7 . y s X i
	S V D N m v F Z
	9 f 4 Y n k g Q
	w E c q A R O 3

  Message : The_invasion_will_start_on_the_first_of_January_2023.
Encrypted : tMXSyXH7jP_TXTdBoPz9j4_P5xPrbs2EoHy8K.UohobshU0luy8kq
Decrypted : The_invasion_will_start_on_the_first_of_January_2023.
END

use Test;
is @res.join('').subst(/<ws>/, '', :g), $ref.subst(/<ws>/, '', :g);
