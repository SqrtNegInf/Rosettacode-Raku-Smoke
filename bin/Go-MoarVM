#!/bin/sh
## update MoarVM backend

# prereq. for fresh Ubuntu VMware image (config with 2Gb)
#  sudo apt upgrade
#  sudo apt install build-essential default-jdk vim git

source $HOME/.profile

# 2022-01-18 see if this still needed [ANSWER: YEP]
# 2022-04-06 how about now?           [Seemingly not...]
# 2022-06-03 re-revert                [and the people responsible for the sacking have been sacked...]
# 2022-12-23 Using 'Go-finish' (which doesn't do this) confirms that still sometimes needed
# 2023-06-03 moar-blead doesn't compile any longer, stick with whatever is current

#cd $HOME/.rakubrew
#bin/rakubrew mode shim

# update Rakudo/MoarVM
#bin/rakubrew build moar-blead >    out.moar  2>    err.moar
#bin/rakubrew switch moar-blead
#bin/rakubrew build zef >    out.zef  2>    err.zef
#bin/rakubrew rehash
#rehash

# [if raku version is static, existing precomp's are OK]
# nuke ALL precomp we can find (or might get the dreaded missing/wrong 'v6c.nqp' error)
#echo 'clear out old precomp files'
#cd ~/.rakubrew/versions/moar-blead
#./install/share/perl6/site/bin/cleanup-precomp
#rm -rf install/share/perl6/core/precomp/*
#./tools/nuke-precomps.raku
#rm -rf $HOME/perl6/Rosetta-Code/lib/.precomp
#rm -rf $HOME/perl6/Rosetta-Code/libtest/.precomp

cd $HOME/perl6/Rosetta-Code
bin/rc-jvm-cleanup
rm -f run/*

# upgrade modules
#bin/Zef-Upgrade

# run them all
echo 'MOAR'
raku -v
bin/rc-moar-parallel [0-Z]/*
#bin/rc-moar-single [0-Z]/*

# track stats
/bin/echo -n `date +%Y-%m-%d` >> meta/rakudo-builds.txt
/bin/echo -n ' '              >> meta/rakudo-builds.txt
raku -v | head -1            >> meta/rakudo-builds.txt
bin/rc-stats 10 > meta/stats.txt

# track 'srand' drift
tail -1 meta/rakudo-builds.txt >> meta/srand-drift.txt
raku -e 'srand 123456; say <A B C D E F G>.roll(1000).join' >> meta/srand-drift.txt

echo ' '
echo 'Comparison of recent runs:'
rc-stats 4 | grep '^20' - | grep -v Welcome | grep -v 'j Secs'

echo ' '
echo 'Task success/failure change over last two runs:'
rc-stats 2 | grep -v '^20' - | pcregrep -v '^\s*$' | grep -v '==' | sortcnt | pcregrep -v '^\s+2'

# keep tabs on status
echo ' '
cd meta
cp -p task.txt task.txt~
$HOME/bin/rotate_log -d logs -b -r -f task.txt
../bin/rc-task-status > task.txt
diff task.txt~ task.txt
cd ..

# see how slow the usual suspects are
echo ' '
bin/rc-timings | sort -r -n > meta/timings.txt
head -10 meta/timings.txt

echo ' '
echo '--'
echo 'Excessive line count in timings (if any)'
wc -l bench/moar/*err | grep -v '^       [34]' | grep -v total
echo '--'

# combine task headers for easy grep
$HOME/bin/grep-paragraph -H '#u# http' [0-Z]/* | $HOME/bin/grep-paragraph -v ReadMe.md - > meta/headers.txt

# leaderboard
echo ' '
head -20 bench/moar/Rosetta_Code_Rank_languages_by_popularity-1.out | $HOME/bin/drop -4

# not a race, not a race, ...
echo ' '
#mv meta/horse-race.txt meta/horse-race.txt~
#bin/rc-horse-race | sort -r > meta/horse-race.txt
#diff meta/horse-race.txt~ meta/horse-race.txt

# non-ascii usage
echo ' '
mv meta/non-ascii.txt meta/non-ascii.txt~
bin/rc-non-ascii [0-Z]/* > meta/non-ascii.txt
diff meta/non-ascii.txt~ meta/non-ascii.txt

# extract list of citations
bin/rc-oeis > meta/OEIS.txt

# latest Rakudo commits 
#echo ' '
#cd $HOME/.rakubrew/versions/moar-blead
#git log | head -100

# push changes to github
echo ' '
echo 'boring stuff...'
echo ' '
$HOME/perl6/Rosetta-Code/bin/Task-git

echo 'Switch rakubrew mode back to env'
cd $HOME
rakubrew mode env
rakubrew mode
